import { getSrcSetImageWidth } from '../../utils/getSrcSetImageWidth';
describe('relative image - getSrcSetImageWidth', () => {
    it('relative image - getSrcSetImageWidth 100% width, max width image < 5 * 768', async () => {
        const srcsetWidth = getSrcSetImageWidth(1440, {
            sWidth: { value: 100, unit: '%' },
            mWidth: { value: 100, unit: '%' },
        });
        expect(srcsetWidth.sWidth).toEqual([768, 1440]);
        expect(srcsetWidth.mWidth).toEqual(srcsetWidth.sWidth);
    });
    it('relative image - getSrcSetImageWidth 100% width, max width image = 5 * 768', async () => {
        const srcsetWidth = getSrcSetImageWidth(3840, {
            sWidth: { value: 100, unit: '%' },
            mWidth: { value: 100, unit: '%' },
        });
        expect(srcsetWidth.sWidth).toEqual([768, 1536, 2304, 3072, 3840]);
        expect(srcsetWidth.mWidth).toEqual(srcsetWidth.sWidth);
    });
    it('relative image - getSrcSetImageWidth 100% width, max width image > 5 * 768', async () => {
        const srcsetWidth = getSrcSetImageWidth(4000, {
            sWidth: { value: 100, unit: '%' },
            mWidth: { value: 100, unit: '%' },
        });
        expect(srcsetWidth.mWidth).toContain(4000);
        expect(srcsetWidth.sWidth).not.toContain(4000);
    });
    it('relative image - getSrcSetImageWidth 25% width desktop, 100% width mobile', async () => {
        const srcsetWidth = getSrcSetImageWidth(800, {
            sWidth: { value: 100, unit: '%' },
            mWidth: { value: 25, unit: '%' },
        });
        expect(srcsetWidth.sWidth[0]).toBe(768);
        expect(srcsetWidth.mWidth[0]).toBe(768 * 0.25);
    });
});
describe('absolute image - getSrcSetImageWidth', () => {
    it('absolute image - getSrcSetImageWidth 100% width mobile, 200px width desktop', async () => {
        const srcsetWidth = getSrcSetImageWidth(1440, {
            sWidth: { value: 100, unit: '%' },
            mWidth: { value: 200, unit: 'px' },
        });
        expect(srcsetWidth.sWidth).toEqual([768, 1440]);
        expect(srcsetWidth.mWidth).toEqual([200, 400, 600, 800, 1000]);
    });
});
