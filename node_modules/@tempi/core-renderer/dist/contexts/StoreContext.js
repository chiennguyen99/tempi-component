'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const StoreStateContext = React__default["default"].createContext(
  {}
);
const StoreProvider = (_a) => {
  var _b = _a, {
    children,
    device = "desktop"
  } = _b, rest = __objRest(_b, [
    "children",
    "device"
  ]);
  var _a2, _b2;
  const menu = (_a2 = rest.globalData) == null ? void 0 : _a2.menu;
  const prefixLangUrl = ((_b2 = rest.globalData) == null ? void 0 : _b2.prefixLangUrl) || "";
  const mappingWebsiteMenuHref = React.useMemo(() => {
    const getHref = (item) => {
      if (!item)
        return;
      if (item.linkType === "LINK")
        return item.href;
      const { slug, isHomepage } = item.page || {};
      if (!slug && !isHomepage)
        return;
      return prefixLangUrl + `/` + (slug || "");
    };
    return menu == null ? void 0 : menu.reduce((acc, curr) => {
      acc[curr == null ? void 0 : curr.id] = getHref(curr);
      return acc;
    }, {});
  }, [JSON.stringify(menu)]);
  return /* @__PURE__ */ jsxRuntime.jsx(StoreStateContext.Provider, {
    value: __spreadValues({ device, mappingWebsiteMenuHref }, rest),
    children
  });
};
function useStore() {
  const context = React.useContext(
    StoreStateContext
  );
  if (!context) {
    throw new Error(
      "useStore must be inside a StoreStateContext with a state value"
    );
  }
  return context;
}

exports.StoreProvider = StoreProvider;
exports.useStore = useStore;
