import { jsx } from 'react/jsx-runtime';
import { createContext, useContext } from 'react';
import { isAbsoluteWidth } from '../utils/isAbsoluteWidth.es.js';

const BreakpointWidthContext = createContext({
  sWidth: {
    value: 100,
    unit: "%"
  },
  mWidth: {
    value: 100,
    unit: "%"
  }
});
const getAggregateWidth = (currWidth, aggWidth) => {
  if (isAbsoluteWidth(currWidth))
    return currWidth;
  return {
    value: aggWidth.value * currWidth.value / 100,
    unit: isAbsoluteWidth(aggWidth) ? "px" : "%"
  };
};
const BreakpointWidthProvider = ({ children, sWidth, mWidth }) => {
  const { sWidth: aggregateSWidth, mWidth: aggregateMWidth } = useBreakpointWidth();
  return /* @__PURE__ */ jsx(BreakpointWidthContext.Provider, {
    value: {
      sWidth: getAggregateWidth(sWidth, aggregateSWidth),
      mWidth: getAggregateWidth(mWidth, aggregateMWidth)
    },
    children
  });
};
const useBreakpointWidth = () => {
  return useContext(BreakpointWidthContext);
};

export { BreakpointWidthProvider, useBreakpointWidth };
