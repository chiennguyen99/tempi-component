'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var clsx = require('clsx');
var index = require('./constants/index.js');
var react = require('@emotion/react');
var StoreContext = require('./contexts/StoreContext.js');
var reset = require('./constants/reset.js');
var rcCascader = require('./constants/rc-cascader.js');
var animation = require('./constants/animation.js');
var root = require('./constants/root.js');
var dateTime = require('./utils/date-time.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var clsx__default = /*#__PURE__*/_interopDefaultLegacy(clsx);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const BuilderComponent = (props) => {
  const {
    content,
    configs,
    ssrData = {},
    mappingDynamicSlots,
    rootId = "ROOT",
    componentDict,
    addGlobalStyle = true,
    numOfHydratedBlocks,
    addLandingLinks = true
  } = props;
  const [clientSide, setClientSide] = React.useState(false);
  React.useEffect(() => {
    setClientSide(true);
  }, []);
  const newContent = React.useMemo(() => {
    return Object.entries(content).reduce((acc, [k, compData]) => {
      var _a, _b;
      const { startTime, endTime, ruleRepeat, date, duration } = compData;
      const props2 = __spreadValues(__spreadProps(__spreadValues({}, compData.customAttributes[compData.tag] || {}), {
        commonStyle: compData.style || {},
        id: compData.elementId,
        "data-id": compData.elementId,
        "data-uniq-id": compData.id,
        dataUniqId: compData.id
      }), configs);
      const clsName = clsx__default["default"]({
        "hidden-xs": (_a = props2 == null ? void 0 : props2.responsive) == null ? void 0 : _a.hiddenXs,
        "hidden-md": (_b = props2 == null ? void 0 : props2.responsive) == null ? void 0 : _b.hiddenMd
      });
      const isVisible = dateTime.validateIsVisibleComponent({
        startTime,
        endTime,
        ruleRepeat,
        date,
        duration
      });
      acc[k] = __spreadProps(__spreadValues({}, compData), {
        props: props2,
        clsName,
        isVisible
      });
      return acc;
    }, {});
  }, [JSON.stringify(content)]);
  const renderComponent = (id) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
    const comp = componentDict[(_a = newContent == null ? void 0 : newContent[id]) == null ? void 0 : _a.tag];
    let returnComp;
    if (!componentDict[(_b = newContent == null ? void 0 : newContent[id]) == null ? void 0 : _b.tag]) {
      console.warn(
        "Cannot found component: " + ((_d = (_c = newContent == null ? void 0 : newContent[id]) == null ? void 0 : _c.tag) == null ? void 0 : _d.toString())
      );
      return null;
    }
    if (!((_e = newContent == null ? void 0 : newContent[id]) == null ? void 0 : _e.isVisible)) {
      return null;
    }
    if ((_g = (_f = newContent == null ? void 0 : newContent[id]) == null ? void 0 : _f.children) == null ? void 0 : _g.length) {
      let totalHydratedBlocks = 0;
      returnComp = React__default["default"].createElement(
        comp,
        __spreadValues({
          key: id,
          ssrData: ssrData[id],
          className: (_h = newContent[id]) == null ? void 0 : _h.clsName
        }, (_i = newContent[id]) == null ? void 0 : _i.props),
        newContent[id].children.map((childId, idx) => {
          var _a2;
          if (id === root.ROOT) {
            if (typeof numOfHydratedBlocks === "undefined") {
              return renderComponent(childId);
            }
            const isDefaultHydratedNode = [
              root.COMPONENT_TAG.BUBBLE,
              root.COMPONENT_TAG.POPUP
            ].includes((_a2 = newContent[childId]) == null ? void 0 : _a2.tag);
            if (totalHydratedBlocks < numOfHydratedBlocks || isDefaultHydratedNode) {
              totalHydratedBlocks++;
              return renderComponent(childId);
            }
            if (clientSide) {
              return renderComponent(childId);
            }
            return null;
          }
          return renderComponent(childId);
        })
      );
    } else {
      returnComp = React__default["default"].createElement(comp, __spreadValues({
        key: id,
        ssrData: ssrData[id],
        className: (_j = newContent[id]) == null ? void 0 : _j.clsName
      }, (_k = newContent[id]) == null ? void 0 : _k.props));
    }
    return returnComp;
  };
  if (!(content == null ? void 0 : content[rootId]))
    return null;
  return /* @__PURE__ */ jsxRuntime.jsx(StoreContext.StoreProvider, __spreadProps(__spreadValues({
    mappingDynamicSlots
  }, configs), {
    children: /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        addGlobalStyle && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
          children: [
            /* @__PURE__ */ jsxRuntime.jsx(react.Global, {
              styles: reset.reset
            }),
            /* @__PURE__ */ jsxRuntime.jsx(react.Global, {
              styles: rcCascader.rcCascaderCss
            }),
            /* @__PURE__ */ jsxRuntime.jsx(react.Global, {
              styles: animation.animationCss
            })
          ]
        }),
        addLandingLinks && /* @__PURE__ */ jsxRuntime.jsx(index.LandingLinks, {}),
        renderComponent(rootId)
      ]
    })
  }));
};

exports.BuilderComponent = BuilderComponent;
