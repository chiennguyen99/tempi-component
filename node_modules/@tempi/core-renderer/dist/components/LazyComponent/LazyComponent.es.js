import { jsx, Fragment } from 'react/jsx-runtime';
import { useRef, useState, useEffect } from 'react';
import { useIntersectionObserver } from '../../hooks/useIntersectionObserver.es.js';

const LazyComponent = ({ children }) => {
  const ref = useRef(null);
  const [hydrated, setHydrated] = useState(false);
  const isIntersected = useIntersectionObserver(ref, {
    freezeOnceVisible: true,
    rootMargin: "30% 0px"
  });
  useEffect(() => {
    if (isIntersected)
      setHydrated(true);
  }, [isIntersected]);
  if (hydrated)
    return /* @__PURE__ */ jsx(Fragment, {
      children
    });
  return /* @__PURE__ */ jsx("div", {
    ref,
    className: "lazy-component",
    style: { width: "100%", height: 100 }
  });
};

export { LazyComponent };
