'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var useIntersectionObserver = require('../../hooks/useIntersectionObserver.js');

const LazyComponent = ({ children }) => {
  const ref = React.useRef(null);
  const [hydrated, setHydrated] = React.useState(false);
  const isIntersected = useIntersectionObserver.useIntersectionObserver(ref, {
    freezeOnceVisible: true,
    rootMargin: "30% 0px"
  });
  React.useEffect(() => {
    if (isIntersected)
      setHydrated(true);
  }, [isIntersected]);
  if (hydrated)
    return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
      children
    });
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    ref,
    className: "lazy-component",
    style: { width: "100%", height: 100 }
  });
};

exports.LazyComponent = LazyComponent;
