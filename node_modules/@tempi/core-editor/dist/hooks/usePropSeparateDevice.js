'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var useProp = require('./useProp.js');
var BuilderContext = require('../contexts/BuilderContext.js');
var propKey = require('../constants/propKey.js');

function usePropSeparateDevice(propKey$1, separateDevice = false, usePropOptions) {
  const { realDevice: device } = BuilderContext.useBuilder();
  const newPropKey = propKey.PROP_KEY.joinKey(separateDevice && device, propKey$1);
  const desktopPropKey = propKey.PROP_KEY.joinKey(propKey.PROP_KEY.Desktop, propKey$1);
  const mobilePropKey = propKey.PROP_KEY.joinKey(propKey.PROP_KEY.Mobile, propKey$1);
  const [syncDeviceStyle] = useProp.useProp(propKey.PROP_KEY.SyncDeviceStyle);
  const [prop, setProp] = useProp.useProp(newPropKey, usePropOptions);
  const [desktopProp, setDesktopProp] = useProp.useProp(desktopPropKey, usePropOptions);
  const [, setMobileProp] = useProp.useProp(mobilePropKey, usePropOptions);
  const [commonProp, setCommonProp] = useProp.useProp(propKey$1, usePropOptions);
  const handleSetProp = (newValue) => {
    setProp(newValue);
    if (separateDevice) {
      if (syncDeviceStyle) {
        if (device === "desktop") {
          setMobileProp(newValue);
        } else {
          setDesktopProp(newValue);
        }
      }
      if ((syncDeviceStyle || device !== "mobile") && newValue === void 0 && commonProp !== void 0) {
        setCommonProp(newValue);
      }
    }
  };
  const getValue = () => {
    if (!separateDevice || prop !== void 0)
      return prop;
    if (syncDeviceStyle === void 0 && desktopProp !== void 0)
      return desktopProp;
    return commonProp;
  };
  const value = getValue();
  return [value, handleSetProp];
}

exports.usePropSeparateDevice = usePropSeparateDevice;
