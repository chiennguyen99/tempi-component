import { useNode } from '@tempi/dnd-core';
import get from 'lodash.get';
import set from 'lodash.set';

const useProp = (key, options) => {
  const {
    actions: { setProp },
    props
  } = useNode((node) => {
    return {
      props: node.data.props
    };
  });
  const value = typeof (options == null ? void 0 : options.formatter) === "function" ? options.formatter(get(props, key)) : get(props, key);
  const onChangeInput = (value2) => {
    setProp((props2) => {
      if (typeof (options == null ? void 0 : options.parser) === "function")
        set(props2, key, options == null ? void 0 : options.parser(value2));
      else
        set(props2, key, value2);
    }, 500);
  };
  return [value, onChangeInput];
};

export { useProp };
