import { useEditorReturnType, Node, NodeTree, SerializedNodes, QueryMethods, EditorState } from '@tempi/dnd-core';
import { PBComponent } from '@tempi/core-renderer';
import { QueryCallbacksFor } from '@tempi/dnd-utils';
type EditorCollector<C> = (state: EditorState, query: QueryCallbacksFor<typeof QueryMethods>) => C;
type useTekoDndEditor = {
    duplicateNode?: (node: Node, parentId: string, index?: number) => void;
    addBlock?: (serializeNodes: SerializedNodes, index?: number, parent?: string, rootNodeId?: string) => Promise<NodeTree>;
    getSiblings?: (id: string) => Array<string>;
    getPrevNode?: (id: string) => Node;
    getNextNode?: (id: string) => Node;
    getParent?: (id: string) => Node;
    getLastSection?: (parentId: string) => string;
    resizeColumns?: (rowId: string, nodesLength: number) => void;
    onCopy?: (nodeId: string) => void;
    onPaste?: (index: number, parentId: string, callbackTransformNestedContent: <T extends {}>(component: PBComponent<T>, mappingKeys: {
        [key: string]: string;
    }) => PBComponent<T>) => void;
    iframe?: HTMLDocument;
};
export declare function useEditor(): useEditorReturnType & useTekoDndEditor;
export declare function useEditor<S>(collect: EditorCollector<S>): useEditorReturnType<S> & useTekoDndEditor;
export {};
//# sourceMappingURL=useEditor.d.ts.map