'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const useTracking = (screenName) => {
  const getAttrTracking = ({
    regionName,
    contentName,
    target,
    payload = {}
  }) => {
    return {
      "data-track-content": true,
      "data-content-region-name": regionName,
      "data-content-name": contentName,
      "data-content-target": target,
      "data-content-payload": JSON.stringify(__spreadValues({
        screenName
      }, payload))
    };
  };
  const trackManual = ({
    regionName,
    contentName,
    target,
    payload = {},
    interaction = "click"
  }) => {
    if (typeof track === "function") {
      track("manualTrackInteractionContent", {
        interaction,
        contentName,
        regionName,
        target,
        payload: JSON.stringify(__spreadValues({
          screenName
        }, payload))
      });
    }
  };
  const trackCustomEvent = (eventName, payload) => {
    if (typeof track === "function") {
      track("customEvent", eventName, payload);
    }
  };
  return {
    trackngScreenName: screenName,
    getAttrTracking,
    trackManual,
    trackCustomEvent
  };
};

exports.useTracking = useTracking;
