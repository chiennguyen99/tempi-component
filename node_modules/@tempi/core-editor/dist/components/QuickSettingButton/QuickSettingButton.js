'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var antd = require('antd');
var React = require('react');
var BuilderContext = require('../../contexts/BuilderContext.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const QuickSettingButton = React__default["default"].forwardRef((props, ref) => {
  const { frame } = BuilderContext.useBuilder();
  const _a = props, { tooltip, isActive } = _a, rest = __objRest(_a, ["tooltip", "isActive"]);
  return /* @__PURE__ */ jsxRuntime.jsx(antd.Tooltip, {
    title: tooltip,
    getPopupContainer: () => frame == null ? void 0 : frame.body,
    getTooltipContainer: () => frame == null ? void 0 : frame.body,
    children: /* @__PURE__ */ jsxRuntime.jsx(StyledButton, __spreadValues({
      ref,
      className: isActive ? "active" : ""
    }, rest))
  });
});
const StyledButton = styled__default["default"].div`
  height: 40px;
  padding-left: 12px;
  padding-right: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: #444444;
  white-space: nowrap;

  &:hover,
  &.active {
    color: ${(props) => props.theme.colorPrimary};
  }
`;

exports.QuickSettingButton = QuickSettingButton;
