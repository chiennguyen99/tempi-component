import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { LineOutlined, DashOutlined, SmallDashOutlined } from '@ant-design/icons';
import { UnitEnum } from '@tempi/core-renderer';
import { ButtonGroup } from '../ButtonGroup/ButtonGroup.es.js';
import { ButtonGroupItem } from '../ButtonGroup/ButtonGroupItem.es.js';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { RangeSliderConfig } from '../RangeSliderConfig/RangeSliderConfig.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';
import { ColorPickerConfig } from '../ColorPickerConfig/ColorPickerConfig.es.js';

const BorderConfig = ({
  propKey,
  separateDevice
}) => {
  const [borderStyle, setBorderStyle] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderStyle),
    separateDevice
  );
  const [borderWidth, setBorderWidth] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderWidth),
    separateDevice
  );
  const clickBorderStyle = (value) => {
    if (value === borderStyle) {
      setBorderStyle(void 0);
      setBorderWidth(void 0);
      return;
    }
    setBorderStyle(value);
    setBorderWidth(1);
  };
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(RangeSliderConfig, {
        sliderProps: {
          min: 0,
          max: 100,
          defaultValue: 0,
          step: 4
        },
        formItemProps: {
          label: t("Bo g\xF3c")
        },
        propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderRadius),
        unitProps: { defaultValue: UnitEnum.pixel }
      }),
      /* @__PURE__ */ jsx(FormItem, {
        label: t("Ki\u1EC3u vi\u1EC1n"),
        children: /* @__PURE__ */ jsxs(ButtonGroup, {
          children: [
            /* @__PURE__ */ jsx(ButtonGroupItem, {
              onClick: () => clickBorderStyle("solid"),
              isActive: borderStyle === "solid",
              children: /* @__PURE__ */ jsx(LineOutlined, {
                style: { fontSize: 18 }
              })
            }),
            /* @__PURE__ */ jsx(ButtonGroupItem, {
              onClick: () => clickBorderStyle("dashed"),
              isActive: borderStyle === "dashed",
              children: /* @__PURE__ */ jsx(DashOutlined, {
                style: { fontSize: 18 }
              })
            }),
            /* @__PURE__ */ jsx(ButtonGroupItem, {
              onClick: () => clickBorderStyle("dotted"),
              isActive: borderStyle === "dotted",
              children: /* @__PURE__ */ jsx(SmallDashOutlined, {
                style: { fontSize: 18 }
              })
            })
          ]
        })
      }),
      borderStyle && /* @__PURE__ */ jsxs(Fragment, {
        children: [
          /* @__PURE__ */ jsx(FormItem, {
            label: t("\u0110\u1ED9 r\u1ED9ng (px)"),
            children: /* @__PURE__ */ jsxs(ButtonGroup, {
              children: [
                /* @__PURE__ */ jsx(ButtonGroupItem, {
                  onClick: () => setBorderWidth(1),
                  isActive: borderWidth === 1,
                  children: "1"
                }),
                /* @__PURE__ */ jsx(ButtonGroupItem, {
                  onClick: () => setBorderWidth(2),
                  isActive: borderWidth === 2,
                  children: "2"
                }),
                /* @__PURE__ */ jsx(ButtonGroupItem, {
                  onClick: () => setBorderWidth(3),
                  isActive: borderWidth === 3,
                  children: "3"
                })
              ]
            })
          }),
          /* @__PURE__ */ jsx(ColorPickerConfig, {
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderColor),
            formItemProps: {
              label: t("M\xE0u vi\u1EC1n")
            }
          })
        ]
      })
    ]
  });
};

export { BorderConfig };
