import { jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { Radio, Card, Row, Col } from 'antd';
import { useEffect } from 'react';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const options = [
  {
    key: "1",
    label: t("Tr\xE1i tr\xEAn"),
    value: "left top"
  },
  {
    key: "2",
    label: t("Gi\u1EEFa tr\xEAn"),
    value: "center top"
  },
  {
    key: "3",
    label: t("Ph\u1EA3i tr\xEAn"),
    value: "right top"
  },
  {
    key: "4",
    label: t("Tr\xE1i gi\u1EEFa"),
    value: "left center"
  },
  {
    key: "5",
    label: t("Gi\u1EEFa"),
    value: "center center"
  },
  {
    key: "6",
    label: t("Ph\u1EA3i gi\u1EEFa"),
    value: "right center"
  },
  {
    key: "7",
    label: t("Tr\xE1i d\u01B0\u1EDBi"),
    value: "left bottom"
  },
  {
    key: "8",
    label: t("Tr\xE1i gi\u1EEFa"),
    value: "center bottom"
  },
  {
    key: "9",
    label: t("Ph\u1EA3i d\u01B0\u1EDBi"),
    value: "right bottom"
  }
];
const BackgroundPositionConfig = (props) => {
  const { formItemProps, propKey, separateDevice } = props;
  const [prop, setProp] = usePropSeparateDevice(propKey, separateDevice);
  useEffect(() => {
    if (!prop)
      setProp("center center");
  }, []);
  const onChange = (e) => {
    setProp(e.target.value);
  };
  return /* @__PURE__ */ jsx(FormItem, __spreadProps(__spreadValues({
    label: t("V\u1ECB tr\xED \u1EA3nh n\u1EC1n"),
    layout: "vertical"
  }, formItemProps), {
    children: /* @__PURE__ */ jsx(Radio.Group, {
      style: { width: "100%" },
      onChange,
      value: prop,
      children: /* @__PURE__ */ jsx(Card, {
        style: { width: "100%" },
        bodyStyle: { padding: 16 },
        children: /* @__PURE__ */ jsx(Row, {
          gutter: [16, 16],
          children: options.map((item) => /* @__PURE__ */ jsx(Col, {
            style: { textAlign: "center" },
            span: 8,
            children: /* @__PURE__ */ jsx(Radio, {
              value: item.value
            })
          }, item.key))
        })
      })
    })
  }));
};

export { BackgroundPositionConfig };
