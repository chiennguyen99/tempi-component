import { jsx, jsxs } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { TextboxAlignTopRegular, TextboxAlignMiddleRegular, TextboxAlignBottomRegular } from '@fluentui/react-icons';
import { Radio } from 'antd';
import { VerticalAlignment } from '@tempi/core-renderer';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const VerticalAlignmentConfig = ({
  propKey,
  formItemProps,
  separateDevice = false
}) => {
  const [prop, setProp] = usePropSeparateDevice(propKey, separateDevice);
  return /* @__PURE__ */ jsx(FormItem, __spreadProps(__spreadValues({}, formItemProps), {
    children: /* @__PURE__ */ jsxs(Radio.Group, {
      onChange: (e) => {
        setProp(e.target.value);
      },
      value: prop,
      buttonStyle: "solid",
      children: [
        /* @__PURE__ */ jsx(Radio.Button, {
          value: VerticalAlignment.top,
          children: /* @__PURE__ */ jsx(WrapSvg, {
            children: /* @__PURE__ */ jsx(TextboxAlignTopRegular, {
              fontSize: 20
            })
          })
        }),
        /* @__PURE__ */ jsx(Radio.Button, {
          value: VerticalAlignment.center,
          children: /* @__PURE__ */ jsx(WrapSvg, {
            children: /* @__PURE__ */ jsx(TextboxAlignMiddleRegular, {
              fontSize: 20
            })
          })
        }),
        /* @__PURE__ */ jsx(Radio.Button, {
          value: VerticalAlignment.bottom,
          children: /* @__PURE__ */ jsx(WrapSvg, {
            children: /* @__PURE__ */ jsx(TextboxAlignBottomRegular, {
              fontSize: 20
            })
          })
        })
      ]
    })
  }));
};
const WrapSvg = styled.span`
  vertical-align: -webkit-baseline-middle;
`;

export { VerticalAlignmentConfig };
