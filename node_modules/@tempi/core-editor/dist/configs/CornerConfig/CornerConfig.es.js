import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import styled from '@emotion/styled';
import { BorderTopBottomRegular, BorderOutsideRegular } from '@fluentui/react-icons';
import { UnitEnum } from '@tempi/core-renderer';
import { Radio } from 'antd';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';
import { RangeSliderConfig } from '../RangeSliderConfig/RangeSliderConfig.es.js';

const cornerTypes = ["common", "detail"];
const MAX_BORDER_RADIUS = 100;
const CornerConfig = ({
  propKey,
  separateDevice
}) => {
  const [cornerType, setCornerType] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.CornerType),
    separateDevice
  );
  const [topLeftRadius, setTopLeftRadius] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderTopLeftRadius),
    separateDevice
  );
  const [topRightRadius, setTopRightRadius] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderTopRightRadius),
    separateDevice
  );
  const [bottomLeftRadius, setBottomLeftRadius] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderBottomLeftRadius),
    separateDevice
  );
  const [bottomRightRadius, setBottomRightRadius] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderBottomRightRadius),
    separateDevice
  );
  const [borderRadius] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderRadius),
    separateDevice
  );
  const [, setBorderRadiusUnit] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderRadiusUnit),
    separateDevice
  );
  const [, setTopRightRadiusUnit] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderTopRightRadiusUnit),
    separateDevice
  );
  const [, setTopLeftRadiusUnit] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderTopLeftRadiusUnit),
    separateDevice
  );
  const [, setBottomLeftRadiusUnit] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderBottomLeftRadiusUnit),
    separateDevice
  );
  const [, setBottomRightRadiusUnit] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BorderBottomRightRadiusUnit),
    separateDevice
  );
  const clickOption = (value) => {
    if (value === "detail" && !topLeftRadius && !topRightRadius && !bottomLeftRadius && !bottomRightRadius) {
      setTopLeftRadius(borderRadius);
      setTopRightRadius(borderRadius);
      setBottomLeftRadius(borderRadius);
      setBottomRightRadius(borderRadius);
    }
    setCornerType(value);
  };
  const renderIcon = (value) => {
    switch (value) {
      case "common":
        return /* @__PURE__ */ jsx(BorderOutsideRegular, {
          fontSize: 16
        });
      case "detail":
        return /* @__PURE__ */ jsx(BorderTopBottomRegular, {
          fontSize: 16
        });
    }
  };
  const onChangeUnit = (unit, setUnit) => {
    setUnit(unit);
  };
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(FormItem, {
        label: t("Bo g\xF3c"),
        layout: "horizontal",
        children: /* @__PURE__ */ jsx(Radio.Group, {
          value: cornerType,
          optionType: "button",
          buttonStyle: "solid",
          defaultValue: cornerType || "common",
          children: cornerTypes.map((value, index) => /* @__PURE__ */ jsx(Radio, {
            onClick: () => clickOption(value),
            value,
            children: renderIcon(value)
          }, index))
        })
      }),
      cornerType === "detail" ? /* @__PURE__ */ jsxs(WrapperDetailCornerConfig, {
        children: [
          /* @__PURE__ */ jsx(RangeSliderConfig, {
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderTopLeftRadius),
            formItemProps: {
              label: t("Tr\xE1i tr\xEAn"),
              layout: "horizontal"
            },
            sliderProps: { min: 0, max: MAX_BORDER_RADIUS, defaultValue: 0 },
            unitProps: {
              defaultValue: UnitEnum.percent,
              propKey: PROP_KEY.joinKey(
                propKey,
                PROP_KEY.BorderTopLeftRadiusUnit
              ),
              options: [UnitEnum.percent, UnitEnum.pixel],
              onChange: (value) => onChangeUnit(value, setTopLeftRadiusUnit)
            }
          }),
          /* @__PURE__ */ jsx(RangeSliderConfig, {
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderTopRightRadius),
            formItemProps: {
              label: t("Ph\u1EA3i tr\xEAn"),
              layout: "horizontal"
            },
            sliderProps: { min: 0, max: MAX_BORDER_RADIUS, defaultValue: 0 },
            unitProps: {
              defaultValue: UnitEnum.percent,
              propKey: PROP_KEY.joinKey(
                propKey,
                PROP_KEY.BorderTopRightRadiusUnit
              ),
              options: [UnitEnum.percent, UnitEnum.pixel],
              onChange: (value) => onChangeUnit(value, setTopRightRadiusUnit)
            }
          }),
          /* @__PURE__ */ jsx(RangeSliderConfig, {
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderBottomLeftRadius),
            formItemProps: {
              label: t("Tr\xE1i d\u01B0\u1EDBi"),
              layout: "horizontal"
            },
            sliderProps: { min: 0, max: MAX_BORDER_RADIUS, defaultValue: 0 },
            unitProps: {
              defaultValue: UnitEnum.percent,
              propKey: PROP_KEY.joinKey(
                propKey,
                PROP_KEY.BorderBottomLeftRadiusUnit
              ),
              options: [UnitEnum.percent, UnitEnum.pixel],
              onChange: (value) => onChangeUnit(value, setBottomLeftRadiusUnit)
            }
          }),
          /* @__PURE__ */ jsx(RangeSliderConfig, {
            propKey: PROP_KEY.joinKey(
              propKey,
              PROP_KEY.BorderBottomRightRadius
            ),
            formItemProps: {
              label: t("Ph\u1EA3i d\u01B0\u1EDBi"),
              layout: "horizontal"
            },
            sliderProps: { min: 0, max: MAX_BORDER_RADIUS, defaultValue: 0 },
            unitProps: {
              defaultValue: UnitEnum.percent,
              propKey: PROP_KEY.joinKey(
                propKey,
                PROP_KEY.BorderBottomRightRadiusUnit
              ),
              options: [UnitEnum.percent, UnitEnum.pixel],
              onChange: (value) => onChangeUnit(value, setBottomRightRadiusUnit)
            }
          })
        ]
      }) : /* @__PURE__ */ jsx(RangeSliderConfig, {
        propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderRadius),
        sliderProps: { min: 0, max: MAX_BORDER_RADIUS, defaultValue: 0 },
        unitProps: {
          defaultValue: UnitEnum.percent,
          propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BorderRadiusUnit),
          options: [UnitEnum.percent, UnitEnum.pixel],
          onChange: (value) => onChangeUnit(value, setBorderRadiusUnit)
        }
      })
    ]
  });
};
const WrapperDetailCornerConfig = styled.div`
  padding: 0px 8px 8px 8px;
  .ant-row {
    width: 83% !important;
  }
`;

export { CornerConfig };
