import { jsx } from 'react/jsx-runtime';
import { useNode } from '@tempi/dnd-core';
import { TimingConfig } from '../TimingConfig/TimingConfig.es.js';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const TimingAttributes = () => {
  const {
    startTime,
    endTime,
    ruleRepeat,
    date,
    duration,
    actions: { setCustom }
  } = useNode(({ data }) => {
    var _a, _b, _c, _d, _e;
    return {
      startTime: (_a = data == null ? void 0 : data.custom) == null ? void 0 : _a.startTime,
      endTime: (_b = data == null ? void 0 : data.custom) == null ? void 0 : _b.endTime,
      ruleRepeat: (_c = data == null ? void 0 : data.custom) == null ? void 0 : _c.ruleRepeat,
      date: (_d = data == null ? void 0 : data.custom) == null ? void 0 : _d.date,
      duration: (_e = data == null ? void 0 : data.custom) == null ? void 0 : _e.duration
    };
  });
  const setStartTime = (startTime2) => {
    setCustom((custom) => {
      custom.startTime = startTime2;
    });
  };
  const setEndTime = (endTime2) => {
    setCustom((custom) => {
      custom.endTime = endTime2;
    });
  };
  const setRuleRepeat = (ruleRepeat2) => {
    setCustom((custom) => {
      custom.ruleRepeat = ruleRepeat2;
    });
  };
  const setDate = (date2) => {
    setCustom((custom) => {
      custom.date = date2;
    });
  };
  const setDuration = (duration2) => {
    setCustom((custom) => {
      custom.duration = duration2;
    });
  };
  return /* @__PURE__ */ jsx(TimingConfig, __spreadValues({}, {
    startTime,
    endTime,
    ruleRepeat,
    date,
    duration,
    setDate,
    setStartTime,
    setEndTime,
    setRuleRepeat,
    setDuration
  }));
};

export { TimingAttributes };
