import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { useState, useMemo, useEffect } from 'react';
import { Modal, Button, Tabs } from 'antd';
import { PATTERN_VALIDATION, UnitEnum } from '@tempi/core-renderer';
import { useFrame } from 'react-frame-component';
import { SelectPopupConfig } from './SelectPopupConfig.es.js';
import { TrackingConfig } from '../TrackingConfig/TrackingConfig.es.js';
import { TekoTrackingConfig } from '../TekoTrackingConfig/TekoTrackingConfig.es.js';
import { SwitchConfig } from '../SwitchConfig/SwitchConfig.es.js';
import { useBuilder } from '../../contexts/BuilderContext.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { useEditor } from '../../hooks/useEditor.es.js';
import { SelectConfig } from '../SelectConfig/SelectConfig.es.js';
import { InputConfig } from '../InputConfig/InputConfig.es.js';
import { InputNumberConfig } from '../InputNumberConfig/InputNumberConfig.es.js';

const EventConfig = ({
  propKey,
  visible,
  setVisible,
  separateDevice,
  listOptions
}) => {
  const { popupListSelection, pageListInWebsiteSelection, relatedNodeId } = useBuilder();
  const [warning, setWarning] = useState("");
  const eventTypePropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.EventType
  );
  const linkPropKey = PROP_KEY.joinKey(propKey, PROP_KEY.Event, PROP_KEY.Link);
  const emailPropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.Email
  );
  const phonePropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.Phone
  );
  const inPagePropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.InPage
  );
  const togglePopupPropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.TogglePopup
  );
  const togglePopupListPropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.TogglePopupList
  );
  const openPageInWebsite = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.Event,
    PROP_KEY.OpenPageOfWebsite
  );
  const [eventType, setEventType] = usePropSeparateDevice(
    eventTypePropKey,
    separateDevice
  );
  const [phone] = usePropSeparateDevice(phonePropKey, separateDevice);
  const [email] = usePropSeparateDevice(emailPropKey, separateDevice);
  const { enableTekoTracking } = useBuilder();
  const { nodes } = useEditor((state) => {
    return {
      nodes: state.nodes
    };
  });
  const { document: frameDocument } = useFrame();
  const elementList = useMemo(() => {
    return [
      ...new Set(Object.keys(nodes).map((key) => nodes[key].data.props.id))
    ].filter((option) => option).map((id) => ({ label: id, value: id }));
  }, [eventType]);
  const getActionTypeOption = () => {
    const actionTypeOptions = [
      {
        label: t("M\u1EDF li\xEAn k\u1EBFt"),
        value: "link"
      },
      {
        label: t("Cu\u1ED9n trong trang"),
        value: "inPage"
      },
      {
        label: "Email",
        value: "email"
      },
      {
        label: t("S\u1ED1 \u0111i\u1EC7n tho\u1EA1i"),
        value: "phone"
      },
      {
        label: t("M\u1EDF popup"),
        value: "openPopup"
      },
      {
        label: t("\u0110\xF3ng popup"),
        value: "closePopupList"
      }
    ];
    if (pageListInWebsiteSelection == null ? void 0 : pageListInWebsiteSelection.length) {
      actionTypeOptions.unshift({
        label: t("M\u1EDF trang trong website"),
        value: "openPageOfWebsite"
      });
    }
    if (listOptions)
      return actionTypeOptions.filter(
        ({ value }) => listOptions.includes(value)
      );
    return actionTypeOptions;
  };
  const validatePhone = (phone2) => {
    if (!phone2)
      return;
    if (!PATTERN_VALIDATION.phone.test(phone2)) {
      setWarning(t("S\u1ED1 \u0111i\u1EC7n tho\u1EA1i ch\u01B0a \u0111\xFAng \u0111\u1ECBnh d\u1EA1ng"));
    } else
      setWarning("");
  };
  const validateEmail = (email2) => {
    if (!email2)
      return;
    if (!PATTERN_VALIDATION.email.test(email2)) {
      setWarning(t("Nh\u1EADp email \u0111\u1ECBnh d\u1EA1ng abc@gmai.com"));
    } else
      setWarning("");
  };
  const onClose = () => {
    setVisible(false);
  };
  useEffect(() => {
    if (eventType === "phone")
      validatePhone(phone);
    if (eventType === "email")
      validateEmail(email);
  }, [eventType, phone, email]);
  useEffect(() => {
    if (relatedNodeId == null ? void 0 : relatedNodeId.popupId) {
      setVisible(true);
    }
  }, []);
  const renderValues = (eventType2) => {
    switch (eventType2) {
      case "link":
        return /* @__PURE__ */ jsxs(Fragment, {
          children: [
            /* @__PURE__ */ jsx(InputConfig, {
              separateDevice,
              formItemProps: {
                label: t("Nh\u1EADp URL"),
                style: {
                  marginBottom: "0.5rem"
                }
              },
              inputProps: {
                placeholder: t("Nh\u1EADp URL"),
                style: {
                  width: "100%"
                }
              },
              propKey: linkPropKey + ".href"
            }),
            /* @__PURE__ */ jsx(SwitchConfig, {
              separateDevice,
              formItemProps: {
                label: t("M\u1EDF trong th\u1EBB m\u1EDBi"),
                layout: "horizontal",
                style: {
                  display: "flex",
                  justifyContent: "space-between",
                  alignItems: "center",
                  marginBottom: "0.5rem"
                }
              },
              propKey: linkPropKey + ".openNewTab"
            }),
            /* @__PURE__ */ jsx(SwitchConfig, {
              separateDevice,
              formItemProps: {
                label: t("Li\xEAn k\u1EBFt nofollow"),
                layout: "horizontal",
                style: {
                  display: "flex",
                  justifyContent: "space-between",
                  alignItems: "center",
                  marginBottom: "0.5rem"
                }
              },
              propKey: linkPropKey + ".nofollow"
            })
          ]
        });
      case "inPage":
        return /* @__PURE__ */ jsxs(Fragment, {
          children: [
            /* @__PURE__ */ jsx(SelectConfig, {
              separateDevice,
              formItemProps: {
                label: t("Ph\u1EA7n t\u1EED"),
                style: {
                  marginBottom: "0.5rem"
                }
              },
              selectProps: {
                placeholder: t("M\u1EB7c \u0111\u1ECBnh"),
                style: { width: "100%" },
                popupMatchSelectWidth: false
              },
              options: elementList,
              propKey: inPagePropKey
            }),
            /* @__PURE__ */ jsx(InputNumberConfig, {
              separateDevice,
              propKey: PROP_KEY.joinKey(
                PROP_KEY.Event,
                PROP_KEY.SectionMarginTop
              ),
              formItemProps: {
                label: "Section margin-top",
                style: {
                  marginBottom: "0.5rem"
                }
              },
              unitProps: { defaultValue: UnitEnum.pixel },
              inputNumberProps: {
                style: { width: "100%" }
              }
            })
          ]
        });
      case "email":
        return /* @__PURE__ */ jsx(InputConfig, {
          separateDevice,
          formItemProps: {
            label: "Email",
            warning,
            layout: "vertical",
            style: {
              marginBottom: "0.5rem"
            }
          },
          inputProps: {
            style: {
              width: "100%"
            },
            placeholder: t("Nh\u1EADp email")
          },
          propKey: emailPropKey
        });
      case "phone":
        return /* @__PURE__ */ jsx(InputConfig, {
          separateDevice,
          formItemProps: {
            label: t("S\u1ED1 \u0111i\u1EC7n tho\u1EA1i"),
            warning,
            layout: "vertical",
            style: {
              marginBottom: "0.5rem"
            }
          },
          inputProps: {
            placeholder: t("Nh\u1EADp s\u1ED1 \u0111i\u1EC7n tho\u1EA1i c\xF3 10 ch\u1EEF s\u1ED1"),
            style: { width: "100%" }
          },
          propKey: phonePropKey
        });
      case "openPopup":
        return /* @__PURE__ */ jsx(SelectPopupConfig, {
          separateDevice,
          label: t("M\u1EDF popup"),
          options: popupListSelection,
          propKey: togglePopupPropKey
        });
      case "closePopupList":
        return /* @__PURE__ */ jsx(SelectPopupConfig, {
          separateDevice,
          label: t("\u0110\xF3ng popup"),
          options: popupListSelection,
          propKey: togglePopupListPropKey
        });
      case "openPageOfWebsite":
        return /* @__PURE__ */ jsxs(Fragment, {
          children: [
            /* @__PURE__ */ jsx(SelectConfig, {
              separateDevice,
              formItemProps: {
                style: {
                  marginBottom: "0.5rem"
                }
              },
              selectProps: {
                placeholder: t("M\u1EB7c \u0111\u1ECBnh"),
                style: { width: "100%" },
                popupMatchSelectWidth: false
              },
              options: pageListInWebsiteSelection,
              propKey: PROP_KEY.joinKey(openPageInWebsite, PROP_KEY.Href)
            }),
            /* @__PURE__ */ jsx(SwitchConfig, {
              separateDevice,
              formItemProps: {
                label: t("M\u1EDF trong th\u1EBB m\u1EDBi"),
                layout: "horizontal",
                style: {
                  display: "flex",
                  justifyContent: "space-between",
                  alignItems: "center",
                  marginBottom: "0.5rem"
                }
              },
              propKey: PROP_KEY.joinKey(openPageInWebsite, PROP_KEY.OpenNewTab)
            })
          ]
        });
    }
  };
  return /* @__PURE__ */ jsx(Modal, {
    closable: false,
    zIndex: 1080,
    open: visible,
    onCancel: onClose,
    title: t("C\xE0i \u0111\u1EB7t s\u1EF1 ki\u1EC7n nh\u1EA5p chu\u1ED9t"),
    destroyOnClose: true,
    width: 450,
    footer: [
      /* @__PURE__ */ jsx(Button, {
        type: "primary",
        shape: "round",
        onClick: onClose,
        children: t("\u0110\xF3ng")
      })
    ],
    getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
    children: /* @__PURE__ */ jsx(Tabs, {
      items: [
        {
          label: t("S\u1EF1 ki\u1EC7n"),
          key: "1",
          children: /* @__PURE__ */ jsxs(Fragment, {
            children: [
              /* @__PURE__ */ jsx(SelectConfig, {
                options: getActionTypeOption(),
                formItemProps: {
                  label: t("Lo\u1EA1i s\u1EF1 ki\u1EC7n"),
                  style: { marginBottom: "0.5rem" }
                },
                selectProps: {
                  placeholder: t("Ch\u1ECDn s\u1EF1 ki\u1EC7n"),
                  style: { width: "100%" },
                  onChange: (val) => {
                    setEventType(val);
                    setWarning("");
                  },
                  value: eventType
                }
              }),
              renderValues(eventType)
            ]
          })
        },
        {
          label: t("Chuy\u1EC3n \u0111\u1ED5i (Tracking)"),
          key: "2",
          children: /* @__PURE__ */ jsx(TrackingConfig, {
            separateDevice,
            config: "event",
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.Event)
          })
        },
        enableTekoTracking && {
          label: "Teko tracking",
          key: "3",
          children: /* @__PURE__ */ jsx(TekoTrackingConfig, {
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.Event)
          })
        }
      ]
    })
  });
};

export { EventConfig };
