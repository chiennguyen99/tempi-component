import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { UnitEnum } from '@tempi/core-renderer';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { RangeSliderConfig } from '../RangeSliderConfig/RangeSliderConfig.es.js';
import { SwitchConfig } from '../SwitchConfig/SwitchConfig.es.js';

const DEFAULT_HEIGHT = 350;
const MAX_WIDTH_PERCENT = 100;
const SizeAttribute = ({
  propKey = PROP_KEY.CommonStyle,
  configs = {},
  separateDevice
}) => {
  const { allowConfigWidth = true, allowConfigHeight = true } = configs;
  const widthUnitPropKey = PROP_KEY.joinKey(propKey, PROP_KEY.WidthUnit);
  const heightUnitPropKey = PROP_KEY.joinKey(propKey, PROP_KEY.HeightUnit);
  const [widthUnit, setWidthUnit] = usePropSeparateDevice(
    widthUnitPropKey,
    separateDevice
  );
  const [height, setHeight] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.Height),
    separateDevice
  );
  const [width, setWidth] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.Width),
    separateDevice
  );
  const handleChangeAutoHeight = (checked) => {
    if (checked)
      setHeight(void 0);
    else
      setHeight(DEFAULT_HEIGHT);
  };
  const onChangeUnit = (value) => {
    setWidthUnit(value);
    if (value === UnitEnum.percent && width > MAX_WIDTH_PERCENT) {
      setWidth(MAX_WIDTH_PERCENT);
    }
  };
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      allowConfigWidth && /* @__PURE__ */ jsx(RangeSliderConfig, {
        sliderProps: {
          min: 0,
          max: widthUnit === UnitEnum.percent ? 100 : 1e3
        },
        propKey: PROP_KEY.joinKey(propKey, PROP_KEY.Width),
        unitProps: {
          propKey: widthUnitPropKey,
          defaultValue: UnitEnum.pixel,
          options: [UnitEnum.percent, UnitEnum.pixel],
          onChange: onChangeUnit
        },
        formItemProps: {
          label: t("Chi\u1EC1u r\u1ED9ng")
        },
        inputNumberProps: {
          controls: false,
          min: 0
        },
        showInput: true
      }),
      allowConfigHeight && /* @__PURE__ */ jsxs(Fragment, {
        children: [
          /* @__PURE__ */ jsx(SwitchConfig, {
            formItemProps: {
              label: t("Chi\u1EC1u cao t\u1EF1 \u0111\u1ED9ng")
            },
            switchProps: {
              checked: height === void 0,
              onChange: handleChangeAutoHeight
            }
          }),
          height !== void 0 && /* @__PURE__ */ jsx(RangeSliderConfig, {
            sliderProps: {
              min: 1,
              max: 1e3
            },
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.Height),
            unitProps: {
              propKey: heightUnitPropKey,
              defaultValue: UnitEnum.pixel
            }
          })
        ]
      })
    ]
  });
};

export { SizeAttribute };
