'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var styled = require('@emotion/styled');
var React = require('react');
var default_image = require('../../assets/images/default_image.js');
var helpers = require('./helpers.js');
var ImageUpload = require('./ImageUpload.js');
var antd = require('antd');
var icons = require('@ant-design/icons');
var FormItem = require('../../components/FormItem/FormItem.js');
var InputConfig = require('../InputConfig/InputConfig.js');
var text = require('../../utils/text.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const ImageFormItem = ({
  onChange,
  defaultValue
}) => {
  const [imageUrl, setImageUrl] = React.useState(defaultValue);
  React.useEffect(() => {
    const getBaseImageUrl = (imageUrl2) => {
      if (text.isPrefixUrl(imageUrl2)) {
        return imageUrl2.slice(4, imageUrl2.lastIndexOf("="));
      }
      return imageUrl2;
    };
    const baseImageUrl = getBaseImageUrl(imageUrl);
    if (imageUrl !== baseImageUrl)
      setImageUrl(baseImageUrl);
  }, []);
  const onChangeImageUrlInput = (e) => {
    const newUrl = e.target.value;
    setImageUrl(newUrl);
  };
  const arr = [void 0, "", default_image];
  React.useEffect(() => {
    onChange(imageUrl);
  }, [imageUrl]);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(FormItem.FormItem, {
        label: i18n.t("common.image"),
        children: /* @__PURE__ */ jsxRuntime.jsxs("div", {
          style: { position: "relative" },
          children: [
            /* @__PURE__ */ jsxRuntime.jsx(StyledImageUploadButton, {
              accept: "image/jpg, image/jpeg, image/png, image/gif, image/webp",
              beforeUpload: helpers.beforeUploadImage,
              image: imageUrl,
              setImage: setImageUrl
            }),
            !arr.includes(imageUrl) && /* @__PURE__ */ jsxRuntime.jsx(icons.CloseCircleFilled, {
              onClick: () => {
                setImageUrl(void 0);
              },
              style: {
                position: "absolute",
                top: -6,
                right: -6,
                fontSize: 16,
                borderRadius: 8
              }
            })
          ]
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(InputConfig.InputConfig, {
        formItemProps: {
          label: i18n.t("\u0110\u01B0\u1EDDng d\u1EABn \u1EA3nh")
        },
        inputProps: {
          style: {
            width: 140
          },
          placeholder: i18n.t("Nh\u1EADp URL"),
          value: imageUrl === default_image ? null : imageUrl,
          onChange: onChangeImageUrlInput
        }
      })
    ]
  });
};
const ImageUploadButton = (_a) => {
  var _b = _a, {
    multiple = false,
    image,
    setImage,
    listType = "picture-card"
  } = _b, rest = __objRest(_b, [
    "multiple",
    "image",
    "setImage",
    "listType"
  ]);
  const [uploading, setUploading] = React.useState(false);
  const uploadAction = (data) => {
    if (!data)
      return;
    const imageUrl = data.imageUrl;
    if (imageUrl) {
      setImage(imageUrl);
    }
    setUploading(data.uploading);
  };
  const uploadImageListAction = (data) => {
    if (!data)
      return;
    const imageUrl = data.imageUrl;
    if (imageUrl) {
      setImage(imageUrl);
    }
    setUploading(data.uploading);
  };
  const renderContent = () => {
    if (multiple) {
      return /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
        block: true,
        type: "primary",
        icon: /* @__PURE__ */ jsxRuntime.jsx(icons.UploadOutlined, {}),
        loading: uploading,
        children: i18n.t("T\u1EA3i \u1EA3nh l\xEAn (T\u1ED1i \u0111a 20MB)")
      });
    }
    if (image) {
      return /* @__PURE__ */ jsxRuntime.jsx(PreviewImage, {
        src: image,
        alt: "uploaded img"
      });
    }
    return /* @__PURE__ */ jsxRuntime.jsxs("div", {
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(icons.CloudUploadOutlined, {
          style: { fontSize: 20 }
        }),
        /* @__PURE__ */ jsxRuntime.jsx("div", {
          style: { marginTop: 8 },
          children: i18n.t("T\u1EA3i \u1EA3nh l\xEAn (T\u1ED1i \u0111a 20MB)")
        })
      ]
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsx(antd.Spin, {
    indicator: /* @__PURE__ */ jsxRuntime.jsx(icons.LoadingOutlined, {
      style: { fontSize: 20 }
    }),
    spinning: uploading,
    children: /* @__PURE__ */ jsxRuntime.jsx(ImageUpload.ImageUpload, __spreadProps(__spreadValues({
      multiple,
      showUploadList: false,
      disabled: uploading,
      listType,
      onUpdateImageUrl: multiple ? uploadImageListAction : uploadAction
    }, rest), {
      children: renderContent()
    }))
  });
};
const StyledImageUploadButton = styled__default["default"](ImageUploadButton)`
  width: 140px;
  height: 140px;
`;
const PreviewImage = styled__default["default"].img`
  width: 100%;
  height: 100%;
  object-fit: contain;
`;

exports.ImageFormItem = ImageFormItem;
