'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var React = require('react');
var RadioConfig = require('../RadioConfig/RadioConfig.js');
var BackgroundImageConfig = require('../BackgroundImageConfig/BackgroundImageConfig.js');
var propKey = require('../../constants/propKey.js');
var usePropSeparateDevice = require('../../hooks/usePropSeparateDevice.js');
var ColorPickerConfig = require('../ColorPickerConfig/ColorPickerConfig.js');

const backgroundTypeOptions = [
  { label: "common.image", value: "image" /* image */ },
  { label: "common.color", value: "color" /* color */ }
];
const BackgroundConfig = ({
  title = i18n.t("N\u1EC1n"),
  propKey: propKey$1,
  separateDevice
}) => {
  const bgColorKey = propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundColor);
  const bgImageKey = propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundImage);
  const [tempImageUrl, setTempImageUrl] = React.useState("");
  const [tempColor, setTempColor] = React.useState(void 0);
  const [imageUrl, setImageUrl] = usePropSeparateDevice.usePropSeparateDevice(
    bgImageKey,
    separateDevice
  );
  const [bgColor, setBgColor] = usePropSeparateDevice.usePropSeparateDevice(
    bgColorKey,
    separateDevice
  );
  const [active, setActive] = React.useState(
    bgColor ? "color" /* color */ : "image" /* image */
  );
  React.useEffect(() => {
    if (active === "image" /* image */) {
      setTempColor(bgColor);
      setBgColor(void 0);
      if (tempImageUrl !== "") {
        setImageUrl(tempImageUrl);
      }
    } else {
      setTempImageUrl(imageUrl);
      setImageUrl("");
      if (tempColor !== void 0) {
        setBgColor(tempColor);
      }
    }
  }, [active]);
  const renderBackgroundType = () => {
    if (active === "image" /* image */) {
      return /* @__PURE__ */ jsxRuntime.jsx(BackgroundImageConfig.BackgroundImageConfig, {
        propKey: propKey$1,
        separateDevice
      });
    }
    return /* @__PURE__ */ jsxRuntime.jsx(ColorPickerConfig.ColorPickerConfig, {
      propKey: bgColorKey,
      gradientPicker: true,
      separateDevice,
      formItemProps: { label: i18n.t("M\xE0u n\u1EC1n") }
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(RadioConfig.RadioConfig, {
        formItemProps: { label: title },
        radioGroupProps: {
          options: i18n.getOptionsI18n(i18n.t, backgroundTypeOptions, "label"),
          value: active,
          onChange: (e) => setActive(e.target.value),
          optionType: "button",
          buttonStyle: "solid"
        }
      }),
      renderBackgroundType()
    ]
  });
};

exports.BackgroundConfig = BackgroundConfig;
