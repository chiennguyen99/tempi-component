import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import React, { useState } from 'react';
import { CSS } from '@dnd-kit/utilities';
import { Tag, Space, Button, Image, Modal } from 'antd';
import { useSortable } from '@dnd-kit/sortable';
import styled from '@emotion/styled';
import { ImageSetting } from './ImageSetting.es.js';
import { useFrame } from 'react-frame-component';
import { SettingsRegular, LinkRegular, ClockRegular, DeleteRegular } from '@fluentui/react-icons';
import defaultImage from '../../assets/images/default_image.es.js';
import { EventConfig } from '../EventConfig/EventConfig.es.js';
import { TimeVisibilityConfig } from '../TimingConfig/TimeVisibilityConfig.es.js';
import { ImageUploadButton } from '../ImageConfig/ImageUploadButton.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const SortableImage = ({
  id,
  src,
  index,
  onRemove,
  propKey,
  imageHeight = 150,
  actions = ["editInfo", "editEvent", "timingConfig"],
  separateDevice
}) => {
  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id });
  const [openEditModal, setOpenEditModal] = useState(false);
  const [openEventModal, setOpenEventModal] = useState(false);
  const [openTimingConfig, setOpenTimingConfig] = useState(false);
  const { document: frameDocument } = useFrame();
  const imageUploadRef = React.useRef(null);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsxs(Wrapper, {
        style: {
          transform: CSS.Transform.toString(transform),
          transition
        },
        ref: setNodeRef,
        children: [
          /* @__PURE__ */ jsx(Tag, {
            color: "#fff",
            style: {
              color: "#333",
              borderRadius: 999,
              position: "absolute",
              top: 10,
              left: 10,
              zIndex: 1,
              boxShadow: "0px 0px 4px rgba(68, 68, 68, 0.1)"
            },
            children: index + 1
          }),
          /* @__PURE__ */ jsxs(Space, {
            style: {
              position: "absolute",
              top: 10,
              right: 10,
              zIndex: 1
            },
            children: [
              actions.map((Action) => {
                return /* @__PURE__ */ jsxs("div", {
                  className: "action-button",
                  children: [
                    Action === "editInfo" && /* @__PURE__ */ jsx(Button, {
                      shape: "circle",
                      type: "default",
                      onClick: () => setOpenEditModal(true),
                      icon: /* @__PURE__ */ jsx(SettingsRegular, {
                        style: { fontSize: 14 }
                      })
                    }),
                    Action === "editEvent" && /* @__PURE__ */ jsx(Button, {
                      shape: "circle",
                      type: "default",
                      onClick: () => setOpenEventModal(true),
                      icon: /* @__PURE__ */ jsx(LinkRegular, {
                        style: { fontSize: 14 }
                      })
                    }),
                    Action === "timingConfig" && /* @__PURE__ */ jsx(Button, {
                      shape: "circle",
                      type: "default",
                      onClick: () => setOpenTimingConfig(true),
                      icon: /* @__PURE__ */ jsx(ClockRegular, {
                        style: { fontSize: 14 }
                      })
                    }),
                    typeof Action === "function" && /* @__PURE__ */ jsx(Action, {
                      propKey,
                      index,
                      separateDevice
                    })
                  ]
                });
              }),
              /* @__PURE__ */ jsx("div", {
                className: "action-button",
                children: /* @__PURE__ */ jsx(Button, {
                  shape: "circle",
                  type: "default",
                  onClick: onRemove,
                  icon: /* @__PURE__ */ jsx(DeleteRegular, {
                    style: { fontSize: 14 }
                  })
                })
              })
            ]
          }),
          /* @__PURE__ */ jsx(Image, __spreadProps(__spreadValues(__spreadValues({}, listeners), attributes), {
            src,
            height: imageHeight,
            width: "100%",
            style: {
              objectFit: "cover",
              borderRadius: 4
            },
            fallback: defaultImage,
            preview: false,
            onDoubleClick: () => {
              var _a, _b;
              return (_b = (_a = imageUploadRef == null ? void 0 : imageUploadRef.current) == null ? void 0 : _a.querySelector("input")) == null ? void 0 : _b.click();
            }
          }))
        ]
      }),
      /* @__PURE__ */ jsx(Modal, {
        zIndex: 1080,
        open: openEditModal,
        onCancel: () => setOpenEditModal(false),
        cancelButtonProps: {
          style: {
            display: "none"
          }
        },
        destroyOnClose: true,
        onOk: () => setOpenEditModal(false),
        closable: false,
        okText: t("\u0110\xF3ng"),
        title: t("Ch\u1EC9nh s\u1EEDa th\xF4ng tin \u1EA3nh"),
        getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
        children: /* @__PURE__ */ jsx(ImageSetting, {
          separateDevice,
          srcPropKey: PROP_KEY.joinKey(propKey, `[${index}]`, PROP_KEY.Src),
          widthPropKey: PROP_KEY.joinKey(
            propKey,
            `[${index}]`,
            PROP_KEY.GoogleImageParams,
            PROP_KEY.Width
          ),
          altPropKey: PROP_KEY.joinKey(propKey, `[${index}]`, PROP_KEY.Alt)
        })
      }),
      /* @__PURE__ */ jsx(EventConfig, {
        separateDevice,
        propKey: PROP_KEY.joinKey(propKey, `[${index}]`),
        visible: openEventModal,
        setVisible: setOpenEventModal
      }),
      /* @__PURE__ */ jsx(TimeVisibilityConfig, {
        visible: openTimingConfig,
        setVisible: setOpenTimingConfig,
        propKey: PROP_KEY.joinKey(propKey, `[${index}]`),
        separateDevice
      }),
      /* @__PURE__ */ jsx("div", {
        ref: imageUploadRef,
        style: { display: "none" },
        children: /* @__PURE__ */ jsx(ImageUploadButton, {
          imagePropKey: PROP_KEY.joinKey(propKey, `[${index}]`, PROP_KEY.Src),
          widthPropKey: PROP_KEY.joinKey(
            propKey,
            `[${index}]`,
            PROP_KEY.GoogleImageParams,
            PROP_KEY.Width
          )
        })
      })
    ]
  });
};
const Wrapper = styled.li`
  position: relative;
  list-style: none;
  cursor: grabbing;
  box-shadow: 0px 0px 4px rgba(68, 68, 68, 0.2);
  border-radius: 4px;

  .action-button {
    display: none;
  }

  :hover {
    .action-button {
      display: block;
    }
  }
`;

export { SortableImage };
