'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var coreRenderer = require('@tempi/core-renderer');
var React = require('react');
var OverlayConfig = require('../OverlayConfig/OverlayConfig.js');
var BackgroundPositionConfig = require('../BackgroundPositionConfig/BackgroundPositionConfig.js');
var percentPropFormatter = require('../../utils/percentPropFormatter.js');
var percentPropParser = require('../../utils/percentPropParser.js');
var propKey = require('../../constants/propKey.js');
var usePropSeparateDevice = require('../../hooks/usePropSeparateDevice.js');
var ImageConfig = require('../ImageConfig/ImageConfig.js');
var InputNumberConfig = require('../InputNumberConfig/InputNumberConfig.js');
var SelectConfig = require('../SelectConfig/SelectConfig.js');

const BackgroundImageConfig = ({
  propKey: propKey$1 = propKey.PROP_KEY.CommonStyle,
  separateDevice,
  allowConfingMarqueeBgImage = false
}) => {
  const bgImageKey = propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundImage);
  const bgImageWidthKey = propKey.PROP_KEY.joinKey(
    propKey$1,
    propKey.PROP_KEY.BackgroundImageWidth
  );
  const [backgroundImage] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundImage),
    separateDevice
  );
  const [bgImageSize, setBgImageSize] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundSize),
    separateDevice
  );
  const [bgImageRepeat, setBgImageRepeat] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundRepeat),
    separateDevice
  );
  const defaultOverlayKey = propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.DefaultOverlay);
  const [backgroundOverlay] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundOverlay),
    separateDevice
  );
  const [image] = usePropSeparateDevice.usePropSeparateDevice(bgImageKey, separateDevice);
  const [overLay, setOverlay] = usePropSeparateDevice.usePropSeparateDevice(
    defaultOverlayKey,
    separateDevice
  );
  React.useEffect(() => {
    if (!bgImageSize)
      setBgImageSize("cover");
    if (!bgImageRepeat)
      setBgImageRepeat("no-repeat");
  }, []);
  React.useEffect(() => {
    if (!image && overLay) {
      setOverlay(void 0);
    }
  }, [image]);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(ImageConfig.ImageConfig, {
        propKey: bgImageKey,
        widthPropKey: bgImageWidthKey,
        separateDevice,
        layout: "vertical"
      }),
      !!backgroundOverlay && /* @__PURE__ */ jsxRuntime.jsx(OverlayConfig.OverlayConfig, {
        separateDevice
      }),
      backgroundImage && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(BackgroundPositionConfig.BackgroundPositionConfig, {
            propKey: propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.BackgroundPosition),
            separateDevice
          }),
          /* @__PURE__ */ jsxRuntime.jsx(InputNumberConfig.InputNumberConfig, {
            propKey: defaultOverlayKey,
            separateDevice,
            unitProps: { defaultValue: coreRenderer.UnitEnum.percent },
            inputNumberProps: { min: 0, max: 100, defaultValue: 0 },
            formItemProps: { label: i18n.t("\u0110\u1ED9 m\u1EDD l\u1EDBp ph\u1EE7 n\u1EC1n") },
            usePropOptions: {
              formatter: percentPropFormatter.percentPropFormatter,
              parser: percentPropParser.percentPropParser
            }
          }),
          allowConfingMarqueeBgImage && /* @__PURE__ */ jsxRuntime.jsx(SelectConfig.SelectConfig, {
            separateDevice,
            formItemProps: {
              label: i18n.t("Hi\u1EC7u \u1EE9ng di chuy\u1EC3n"),
              layout: "vertical"
            },
            selectProps: {
              placeholder: i18n.t("Ch\u1ECDn hi\u1EC7u \u1EE9ng di chuy\u1EC3n \u1EA3nh n\u1EC1n"),
              style: { width: "100%" }
            },
            options: [
              {
                label: i18n.t("Ch\u1EA1y theo chi\u1EC1u ngang"),
                value: "horizontal"
              },
              {
                label: i18n.t("Ch\u1EA1y theo chi\u1EC1u d\u1ECDc"),
                value: "vertical"
              }
            ],
            propKey: propKey.PROP_KEY.joinKey(
              propKey$1,
              propKey.PROP_KEY.BackgroundMarqueeDirection
            )
          })
        ]
      })
    ]
  });
};

exports.BackgroundImageConfig = BackgroundImageConfig;
