import { EventHandlers } from './EventHandlers.es.js';
import { EventHandlerUpdates } from './interfaces.es.js';

class DerivedEventHandlers extends EventHandlers {
  constructor(derived, options) {
    super(options);
    this.derived = derived;
    this.options = options;
    this.unsubscribeParentHandlerListener = this.derived.listen((msg) => {
      switch (msg) {
        case EventHandlerUpdates.HandlerEnabled: {
          return this.enable();
        }
        case EventHandlerUpdates.HandlerDisabled: {
          return this.disable();
        }
        default: {
          return;
        }
      }
    });
  }
  inherit(cb) {
    return this.createProxyHandlers(this.derived, cb);
  }
  cleanup() {
    super.cleanup();
    this.unsubscribeParentHandlerListener();
  }
}

export { DerivedEventHandlers };
