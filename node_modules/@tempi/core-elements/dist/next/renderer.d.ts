import { FormV4Props } from '../components/form';
export declare const components: {
    Root: import("react").FC<import("../components").RootProps>;
    PbIcon: {
        (props: import("../components").IconInterface & import("react").HTMLAttributes<HTMLDivElement> & {
            isEditor?: boolean;
        }): JSX.Element;
        displayName: string;
    };
    Section: import("react").ForwardRefExoticComponent<import("../components").PbSectionProps & import("react").RefAttributes<HTMLDivElement>>;
    Container: import("react").ForwardRefExoticComponent<import("../components").PbContainerProps & import("react").RefAttributes<HTMLDivElement>>;
    Row: import("react").ForwardRefExoticComponent<import("../components").PbRowProps & import("react").RefAttributes<HTMLDivElement>>;
    Col: import("react").ForwardRefExoticComponent<import("../core").ColProps & import("@tempi/core-renderer").CommonAttributesInterface & import("react").RefAttributes<HTMLDivElement>>;
    ButtonV2: import("react").ForwardRefExoticComponent<import("../components").ButtonV2BaseInterface & {
        desktop?: import("../components").ButtonV2BaseInterface;
        mobile?: import("../components").ButtonV2BaseInterface;
    } & {
        isEditingMode?: boolean;
        onClick?: () => any;
        className?: string;
        disabled?: boolean;
        customText?: import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
        style?: import("react").CSSProperties;
        loading?: boolean;
    } & import("react").RefAttributes<HTMLButtonElement>>;
    Paragraph: {
        ({ text, commonStyle, children, event, ...rest }: Partial<import("../components").ParagraphProps>): JSX.Element;
        displayName: string;
    };
    Heading: {
        ({ text, enabled, link, children, ...rest }: Partial<import("../components").HeadingProps>): JSX.Element;
        displayName: string;
    };
    Divider: import("react").ComponentType<import("../components").PbDividerProps>;
    Spacer: {
        ({ height, commonStyle }: import("../components").SpacerInterface): JSX.Element;
        displayName: string;
    };
    Youtube: import("react").ComponentType<import("../components").YoutubeProps & import("react").RefAttributes<HTMLDivElement>>;
    Countdown: import("react").FC<import("../components").CountdownInterface>;
    Map: import("react").ComponentType<import("react").HTMLAttributes<HTMLDivElement> & import("../components").MapInterface & import("react").RefAttributes<HTMLDivElement>>;
    Image: {
        (props: import("@tempi/core-renderer").ImageBaseProps): JSX.Element;
        displayName: string;
    };
    Gallery: import("react").FC<import("../components").GalleryProps>;
    HtmlCode: {
        ({ htmlCode, commonStyle, ...rest }: import("../components").HtmlCodeProps): JSX.Element;
        displayName: string;
    };
    PageFlip: import("react").ComponentType<import("../components").PageFlipProps>;
    NumberCounter: import("react").FC<import("../components").NumberCounterInterface>;
    SocialIcon: import("react").ComponentType<import("../components").SocialIconInterface>;
    StoreList: import("react").ComponentType<import("../components").StoreListInterface>;
    Slider: {
        (props: import("../components").SliderProps): JSX.Element;
        displayName: string;
    };
    Table: import("react").ComponentType<Partial<import("../components").TableProps>>;
    Accordion: import("react").ComponentType<import("../components").AccordionProps>;
    AccordionContent: import("react").ComponentType<import("@tempi/core-renderer").CommonAttributesInterface & {
        contentRef?: (ref: HTMLDivElement) => void;
        children?: import("react").ReactNode;
    } & import("react").RefAttributes<HTMLDivElement>>;
    AccordionItem: import("react").ComponentType<import("../components").AccordionItemInterface & {
        children?: import("react").ReactNode;
    } & import("react").RefAttributes<HTMLDivElement>>;
    ListItemV2: import("react").ComponentType<import("../components").ListItemV2Props & import("react").RefAttributes<HTMLDivElement>>;
    ListItemContentV2: import("react").ComponentType<import("../components").ListItemContentV2Props & import("react").RefAttributes<HTMLDivElement>>;
    ListItemIconV2: import("react").ComponentType<import("../components").ListItemIconV2Interface & import("react").RefAttributes<HTMLDivElement>>;
    FormV4: import("react").ComponentType<import("../components").FormV4Interface & import("react").HTMLAttributes<HTMLFormElement> & {
        isEditingMode?: boolean;
        onFinish?: (values: any) => Promise<any>;
        customLoading?: boolean;
        device?: import("@tempi/core-renderer").Device;
    } & import("react").RefAttributes<HTMLFormElement>>;
    SubscriptionFormV2: import("react").ComponentType<FormV4Props>;
    PopupV1: import("react").ComponentType<import("../components").PopupV1Props & import("react").RefAttributes<HTMLDivElement>>;
    Header: import("react").FC<import("../components").HeaderProps>;
    Menu: {
        ({ children }: import("../components").MenuProps): JSX.Element;
        displayName: string;
    };
    MenuItem: import("react").ForwardRefExoticComponent<import("../components").MenuItemInterface & {
        enabled?: boolean;
        children?: import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    } & import("react").RefAttributes<HTMLDivElement>>;
    Logo: import("react").ForwardRefExoticComponent<import("@tempi/core-renderer").CommonAttributesInterface & import("@tempi/core-renderer").Image & import("react").RefAttributes<HTMLDivElement>>;
    MenuCol: import("react").ForwardRefExoticComponent<import("../components").MenuColProps & import("react").RefAttributes<HTMLDivElement>>;
    LuckyDrawV2: import("react").ComponentType<import("../components").LuckyDrawV2Props>;
    Tab: import("react").ComponentType<import("../components").TabProps & import("react").RefAttributes<HTMLDivElement>>;
    TabItem: import("react").ComponentType<import("../components").TabItemProps & import("react").RefAttributes<HTMLDivElement>>;
    TestimonialCarousel: import("react").ComponentType<import("../components").TestimonialCarouselInterface>;
    TestimonialV2: import("react").ComponentType<import("../components").TestimonialV2Props>;
    TestimonialV2Item: import("react").ComponentType<import("../components").TestimonialV2ItemProps & import("react").RefAttributes<HTMLDivElement>>;
    ContentSlider: import("react").ComponentType<import("../components").ContentSliderProps>;
    ContentSliderItem: import("react").ComponentType<import("../components").ContentSliderItemProps & import("react").RefAttributes<HTMLDivElement>>;
    ProductList: import("react").ComponentType<import("../components").ProductListProps & import("react").RefAttributes<HTMLDivElement>>;
    ProductListContent: import("react").ComponentType<import("../components").ProductListContentProps & import("react").RefAttributes<HTMLDivElement>>;
    WebsiteFooter: import("react").ComponentType<{
        children: any;
    }>;
    GlobalBlock: import("react").ComponentType<import("../components").GlobalBlockInterface & {
        isEditingMode?: boolean;
        children?: import("react").ReactNode;
    }>;
    WebsiteHeader: import("react").FC<import("../components").WebsiteHeaderInterface & {
        isEditingMode?: boolean;
        menu?: import("@tempi/core-renderer").WebsiteMenu[];
    }>;
    PopupRoot: import("react").ComponentType<import("../components").PopupRootProps & import("react").RefAttributes<HTMLDivElement>>;
    ContactBubble: import("react").ComponentType<import("../components").ContactBubbleInterface>;
    Page404: import("react").ComponentType<import("@tempi/core-renderer").Image & import("react").ReactHTMLElement<HTMLImageElement>>;
    TempiProductList: import("react").ComponentType<import("../components").TempiProductListProps>;
    QRCode: import("react").ComponentType<import("../components").QRCodeInterface>;
    ExamScore: import("react").ComponentType<import("../components/exam-score/type").ExamScoreInterface>;
    Video: import("react").ForwardRefExoticComponent<import("../components").VideoProps & import("react").RefAttributes<HTMLDivElement>>;
    ArticleList: import("react").ComponentType<import("../components").ArticleListInterface>;
    ArticleHeader: import("react").ComponentType<import("@tempi/core-renderer").CommonAttributesInterface>;
    SampleComponent: import("react").ComponentType<import("../components/sample-component/type").SampleComponentInterface>;
    LeadForm: import("react").ComponentType<{}>;
    InlineBanner: import("react").ComponentType<import("../components").InlineBannerInterface & import("react").RefAttributes<HTMLDivElement>>;
};
//# sourceMappingURL=renderer.d.ts.map