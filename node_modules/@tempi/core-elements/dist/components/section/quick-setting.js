'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var DragNode = require('../../quick-configs/DragNode/DragNode.js');
var QuickLayout = require('../../quick-configs/QuickLayout/QuickLayout.js');
var MoveDownBlock = require('../../quick-configs/MoveDownBlock/MoveDownBlock.js');
var MoveUpBlock = require('../../quick-configs/MoveUpBlock/MoveUpBlock.js');
var VisibleOnDevice = require('../../quick-configs/VisibleOnDevice/VisibleOnDevice.js');

const SectionQuickSetting = () => {
  const { actions, query } = coreEditor.useEditor();
  const { id } = coreEditor.useNode((node) => ({
    descendants: query.node(node.id).descendants(true),
    node
  }));
  const { setShowSettingDialog, track, isEditingBlock } = coreEditor.useBuilder();
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(DragNode.DragNode, {}),
      !isEditingBlock && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(QuickLayout.QuickLayout, {}),
          /* @__PURE__ */ jsxRuntime.jsx(MoveDownBlock.MoveDownBlock, {}),
          /* @__PURE__ */ jsxRuntime.jsx(MoveUpBlock.MoveUpBlock, {})
        ]
      }),
      /* @__PURE__ */ jsxRuntime.jsx(VisibleOnDevice.VisibleOnDevice, {}),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
        onClick: () => {
          actions.selectNode(id);
          setShowSettingDialog(true);
          track == null ? void 0 : track({
            regionName: "commonSetting",
            contentName: "advancedSettingBtn"
          });
        },
        children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.Settings16Regular, {})
      }),
      !isEditingBlock && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DuplicateNode, {
        track: () => {
          track == null ? void 0 : track({
            regionName: "commonSetting",
            contentName: "duplicateBtn"
          });
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DeleteNode, {
        customDelete: (id2) => {
          actions.delete(id2);
          track == null ? void 0 : track({
            regionName: "commonSetting",
            contentName: "deleteBtn"
          });
        }
      })
    ]
  });
};

exports.SectionQuickSetting = SectionQuickSetting;
