'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var propKey = require('../../constants/propKey.js');

const ImageSettings = ({
  srcPropKey = propKey.PROP_KEY.Src,
  showAlignment = true,
  showZoomPreview = true
}) => {
  const [imageSrc] = coreEditor.useProp(srcPropKey);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageConfig, {
        propKey: propKey.PROP_KEY.Src,
        widthPropKey: propKey.PROP_KEY.joinKey(
          propKey.PROP_KEY.GoogleImageParams,
          propKey.PROP_KEY.Width
        ),
        layout: "vertical",
        allowCropImage: false
      }),
      imageSrc && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputConfig, {
            propKey: propKey.PROP_KEY.Alt,
            formItemProps: {
              label: i18n.t("V\u0103n ba\u0309n thay th\xEA\u0301"),
              layout: "vertical"
            },
            inputProps: {
              placeholder: i18n.t("Nh\xE2\u0323p ch\u01B0\u0303")
            }
          }),
          showAlignment && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
            formItemProps: {
              label: i18n.t("C\u0103n ch\u1EC9nh")
            },
            propKey: propKey.PROP_KEY.Alignment
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.CornerConfig, {
            propKey: propKey.PROP_KEY.CommonStyle
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SizeAttribute, {}),
          showZoomPreview && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchConfig, {
            formItemProps: {
              label: i18n.t("Ph\xF3ng to khi click \u1EA3nh"),
              description: i18n.t("Kh\xF4ng \xE1p d\u1EE5ng \u1EDF ch\u1EBF \u0111\u1ED9 ch\u1EC9nh s\u1EEDa")
            },
            propKey: propKey.PROP_KEY.ZoomPreview
          })
        ]
      })
    ]
  });
};

exports.ImageSettings = ImageSettings;
