import { jsx } from 'react/jsx-runtime';
import { withSelector, useBuilder, AdvanceAttributes, EffectAttributes, getEditorName } from '@tempi/core-editor';
import { DEFAULT_PARAGRAPH } from './constants.es.js';
import { EditorQuickSetting } from './editor-quick-setting.es.js';
import { ParagraphQuickSetting } from './quick-setting.es.js';
import { Paragraph } from './ui.es.js';
import { TipTapEditorV2 } from '../../configs/TipTapEditor/TipTapEditorV2.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { RowEditor } from '../section/selector.es.js';
import { RootEditor } from '../root/selector.es.js';

const ParagraphEditor = withSelector(
  ({ commonStyle }) => {
    const { track } = useBuilder();
    return /* @__PURE__ */ jsx(TipTapEditorV2, {
      propKey: PROP_KEY.Text,
      quickSetting: ParagraphQuickSetting,
      editorQuickSetting: EditorQuickSetting,
      track: () => track == null ? void 0 : track({
        regionName: "ParagraphEditorSetting",
        contentName: "quickSettingBtn"
      }),
      children: /* @__PURE__ */ jsx(Paragraph, {
        commonStyle
      })
    });
  },
  {
    displayName: "\u0110o\u1EA1n v\u0103n",
    tag: Paragraph.displayName.toLowerCase(),
    advanceAttributes: AdvanceAttributes,
    effectAttributes: EffectAttributes,
    props: DEFAULT_PARAGRAPH,
    rules: {
      canDrop: (targetNode) => {
        const ignoreTargets = [
          getEditorName({ RowEditor }),
          getEditorName({ RootEditor })
        ];
        return !ignoreTargets.includes(targetNode.data.name);
      }
    }
  }
);

export { ParagraphEditor };
