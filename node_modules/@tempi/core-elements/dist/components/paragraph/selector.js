'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var coreEditor = require('@tempi/core-editor');
var constants = require('./constants.js');
var editorQuickSetting = require('./editor-quick-setting.js');
var quickSetting = require('./quick-setting.js');
var ui = require('./ui.js');
var TipTapEditorV2 = require('../../configs/TipTapEditor/TipTapEditorV2.js');
var propKey = require('../../constants/propKey.js');
var selector = require('../section/selector.js');
var selector$1 = require('../root/selector.js');

const ParagraphEditor = coreEditor.withSelector(
  ({ commonStyle }) => {
    const { track } = coreEditor.useBuilder();
    return /* @__PURE__ */ jsxRuntime.jsx(TipTapEditorV2.TipTapEditorV2, {
      propKey: propKey.PROP_KEY.Text,
      quickSetting: quickSetting.ParagraphQuickSetting,
      editorQuickSetting: editorQuickSetting.EditorQuickSetting,
      track: () => track == null ? void 0 : track({
        regionName: "ParagraphEditorSetting",
        contentName: "quickSettingBtn"
      }),
      children: /* @__PURE__ */ jsxRuntime.jsx(ui.Paragraph, {
        commonStyle
      })
    });
  },
  {
    displayName: "\u0110o\u1EA1n v\u0103n",
    tag: ui.Paragraph.displayName.toLowerCase(),
    advanceAttributes: coreEditor.AdvanceAttributes,
    effectAttributes: coreEditor.EffectAttributes,
    props: constants.DEFAULT_PARAGRAPH,
    rules: {
      canDrop: (targetNode) => {
        const ignoreTargets = [
          coreEditor.getEditorName({ RowEditor: selector.RowEditor }),
          coreEditor.getEditorName({ RootEditor: selector$1.RootEditor })
        ];
        return !ignoreTargets.includes(targetNode.data.name);
      }
    }
  }
);

exports.ParagraphEditor = ParagraphEditor;
