'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var icons = require('@ant-design/icons');
var iconsDev = require('@tempi/icons-dev');
var coreEditor = require('@tempi/core-editor');
var propKey = require('../../../constants/propKey.js');
var TypographyQuickSetting = require('../../../quick-configs/typography/TypographyQuickSetting.js');
var ButtonConfig = require('../../button/v2/configs/ButtonConfig.js');
var IconButtonConfig = require('../../button/v2/configs/IconButtonConfig.js');
var AlignmentQuickSetting = require('../../../quick-configs/AlignmentQuickSetting/AlignmentQuickSetting.js');
var ButtonColorConfig = require('../../button/v2/configs/ButtonColorConfig.js');

const ButtonSummitFormQuickSetting = ({
  editor
}) => {
  const alignPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CommonStyle,
    propKey.PROP_KEY.JustifyContent
  );
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(TypographyQuickSetting.TypographyQuickSetting, {
        editor
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
        content: /* @__PURE__ */ jsxRuntime.jsx(ButtonConfig.ButtonConfig, {}),
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
          tooltip: i18n.t("T\xF9y ch\u1EC9nh n\xFAt b\u1EA5m"),
          children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
            name: "ButtonPointerOutlined",
            style: {
              fontSize: 16
            }
          })
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
        content: /* @__PURE__ */ jsxRuntime.jsx(IconButtonConfig.IconButtonConfig, {}),
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
          tooltip: i18n.t("T\xF9y ch\u1EC9nh bi\u1EC3u t\u01B0\u1EE3ng"),
          children: /* @__PURE__ */ jsxRuntime.jsx(icons.StarOutlined, {})
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(AlignmentQuickSetting.AlignmentQuickSetting, {
        propKey: alignPropKey,
        listAlignment: ["flex-start", "center", "flex-end"]
      }),
      /* @__PURE__ */ jsxRuntime.jsx(ButtonColorConfig.ButtonColorConfig, {}),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.OpenSettingDialog, {})
    ]
  });
};

exports.ButtonSummitFormQuickSetting = ButtonSummitFormQuickSetting;
