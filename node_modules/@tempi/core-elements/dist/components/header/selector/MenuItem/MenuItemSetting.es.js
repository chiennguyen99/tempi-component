import { jsx, Fragment } from 'react/jsx-runtime';
import { t } from '../../../../i18n.es.js';
import { useProp, SelectConfig } from '@tempi/core-editor';
import { DEFAULT_HEADER } from '../../constants.es.js';
import { MenuItemType } from '../../type.es.js';
import { PROP_KEY } from '../../../../constants/propKey.es.js';

const MenuItemSetting = () => {
  const [type, setType] = useProp(PROP_KEY.Type);
  const [, setData] = useProp(PROP_KEY.ItemData);
  const onChangeType = (type2) => {
    if (type2 === MenuItemType.link) {
      setData(DEFAULT_HEADER.link.itemData);
    } else if (type2 === MenuItemType.button) {
      setData(DEFAULT_HEADER.button.itemData);
    }
    setType(type2);
  };
  return /* @__PURE__ */ jsx(Fragment, {
    children: /* @__PURE__ */ jsx(SelectConfig, {
      options: Object.values(MenuItemType).map((itemType) => ({
        label: itemType,
        value: itemType
      })),
      formItemProps: {
        label: t("Lo\u1EA1i"),
        style: {
          marginBottom: 0
        }
      },
      selectProps: {
        placeholder: t("Ch\u1ECDn lo\u1EA1i"),
        value: type,
        style: {
          minWidth: 140
        },
        onChange: onChangeType
      }
    })
  });
};

export { MenuItemSetting };
