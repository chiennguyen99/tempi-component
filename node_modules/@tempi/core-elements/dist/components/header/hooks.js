'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var coreRenderer = require('@tempi/core-renderer');
var React = require('react');
var type = require('./type.js');

const useHeaderPosition = (positionType) => {
  const headerRef = React.useRef(null);
  const [headerHeight, setHeaderHeight] = React.useState(110);
  const [direction, setDirection] = React.useState("");
  let oldScrollY = 0;
  const updateOldScrollY = coreRenderer.debounce((newValue) => oldScrollY = newValue, 100);
  const handleSticky = (stickyPosition, pageContainer) => {
    var _a, _b;
    if (pageContainer.pageYOffset >= stickyPosition) {
      (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.classList.add("sticky");
    } else {
      (_b = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _b.classList.remove("sticky");
    }
  };
  const controlDirection = (stickyPosition, pageContainer) => {
    var _a, _b;
    if (pageContainer.pageYOffset >= stickyPosition) {
      (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.classList.add("sticky");
      if ((window == null ? void 0 : window.scrollY) > oldScrollY) {
        setDirection("scrolldown");
      } else {
        setDirection("scrollup");
      }
      updateOldScrollY(window == null ? void 0 : window.scrollY);
    } else {
      (_b = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _b.classList.remove("sticky");
    }
  };
  React.useEffect(() => {
    if (!headerRef.current)
      return;
    const resizeObserver = new ResizeObserver(() => {
      var _a, _b;
      setHeaderHeight((_b = (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.getClientRects()[0]) == null ? void 0 : _b.height);
    });
    resizeObserver.observe(headerRef.current);
    return () => resizeObserver.disconnect();
  }, []);
  React.useEffect(() => {
    var _a, _b;
    const headerPosition = (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.offsetTop;
    const pageContainer = ((_b = document == null ? void 0 : document.querySelector(`#${coreRenderer.TEMPI_MAIN_IFRAME}`)) == null ? void 0 : _b.contentWindow) || window;
    const dynamicEvent = () => controlDirection(headerPosition, pageContainer);
    const stickyEvent = () => handleSticky(headerPosition, pageContainer);
    switch (positionType) {
      case type.PositionHeader.DYNAMIC:
        pageContainer == null ? void 0 : pageContainer.addEventListener("scroll", dynamicEvent);
        break;
      case type.PositionHeader.STICKY:
        pageContainer == null ? void 0 : pageContainer.addEventListener("scroll", stickyEvent);
        break;
    }
    return () => {
      window == null ? void 0 : window.removeEventListener("scroll", dynamicEvent);
      window == null ? void 0 : window.removeEventListener("scroll", stickyEvent);
    };
  }, [positionType]);
  return {
    headerRef,
    headerHeight,
    direction
  };
};

exports.useHeaderPosition = useHeaderPosition;
