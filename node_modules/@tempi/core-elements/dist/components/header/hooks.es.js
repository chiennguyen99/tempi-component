import { debounce, TEMPI_MAIN_IFRAME } from '@tempi/core-renderer';
import { useRef, useState, useEffect } from 'react';
import { PositionHeader } from './type.es.js';

const useHeaderPosition = (positionType) => {
  const headerRef = useRef(null);
  const [headerHeight, setHeaderHeight] = useState(110);
  const [direction, setDirection] = useState("");
  let oldScrollY = 0;
  const updateOldScrollY = debounce((newValue) => oldScrollY = newValue, 100);
  const handleSticky = (stickyPosition, pageContainer) => {
    var _a, _b;
    if (pageContainer.pageYOffset >= stickyPosition) {
      (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.classList.add("sticky");
    } else {
      (_b = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _b.classList.remove("sticky");
    }
  };
  const controlDirection = (stickyPosition, pageContainer) => {
    var _a, _b;
    if (pageContainer.pageYOffset >= stickyPosition) {
      (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.classList.add("sticky");
      if ((window == null ? void 0 : window.scrollY) > oldScrollY) {
        setDirection("scrolldown");
      } else {
        setDirection("scrollup");
      }
      updateOldScrollY(window == null ? void 0 : window.scrollY);
    } else {
      (_b = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _b.classList.remove("sticky");
    }
  };
  useEffect(() => {
    if (!headerRef.current)
      return;
    const resizeObserver = new ResizeObserver(() => {
      var _a, _b;
      setHeaderHeight((_b = (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.getClientRects()[0]) == null ? void 0 : _b.height);
    });
    resizeObserver.observe(headerRef.current);
    return () => resizeObserver.disconnect();
  }, []);
  useEffect(() => {
    var _a, _b;
    const headerPosition = (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.offsetTop;
    const pageContainer = ((_b = document == null ? void 0 : document.querySelector(`#${TEMPI_MAIN_IFRAME}`)) == null ? void 0 : _b.contentWindow) || window;
    const dynamicEvent = () => controlDirection(headerPosition, pageContainer);
    const stickyEvent = () => handleSticky(headerPosition, pageContainer);
    switch (positionType) {
      case PositionHeader.DYNAMIC:
        pageContainer == null ? void 0 : pageContainer.addEventListener("scroll", dynamicEvent);
        break;
      case PositionHeader.STICKY:
        pageContainer == null ? void 0 : pageContainer.addEventListener("scroll", stickyEvent);
        break;
    }
    return () => {
      window == null ? void 0 : window.removeEventListener("scroll", dynamicEvent);
      window == null ? void 0 : window.removeEventListener("scroll", stickyEvent);
    };
  }, [positionType]);
  return {
    headerRef,
    headerHeight,
    direction
  };
};

export { useHeaderPosition };
