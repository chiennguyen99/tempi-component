import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { useEditor, useBuilder, usePropSeparateDevice, BackgroundConfig } from '@tempi/core-editor';
import set from 'lodash.set';
import { theme, Space, Card, Typography, Tabs } from 'antd';
import { ROOT } from '@tempi/core-renderer';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { fontFamilyOptions } from '../../constants/fonts.es.js';

const Setting = () => {
  const {
    query,
    actions: { history }
  } = useEditor((query2) => ({
    rootNode: query2.nodes[ROOT]
  }));
  const { token } = theme.useToken();
  const { realDevice: device } = useBuilder();
  usePropSeparateDevice(PROP_KEY.PageMaxWidth, true);
  usePropSeparateDevice(PROP_KEY.PageWidthType, true);
  PROP_KEY.joinKey(
    PROP_KEY.CommonStyle,
    PROP_KEY.MaxWidth
  );
  const fontFamilyPropKey = PROP_KEY.joinKey(
    PROP_KEY.CommonStyle,
    PROP_KEY.FontFamily
  );
  const [fontFamily] = usePropSeparateDevice(fontFamilyPropKey, true);
  const onChangeProps = (value, key) => {
    history.ignore().setProp(ROOT, (props) => {
      set(props, PROP_KEY.joinKey(device, key), value);
    });
  };
  const generalConfigs = /* @__PURE__ */ jsxs(Fragment, {
    children: [
      false,
      /* @__PURE__ */ jsx(BackgroundConfig, {
        title: t("N\u1EC1n to\xE0n trang"),
        propKey: PROP_KEY.CommonStyle,
        separateDevice: true
      })
    ]
  });
  const textConfigs = /* @__PURE__ */ jsx(Fragment, {
    children: /* @__PURE__ */ jsx(Space, {
      direction: "vertical",
      style: {
        width: "100%"
      },
      children: fontFamilyOptions.map((font) => /* @__PURE__ */ jsx(Card, {
        onClick: () => {
          if (fontFamily === font.value) {
            onChangeProps(void 0, fontFamilyPropKey);
          } else {
            onChangeProps(font.value, fontFamilyPropKey);
          }
        },
        style: {
          cursor: "pointer",
          borderColor: fontFamily === font.value ? token.colorPrimary : "#e5e7eb"
        },
        children: /* @__PURE__ */ jsx(Typography.Text, {
          style: { fontSize: 24, fontFamily: font.value },
          children: font.label
        })
      }, font.value))
    })
  });
  const tabs = [
    { label: t("C\xE0i \u0111\u1EB7t chung"), key: "item-1", children: generalConfigs },
    { label: t("V\u0103n b\u1EA3n"), key: "item-2", children: textConfigs }
  ];
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(Typography.Text, {
        children: t("C\xE1c c\xE0i \u0111\u1EB7t d\u01B0\u1EDBi \u0111\xE2y s\u1EBD \u0111\u01B0\u1EE3c \xE1p d\u1EE5ng cho trang hi\u1EC7n t\u1EA1i")
      }),
      /* @__PURE__ */ jsx(Tabs, {
        items: tabs
      })
    ]
  });
};

export { Setting };
