import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { getStyle } from '@tempi/core-renderer';
import React__default, { useContext } from 'react';
import { Position } from '../../../../types/index.es.js';
import { ListItemContext } from '../context.es.js';
import { getIconCompoment } from '../../../../utils/getIconComponent.es.js';
import { Link } from '../../../../core/Link/index.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const StyledIcon = styled.div(
  ({ commonStyle, iconStyle }) => `
  display: flex;
  ${getStyle(iconStyle)}
  ${getStyle(commonStyle)}
`
);
const ListItemIconV2 = React__default.forwardRef((props, ref) => {
  const { commonStyle, event, icon, position, isEditor } = props;
  const { iconConfig, iconStyle } = useContext(ListItemContext);
  const GlobalIcon = getIconCompoment(iconConfig == null ? void 0 : iconConfig.icon);
  const IconComponent = getIconCompoment(icon);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      position === Position.behind && /* @__PURE__ */ jsx("div", {
        style: { width: iconConfig.spacing }
      }),
      /* @__PURE__ */ jsx(StyledIcon, {
        ref,
        commonStyle,
        iconStyle,
        children: isEditor ? IconComponent || GlobalIcon : /* @__PURE__ */ jsx(Link, __spreadProps(__spreadValues({}, event), {
          children: IconComponent || GlobalIcon
        }))
      }),
      position === Position.front && /* @__PURE__ */ jsx("div", {
        style: { width: iconConfig.spacing }
      })
    ]
  });
});
ListItemIconV2.displayName = "ListItemIconV2";

export { ListItemIconV2 };
