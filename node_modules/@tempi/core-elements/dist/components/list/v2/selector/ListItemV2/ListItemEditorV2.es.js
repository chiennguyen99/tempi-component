import { jsxs, jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { useEditor, useNode, crafting, AdvanceAttributes, getEditorName } from '@tempi/core-editor';
import { DEFAULT_LIST } from '../../constants.es.js';
import { ListItemQuickSetting } from './ListItemQuickSetting.es.js';
import { ListItemV2 } from '../../ui/ListItemV2.es.js';
import { RowEditor } from '../../../../section/selector.es.js';
import { RootEditor } from '../../../../root/selector.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const ListItemEditorV2 = (props) => {
  const { query, hoveredNodes } = useEditor((state) => ({
    enabled: state.options.enabled,
    hoveredNodes: state.events.hovered
  }));
  const {
    connectors: { connect, drag },
    isActive,
    isHover,
    allDescendants
  } = useNode((node) => {
    return {
      isActive: node.events.selected,
      isHover: node.events.hovered,
      allDescendants: query.node(node.id).descendants(true)
    };
  });
  const { children } = props;
  const showQuickSetting = allDescendants.some((el) => hoveredNodes.has(el)) || isActive || isHover;
  return /* @__PURE__ */ jsxs(WrapperListItem, {
    ref: (ref) => connect(drag(ref)),
    style: {
      position: "relative"
    },
    isShowBorder: showQuickSetting && !isActive && !isHover,
    children: [
      showQuickSetting && /* @__PURE__ */ jsx(ListItemQuickSetting, {}),
      /* @__PURE__ */ jsx(ListItemV2, __spreadProps(__spreadValues({}, props), {
        children
      }))
    ]
  });
};
const WrapperListItem = styled.div(
  ({ isShowBorder }) => `
   ${isShowBorder ? `&::after {
          content: '';
          border: 1px dashed #4d4d4d;
          position: absolute;
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          pointer-events: none;
          display: block;
        }` : ""}
`
);
ListItemEditorV2.craft = crafting({
  displayName: "Danh s\xE1ch bi\u1EC3u t\u01B0\u1EE3ng",
  tag: ListItemV2.displayName.toLowerCase(),
  advanceAttributes: AdvanceAttributes,
  props: DEFAULT_LIST.listItem,
  rules: {
    canMoveIn: () => false,
    canDrop: (targetNode) => {
      const ignoreTargets = [
        getEditorName({ RowEditor }),
        getEditorName({ RootEditor })
      ];
      return !ignoreTargets.includes(targetNode.data.name);
    }
  }
});

export { ListItemEditorV2 };
