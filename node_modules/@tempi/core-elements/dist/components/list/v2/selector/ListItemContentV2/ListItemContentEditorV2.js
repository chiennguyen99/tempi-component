'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var coreEditor = require('@tempi/core-editor');
var quickSetting = require('../../../../paragraph/quick-setting.js');
var editorQuickSetting = require('../../../../paragraph/editor-quick-setting.js');
var constants = require('../../constants.js');
var ListItemContentV2 = require('../../ui/ListItemContentV2.js');
var TipTapEditorV2 = require('../../../../../configs/TipTapEditor/TipTapEditorV2.js');
var propKey = require('../../../../../constants/propKey.js');

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const ListItemContentEditorV2 = coreEditor.withSelector(
  (props) => {
    const { track } = coreEditor.useBuilder();
    return /* @__PURE__ */ jsxRuntime.jsx(TipTapEditorV2.TipTapEditorV2, {
      propKey: propKey.PROP_KEY.Text,
      quickSetting: quickSetting.ParagraphQuickSetting,
      editorQuickSetting: editorQuickSetting.EditorQuickSetting,
      track: () => track == null ? void 0 : track({
        regionName: "ListItemContentSetting",
        contentName: "quickSettingBtn"
      }),
      children: /* @__PURE__ */ jsxRuntime.jsx(ListItemContentV2.ListItemContentV2, __spreadValues({}, props))
    });
  },
  {
    displayName: ListItemContentV2.ListItemContentV2.displayName,
    tag: ListItemContentV2.ListItemContentV2.displayName.toLowerCase(),
    advanceAttributes: coreEditor.AdvanceAttributes,
    props: constants.DEFAULT_LIST.listItemContent,
    rules: {
      canDrag: () => false
    }
  }
);

exports.ListItemContentEditorV2 = ListItemContentEditorV2;
