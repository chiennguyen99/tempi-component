import { jsx } from 'react/jsx-runtime';
import { t } from '../../../../../i18n.es.js';
import { TextAlignJustifyRegular, TextAlignRightRegular, TextAlignLeftRegular } from '@fluentui/react-icons';
import { useNode, useEditor, useProp, QuickSettingButton } from '@tempi/core-editor';
import { Position } from '../../../../../types/index.es.js';
import { PROP_KEY } from '../../../../../constants/propKey.es.js';

const AlignmentIconQuickSetting = () => {
  const { id, parentId } = useNode((node) => ({
    dom: node.dom,
    parentId: node.data.parent,
    name: node.data.name || "",
    isActive: node.events.selected,
    isHover: node.events.hovered
  }));
  const { actions, getSiblings } = useEditor();
  const index = getSiblings(id).indexOf(id);
  const [position, setPosition] = useProp(PROP_KEY.Position);
  const renderIcon = () => {
    switch (position) {
      case Position.front:
        return /* @__PURE__ */ jsx(TextAlignLeftRegular, {});
      case Position.behind:
        return /* @__PURE__ */ jsx(TextAlignRightRegular, {});
      default:
        return /* @__PURE__ */ jsx(TextAlignJustifyRegular, {});
    }
  };
  const handleClickIcon = () => {
    if (index === 0 && getSiblings(id).length > 0) {
      actions.move(id, parentId, index + 2);
      setPosition(Position.behind);
      return;
    }
    if (index > 0) {
      actions.move(id, parentId, index - 1);
      setPosition(Position.front);
    }
  };
  return /* @__PURE__ */ jsx(QuickSettingButton, {
    tooltip: t("C\u0103n ch\u1EC9nh"),
    onClick: handleClickIcon,
    children: renderIcon()
  });
};

export { AlignmentIconQuickSetting };
