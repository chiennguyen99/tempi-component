'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var ListItemConfig = require('./ListItemConfig.js');
var AlignmentQuickSetting = require('../../../../../quick-configs/AlignmentQuickSetting/AlignmentQuickSetting.js');
var propKey = require('../../../../../constants/propKey.js');
var ColorPickerQuickSetting = require('../../../../../quick-configs/ColorPickerQuickSetting/ColorPickerQuickSetting.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const ListItemQuickSetting = () => {
  const { actions } = coreEditor.useEditor();
  const { id } = coreEditor.useNode();
  const { track } = coreEditor.useBuilder();
  return /* @__PURE__ */ jsxRuntime.jsx(IndicatorDiv, {
    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RenderQuickSetting, {
      trigger: "click",
      onOpenChange: (visible) => {
        if (visible) {
          track == null ? void 0 : track({
            regionName: "ListItemIconSetting",
            contentName: "quickSettingBtn"
          });
        }
      },
      content: /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
            content: ListItemConfig.ListItemConfig,
            children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
              children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.AppsListFilled, {
                fontSize: 16
              })
            })
          }),
          /* @__PURE__ */ jsxRuntime.jsx(AlignmentQuickSetting.AlignmentQuickSetting, {
            propKey: propKey.PROP_KEY.joinKey(
              propKey.PROP_KEY.CommonStyle,
              propKey.PROP_KEY.JustifyContent
            ),
            listAlignment: ["flex-start", "center", "flex-end"]
          }),
          /* @__PURE__ */ jsxRuntime.jsx(ColorPickerQuickSetting.ColorPickerQuickSetting, {}),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.OpenSettingDialog, {}),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DuplicateNode, {}),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DeleteNode, {})
        ]
      }),
      children: /* @__PURE__ */ jsxRuntime.jsx(ColumnQuickSettingBtn, {
        onClick: () => actions.selectNode(id),
        children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.ChevronDownRegular, {
          fontSize: 12,
          style: { pointerEvents: "none" }
        })
      })
    })
  });
};
const IndicatorDiv = styled__default["default"].div`
  font-size: 12px;
  line-height: 12px;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: left;
  right: -8px;
  top: -8px;
  z-index: 999;
`;
const ColumnQuickSettingBtn = styled__default["default"].div`
  width: 18px;
  height: 18px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #7d7d7d;
  cursor: pointer;
  border-radius: 999px;
  transition-duration: 0.2s;
`;

exports.ListItemQuickSetting = ListItemQuickSetting;
