import { jsx, jsxs } from 'react/jsx-runtime';
import { t } from '../../../i18n.es.js';
import { TextTRegular } from '@fluentui/react-icons';
import { SubQuickSetting, QuickSettingButton, ColorPickerConfig } from '@tempi/core-editor';
import { Collapse } from 'antd';
import { TextConfig } from '../../../configs/TextConfig/TextConfig.es.js';
import { PROP_KEY } from '../../../constants/propKey.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const { Panel } = Collapse;
const digitPropKey = PROP_KEY.joinKey(
  PROP_KEY.CountdownStyle,
  PROP_KEY.DigitStyle
);
const labelPropKey = PROP_KEY.joinKey(
  PROP_KEY.CountdownStyle,
  PROP_KEY.LabelStyle
);
const content = (props) => /* @__PURE__ */ jsxs(Collapse, __spreadProps(__spreadValues({}, props), {
  children: [
    /* @__PURE__ */ jsxs(Panel, {
      header: t("Ch\u1EEF s\u1ED1"),
      children: [
        /* @__PURE__ */ jsx(ColorPickerConfig, {
          propKey: PROP_KEY.joinKey(digitPropKey, PROP_KEY.Color)
        }),
        /* @__PURE__ */ jsx(TextConfig, {
          propKey: PROP_KEY.joinKey(digitPropKey),
          config: {
            fontSize: true,
            textAlign: true,
            isCountdownTextSetting: true
          }
        })
      ]
    }, "DIGIT"),
    /* @__PURE__ */ jsxs(Panel, {
      header: t("Nh\xE3n"),
      children: [
        /* @__PURE__ */ jsx(ColorPickerConfig, {
          propKey: PROP_KEY.joinKey(labelPropKey, PROP_KEY.Color)
        }),
        /* @__PURE__ */ jsx(TextConfig, {
          propKey: PROP_KEY.joinKey(labelPropKey),
          config: {
            fontSize: true,
            textAlign: true,
            isCountdownTextSetting: true
          }
        })
      ]
    }, "LABEL")
  ]
}));
const TypographyCountdownQuickSetting = (props) => {
  return /* @__PURE__ */ jsx(SubQuickSetting, {
    content: () => content(props),
    children: /* @__PURE__ */ jsx(QuickSettingButton, {
      children: /* @__PURE__ */ jsx(TextTRegular, {})
    })
  });
};

export { TypographyCountdownQuickSetting };
