'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var reactIcons = require('@fluentui/react-icons');
var propKey = require('../../../constants/propKey.js');

const DisplayDistanceDialog = () => {
  const [showLabel] = coreEditor.useProp(propKey.PROP_KEY.ShowLabel);
  const [countdownLayout] = coreEditor.useProp(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CountdownStyle, propKey.PROP_KEY.Layout)
  );
  const countdownDisplayOptions = [
    { value: "vertical", label: i18n.t("common.vertical") },
    { value: "horizontal", label: i18n.t("common.horizontal") }
  ];
  const labelPositionOptions = [
    { value: "baseline", label: i18n.t("Ngang h\xE0ng") },
    { value: "center", label: i18n.t("Trung t\xE2m") }
  ];
  const content = () => {
    return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchConfig, {
          formItemProps: {
            label: i18n.t("Hi\u1EC3n th\u1ECB nh\xE3n")
          },
          propKey: propKey.PROP_KEY.ShowLabel
        }),
        /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
          formItemProps: {
            label: i18n.t("Kho\u1EA3ng c\xE1ch gi\u1EEFa c\xE1c ph\u1EA7n t\u1EED")
          },
          propKey: propKey.PROP_KEY.joinKey(
            propKey.PROP_KEY.CountdownStyle,
            propKey.PROP_KEY.ElementGap
          )
        }),
        showLabel && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
          formItemProps: {
            label: i18n.t("Kho\u1EA3ng c\xE1ch trong nh\xE3n")
          },
          propKey: propKey.PROP_KEY.joinKey(
            propKey.PROP_KEY.CountdownStyle,
            propKey.PROP_KEY.LabelGap
          )
        }),
        /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
          formItemProps: {
            label: i18n.t("Ki\u1EC3u hi\u1EC3n th\u1ECB")
          },
          propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CountdownStyle, propKey.PROP_KEY.Layout),
          options: countdownDisplayOptions
        }),
        countdownLayout === "horizontal" && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
          formItemProps: {
            label: i18n.t("V\u1ECB tr\xED nh\xE3n")
          },
          propKey: propKey.PROP_KEY.joinKey(
            propKey.PROP_KEY.CountdownStyle,
            propKey.PROP_KEY.LabelPosition
          ),
          options: labelPositionOptions
        })
      ]
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
    content,
    trigger: "click",
    placement: "bottom",
    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
      tooltip: i18n.t("Hi\u1EC3n th\u1ECB v\xE0 kho\u1EA3ng c\xE1ch"),
      children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.RowTripleRegular, {})
    })
  });
};

exports.DisplayDistanceDialog = DisplayDistanceDialog;
