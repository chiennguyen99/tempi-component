/// <reference types="react" />
import { TabItemInterface } from '../../type';
export type TabItemHeadProps = TabItemInterface & React.HTMLAttributes<HTMLDivElement>;
export declare const TabItemHead: React.FC<TabItemHeadProps>;
export declare const TabHeadButton: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType<any>;
} & Pick<TabItemInterface, "activeColor" | "textColor">, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TabHeadRectangle: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType<any>;
} & Pick<TabItemInterface, "activeColor" | "textColor">, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TabHeadLine: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType<any>;
} & Pick<TabItemInterface, "alignment" | "activeColor" | "textColor">, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TabHeadCard: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType<any>;
} & Pick<TabItemInterface, "alignment" | "activeColor" | "textColor">, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
//# sourceMappingURL=TabItemHead.d.ts.map