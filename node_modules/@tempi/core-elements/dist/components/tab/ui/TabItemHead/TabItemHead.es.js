import { jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const TabItemHead = (_a) => {
  var _b = _a, {
    type,
    children,
    isActive,
    activeColor = "#258DFF",
    textColor,
    alignment
  } = _b, rest = __objRest(_b, [
    "type",
    "children",
    "isActive",
    "activeColor",
    "textColor",
    "alignment"
  ]);
  switch (type) {
    case "line":
      return /* @__PURE__ */ jsx(TabHeadLine, __spreadProps(__spreadValues({
        alignment,
        className: isActive ? "active" : "",
        textColor,
        activeColor
      }, rest), {
        children
      }));
    case "card":
      return /* @__PURE__ */ jsx(TabHeadCard, __spreadProps(__spreadValues({
        alignment,
        className: isActive ? "active" : "",
        activeColor,
        textColor
      }, rest), {
        children
      }));
    case "rectangle":
      return /* @__PURE__ */ jsx(TabHeadRectangle, __spreadProps(__spreadValues({
        className: isActive ? "active" : "",
        activeColor,
        textColor
      }, rest), {
        children
      }));
    default:
      return /* @__PURE__ */ jsx(TabHeadButton, __spreadProps(__spreadValues({
        className: isActive ? "active" : "",
        activeColor,
        textColor
      }, rest), {
        children
      }));
  }
};
const baseCss = `
  transition: 0.2s;
  cursor: pointer;
  height: 32px;
  padding: 0 16px;
  display: flex;
  align-items: center;
  justify-content: center;
`;
const TabHeadButton = styled.div(
  ({ activeColor, textColor }) => `
border-radius: 999px;
background-color: transparent;
color: ${textColor || "inherit"};
${baseCss}
&.active {
  background: ${activeColor};
  color: #fff;
}
`
);
const TabHeadRectangle = styled.div(
  ({ activeColor, textColor }) => `
border-radius: 0;
background-color: transparent;
color: ${textColor || "inherit"};
${baseCss}
&.active {
  background: ${activeColor};
  color: #fff;
}
`
);
const TabHeadLine = styled.div(
  ({ activeColor, alignment, textColor }) => `
  ${baseCss}
  ${alignment === "justify" ? "width: 100% !important;" : ""}
  color: ${textColor || "inherit"};
  &::after {
    content: '';
    height: 2px;
    background-color: ${activeColor};
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0;
    transition: all 0.3s ease;
  }
  &.active {
    position: relative;
    &::after {
      opacity: 1;
    }
  }
`
);
const TabHeadCard = styled.div(
  ({ activeColor, alignment, textColor }) => `
  ${baseCss}
  ${alignment === "justify" ? "width: 100% !important;" : ""}
  color: ${textColor || "inherit"};
  &.active {
    color: ${activeColor};
  }
`
);
TabItemHead.displayName = "TabItemHead";

export { TabHeadButton, TabHeadCard, TabHeadLine, TabHeadRectangle, TabItemHead };
