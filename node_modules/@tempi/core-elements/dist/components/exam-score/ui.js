'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var coreRenderer = require('@tempi/core-renderer');
var React = require('react');
var reactHookForm = require('react-hook-form');
var ui = require('../button/v2/ui.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const ExamScore = ({
  textColor = "#000",
  boldColor = "#000",
  buttonColor = "#7367F0",
  buttonTextColor = "#fff",
  tableBorderColor = "#000"
}) => {
  var _a;
  const [loading, setLoading] = React.useState(false);
  const [score, setScore] = React.useState(null);
  const {
    register,
    formState: { errors },
    handleSubmit,
    setError
  } = reactHookForm.useForm();
  const { env = "dev" } = coreRenderer.useStore();
  const API = new coreRenderer.Api(coreRenderer.publicBffUrl[env]);
  const onSubmit = async ({ id }) => {
    var _a2, _b;
    setLoading(true);
    try {
      const res = await API.get("/v1/exam-score?id=" + id);
      if (res.data) {
        const data = (_a2 = res == null ? void 0 : res.data) == null ? void 0 : _a2.data;
        if ((_b = data == null ? void 0 : data.student) == null ? void 0 : _b.sbd) {
          setScore(data.student);
        } else {
          setError("id", {
            type: "manual",
            message: "S\u1ED1 b\xE1o danh kh\xF4ng h\u1EE3p l\u1EC7"
          });
        }
      }
    } catch (error) {
      console.error(error);
    }
    setLoading(false);
  };
  const discountByAverage = (average) => {
    if (average >= 9)
      return 5e6;
    if (average >= 8)
      return 18e5;
    if (average >= 7)
      return 17e5;
    if (average >= 6)
      return 16e5;
    if (average >= 5)
      return 15e5;
    return 14e5;
  };
  const renderScore = (score2) => {
    const { toan, van, ngoaiNgu, lichSu, diaLy, gdcd, vatLy, hoaHoc, sinhHoc } = score2;
    const subjects = [
      { name: "To\xE1n", score: toan },
      { name: "Ng\u1EEF v\u0103n", score: van },
      { name: "Ngo\u1EA1i ng\u1EEF", score: ngoaiNgu },
      { name: "L\u1ECBch s\u1EED", score: lichSu },
      { name: "\u0110\u1ECBa l\xFD", score: diaLy },
      { name: "GDCD", score: gdcd },
      { name: "V\u1EADt l\xFD", score: vatLy },
      { name: "H\xF3a h\u1ECDc", score: hoaHoc },
      { name: "Sinh h\u1ECDc", score: sinhHoc }
    ];
    const total = subjects.reduce(
      (acc, subject) => acc + Number(subject.score || 0),
      0
    );
    const count = subjects.filter((subject) => subject.score).length || 6;
    const average = Math.round(total * 10 / count) / 10;
    return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        /* @__PURE__ */ jsxRuntime.jsxs("div", {
          style: { marginBottom: "1em" },
          children: [
            "\u0110i\u1EC3m trung b\xECnh m\xF4n c\u1EE7a b\u1EA1n:",
            " ",
            /* @__PURE__ */ jsxRuntime.jsxs("strong", {
              style: { fontSize: "1.2em", color: boldColor },
              children: [
                " ",
                average.toFixed(1)
              ]
            })
          ]
        }),
        /* @__PURE__ */ jsxRuntime.jsx(StyledUl, {
          borderColor: tableBorderColor,
          children: subjects.map((subject, index) => {
            if (!subject.score)
              return null;
            return /* @__PURE__ */ jsxRuntime.jsxs("li", {
              children: [
                subject.name,
                ":",
                /* @__PURE__ */ jsxRuntime.jsx("br", {}),
                subject.score
              ]
            }, index);
          })
        }),
        /* @__PURE__ */ jsxRuntime.jsxs("div", {
          children: [
            "Khuy\u1EBFn m\xE3i gi\u1EA3m th\xEAm c\u1EE7a b\u1EA1n:",
            " ",
            /* @__PURE__ */ jsxRuntime.jsxs("strong", {
              style: { fontSize: "1.2em", color: boldColor },
              children: [
                discountByAverage(average).toLocaleString().replace(/,/g, "."),
                "\u0111"
              ]
            })
          ]
        })
      ]
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    style: { color: textColor },
    children: score ? renderScore(score) : /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(Label, {
          children: "Nh\u1EADp s\u1ED1 b\xE1o danh"
        }),
        /* @__PURE__ */ jsxRuntime.jsxs(StyledForm, {
          onSubmit: handleSubmit(onSubmit),
          children: [
            /* @__PURE__ */ jsxRuntime.jsxs("div", {
              style: { width: "100%" },
              children: [
                /* @__PURE__ */ jsxRuntime.jsx(StyledInput, __spreadValues({
                  placeholder: "Nh\u1EADp s\u1ED1 b\xE1o danh c\u1EE7a b\u1EA1n"
                }, register("id", {
                  required: "Vui l\xF2ng nh\u1EADp s\u1ED1 b\xE1o danh",
                  pattern: {
                    value: /^\d{8}$/,
                    message: "S\u1ED1 b\xE1o danh ph\u1EA3i c\xF3 8 ch\u1EEF s\u1ED1"
                  }
                }))),
                errors.id && /* @__PURE__ */ jsxRuntime.jsx(Warning, {
                  children: /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
                    children: (_a = errors.id) == null ? void 0 : _a.message
                  })
                })
              ]
            }),
            /* @__PURE__ */ jsxRuntime.jsx("div", {
              children: /* @__PURE__ */ jsxRuntime.jsx(ui.ButtonV2, {
                text: "Ki\u1EC3m tra",
                loading,
                style: {
                  color: buttonTextColor,
                  backgroundColor: buttonColor,
                  borderRadius: 6,
                  padding: "4px 15px"
                },
                commonStyle: {
                  width: 150,
                  height: 38
                }
              })
            })
          ]
        })
      ]
    })
  });
};
ExamScore.displayName = "ExamScore";
const Label = styled__default["default"].div`
  margin-bottom: 1em;
`;
const Warning = styled__default["default"].div`
  color: red;
  margin-top: 0.5em;
`;
const StyledForm = styled__default["default"].form`
  display: flex;
  gap: 1em;
  width: 100%;
`;
const StyledInput = styled__default["default"].input`
  width: 100%;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 8px;
  background-color: white;

  &:focus {
    border-color: #007bff;
    background-color: #fff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
  }
`;
const StyledUl = styled__default["default"].ul(
  ({ borderColor = "#000" }) => `
list-style: none;
width: 100%;
display: grid !important;
grid-auto-rows: minmax(min-content, max-content);
grid-template-columns: repeat(6, minmax(0, 1fr));
border: 1px solid ${borderColor};
font-size: 14px;
margin-bottom: 1em;

li {
  padding: 0.5em;
  border: 1px solid ${borderColor};
}
`
);

exports.ExamScore = ExamScore;
