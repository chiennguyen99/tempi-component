'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var styled = require('@emotion/styled');
var coreRenderer = require('@tempi/core-renderer');
var context = require('../../context.js');
var LazyComponent = require('../../../../core/LazyComponent/LazyComponent.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const ProductListInner = React__default["default"].forwardRef(
  (props, ref) => {
    const _a = props, { isEditorMode = false } = _a, rest = __objRest(_a, ["isEditorMode"]);
    const { showBlock } = context.useProductList();
    if (!isEditorMode && !showBlock)
      return null;
    return /* @__PURE__ */ jsxRuntime.jsx(StyledProductList, __spreadValues({
      ref
    }, rest));
  }
);
const ProductList = React__default["default"].forwardRef(
  (props, ref) => {
    const WrapLazy = props.isEditorMode ? React__default["default"].Fragment : LazyComponent.LazyComponent;
    return /* @__PURE__ */ jsxRuntime.jsx(WrapLazy, {
      children: /* @__PURE__ */ jsxRuntime.jsx(context.ProductListProvider, {
        children: /* @__PURE__ */ jsxRuntime.jsx(ProductListInner, __spreadValues({
          ref
        }, props))
      })
    });
  }
);
const StyledProductList = styled__default["default"].div(
  ({ commonStyle }) => `
  ${coreRenderer.getStyle(commonStyle)}
`
);
ProductList.displayName = "TekoProductListV1";

exports.ProductList = ProductList;
