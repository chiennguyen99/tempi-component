import { CommonAttributesInterface } from '@tempi/core-renderer';
import { ButtonV2Interface } from '../button';
import { SliderV2Interface } from '../slider';
export interface ResponsiveSettingDevice {
    gap?: number;
    itemsPerRow?: number;
}
export interface ResponsiveSetting {
    mobile?: ResponsiveSettingDevice;
    desktop?: ResponsiveSettingDevice;
}
export type CarouselSettingDevice = Omit<SliderV2Interface<{}>, 'type' | 'items'>;
export interface CarouselSetting {
    mobile?: CarouselSettingDevice;
    desktop?: CarouselSettingDevice;
}
export interface ItemSetting {
    priceColor?: string;
}
export interface ProductListV1Interface extends CommonAttributesInterface {
    type?: 'grid' | 'carousel';
    menuItemId?: string;
    slug?: string;
    limit?: number;
    itemSettings?: ItemSetting;
    responsiveSettings?: ResponsiveSetting;
    carouselSettings?: CarouselSetting;
    button?: ButtonV2Interface;
    actionButton?: 'loadMore' | 'openSearch';
}
export interface DiscoveryProduct {
    productInfo: {
        sku: string;
        name: string;
        imageUrl?: string;
        canonical: string;
    };
    promotions: {
        id: number;
        isDefault: boolean;
        applyOn: 'product' | 'order' | 'part_order';
        type: 'product' | 'coupon' | 'order';
        benefit: {
            gifts: {
                [key: string]: unknown;
            }[];
        };
        condition?: {
            coupon?: string;
        };
    }[];
    prices: {
        discountAmount: string;
        discountPercent: number;
        latestPrice: string;
        supplierRetailPrice: string;
    }[];
    flashSales: {
        id: number;
        type: string;
        discountPercent: number;
        usedDecimal: number;
        totalDecimal: number;
        endTimestampSec: string;
    }[];
    totalAvailable: number | null;
    status: {
        sellingCode: string;
        sellable: boolean;
    };
}
export interface TransformPrice {
    latestPrice?: number;
    supplierRetailPrice?: number;
    discountPercent?: number;
    discountAmount?: number;
}
export interface TekoProduct extends TransformPrice {
    sku: string;
    name: string;
    imageUrl?: string;
    url: string;
    hasGift: boolean;
    totalAvailable: number | null;
    flashSale?: DiscoveryProduct['flashSales']['0'];
}
type SortEnum = 'SORT_BY_UNSPECIFIED' | 'SORT_BY_PUBLISH_AT' | 'SORT_BY_PRICE' | 'SORT_BY_MOST_VIEW' | 'SORT_BY_TOP_SALE_QUANTITY' | 'SORT_BY_DISCOUNT_PERCENT' | 'SORT_BY_MOST_VIEW_3_DAYS' | 'SORT_BY_MOST_VIEW_7_DAYS' | 'SORT_BY_MOST_VIEW_30_DAYS' | 'SORT_BY_MOST_VIEW_90_DAYS' | 'SORT_BY_TOP_SALE_QUANTITY_3_DAYS' | 'SORT_BY_TOP_SALE_QUANTITY_7_DAYS' | 'SORT_BY_TOP_SALE_QUANTITY_30_DAYS' | 'SORT_BY_TOP_SALE_QUANTITY_90_DAYS' | 'SORT_BY_SCORE' | 'SORT_BY_NAME';
type OrderEnum = 'ORDER_BY_UNSPECIFIED' | 'ORDER_BY_ASCENDING' | 'ORDER_BY_DESCENDING';
export interface MenuItem {
    id: number;
    name: string;
    configs?: {
        sellerIds?: number[];
        masterCategoryIds?: number[];
        masterCategories?: string[];
        categories?: string[];
        brands?: string[];
        skus?: string[];
        tags?: string[];
        attributes?: {
            code: string;
            optionIds: number[];
        }[];
        providerIds?: number[];
        price?: {
            from?: number;
            to?: number;
        };
        hasPromotions?: 0 | 1;
    };
    sorting?: {
        sort?: SortEnum;
        order?: OrderEnum;
    };
}
export interface SearchBody {
    terminalCode: string;
    location?: string;
    filter?: {
        sellerIds?: string[];
        masterCategoryIds?: number[];
        masterCategories?: string[];
        categories?: string[];
        brands?: string[];
        skus?: string[];
        tags?: string[];
        attributes?: {
            code: string;
            optionIds: string[];
        }[];
        providerIds?: string[];
        priceLte?: string;
        priceGte?: string;
        hasPromotions?: boolean;
    };
    pagination: {
        pageNumber: number;
        itemsPerPage: number;
    };
    sorting?: {
        sort?: SortEnum;
        order?: OrderEnum;
    };
}
export {};
//# sourceMappingURL=type.d.ts.map