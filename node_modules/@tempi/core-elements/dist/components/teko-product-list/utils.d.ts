import { DiscoveryProduct, MenuItem, SearchBody, TekoProduct } from './type';
import { Env } from '@tempi/core-renderer';
export declare const cookProducts: (products: DiscoveryProduct[]) => TekoProduct[];
export declare const convertMenuItemConfigToUrl: (menuItem: MenuItem) => string;
export declare const transformSearchBody: (menuItem: MenuItem) => Partial<SearchBody>;
interface FetchProductOption {
    terminal: {
        code?: string;
        id?: number;
    };
    locationCode?: string;
    menuItemId?: number;
    slug?: string;
    size?: number;
    page?: number;
}
export declare const fetchProducts: (env: Env, options: FetchProductOption, baseMenuItem?: MenuItem) => Promise<{
    products: DiscoveryProduct[];
    hasNextPage?: boolean;
    menuItem?: MenuItem;
}>;
export declare const fetchProductsByCollection: (env: Env, options: Omit<FetchProductOption, 'menuItemId'>) => Promise<{
    products: DiscoveryProduct[];
    hasNextPage?: boolean;
}>;
export {};
//# sourceMappingURL=utils.d.ts.map