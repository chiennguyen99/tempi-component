import { useEditor, useNode, useProp, useBuilder } from '@tempi/core-editor';
import { ROOT } from '@tempi/core-renderer';
import { useState, useEffect } from 'react';
import { PROP_KEY } from '../../../constants/propKey.es.js';

const usePopup = () => {
  const { actions } = useEditor();
  const { node, isActive } = useNode((node2) => ({
    node: node2,
    isActive: node2.events.selected
  }));
  const [isMainPopup] = useProp(PROP_KEY.IsMainPopup);
  const { isEditingPopup, track, smartPopupId } = useBuilder();
  const [show, setShow] = useState(false);
  const [quickSettingVisible, setQuickSettingVisible] = useState(false);
  useEffect(() => {
    if (isActive || isEditingPopup && !smartPopupId || isEditingPopup && smartPopupId && isMainPopup) {
      actions.setCustom(ROOT, (custom) => custom.isEditingPopup = true);
      setShow(true);
    }
  }, [isActive, node.id, isEditingPopup, smartPopupId, isMainPopup]);
  return {
    show,
    setShow,
    quickSettingVisible,
    setQuickSettingVisible,
    track
  };
};

export { usePopup };
