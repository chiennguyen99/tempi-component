'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var coreEditor = require('@tempi/core-editor');
var React = require('react');
var constants = require('./constants.js');
var hooks = require('./hooks.js');
var quickSetting = require('./quick-setting.js');
var setting = require('./setting.js');
var ui = require('./ui.js');
var selector = require('../../root/selector.js');
var selector$1 = require('../../col/selector.js');
var selector$2 = require('../../section/selector.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const PopupEditorV1 = (_a) => {
  var _b = _a, {
    children,
    quickSetting: quickSetting$1
  } = _b, rest = __objRest(_b, [
    "children",
    "quickSetting"
  ]);
  const {
    connectors: { connect },
    node
  } = coreEditor.useNode((node2) => ({
    node: node2
  }));
  const { show, setShow } = hooks.usePopup();
  const [name, setName] = coreEditor.useProp("name");
  const [id, setId] = coreEditor.useProp("id");
  React.useEffect(() => {
    if (!id)
      setId(node.id);
    if (!name)
      setName(node.id);
  }, []);
  return /* @__PURE__ */ jsxRuntime.jsxs(ui.PopupV1, __spreadProps(__spreadValues({
    show,
    isEditorMode: true,
    ref: (ref) => connect(ref)
  }, rest), {
    children: [
      quickSetting$1 || React__default["default"].createElement(quickSetting.PopupQuickSetting, { setShow }),
      children
    ]
  }));
};
PopupEditorV1.craft = coreEditor.crafting({
  displayName: "Popup",
  tag: ui.PopupV1.displayName.toLowerCase(),
  customAttributes: setting.PopupSetting,
  advanceAttributes: coreEditor.AdvanceAttributes,
  props: constants.DEFAULT_POPUP_V1,
  rules: {
    canDrag: () => false,
    canMoveIn: (incomingNodes) => {
      const ignoreSources = [
        coreEditor.getEditorName({ RootEditor: selector.RootEditor }),
        coreEditor.getEditorName({ ColEditor: selector$1.ColEditor }),
        coreEditor.getEditorName({ RowEditor: selector$2.RowEditor })
      ];
      return incomingNodes.every(
        (incomingNode) => !ignoreSources.includes(incomingNode.data.name)
      );
    }
  }
});

exports.PopupEditorV1 = PopupEditorV1;
