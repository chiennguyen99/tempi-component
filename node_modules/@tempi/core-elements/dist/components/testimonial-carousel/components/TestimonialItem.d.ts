import { AlignmentType, Style } from '@tempi/core-renderer';
import React from 'react';
import { TestimonialItemInterface, TestimonialItemStyle, TestimonialLayoutType, TestimonialSkinType } from '../type';
export type TestimonialItemProps = TestimonialItemInterface & TestimonialItemStyle;
export declare const TestimonialItem: React.FC<TestimonialItemProps>;
export declare const getArrowClassName: (layout: TestimonialLayoutType, alignment: AlignmentType) => string;
export declare const StyledItem: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType<any>;
} & {
    width: number;
    layout: TestimonialLayoutType;
    alignment: AlignmentType;
    skin: TestimonialSkinType;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Content: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType<any>;
} & {
    commonStyle: Style;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Name: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType<any>;
} & {
    commonStyle: Style;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Title: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType<any>;
} & {
    commonStyle: Style;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
interface ContentWrapperProps {
    skin?: TestimonialSkinType;
    commonStyle: Style;
}
export declare const ContentWrapper: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType<any>;
} & ContentWrapperProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Arrow: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType<any>;
} & {
    imgWidth: number;
    className: string;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export {};
//# sourceMappingURL=TestimonialItem.d.ts.map