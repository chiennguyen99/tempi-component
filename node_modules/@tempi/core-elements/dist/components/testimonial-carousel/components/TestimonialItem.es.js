import { jsxs, jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { getStyle } from '@tempi/core-renderer';
import { Image } from '../../image/ui.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const TestimonialItem = ({
  image,
  imageStyle,
  content,
  contentStyle,
  title,
  titleStyle,
  name,
  nameStyle,
  width,
  alignment,
  layout,
  skin,
  bubbleStyle
}) => {
  const arrowAlign = layout === "imageInline" || layout === "imageAbove" ? alignment : imageStyle == null ? void 0 : imageStyle.alignment;
  return /* @__PURE__ */ jsxs(StyledItem, {
    width,
    layout,
    alignment,
    skin,
    children: [
      /* @__PURE__ */ jsxs(ContentWrapper, {
        skin,
        className: "testimonial__content",
        commonStyle: bubbleStyle,
        children: [
          /* @__PURE__ */ jsx(Content, {
            commonStyle: contentStyle,
            children: content
          }),
          /* @__PURE__ */ jsx(Arrow, {
            className: `arrow ${getArrowClassName(
              layout,
              arrowAlign || "center"
            )}`,
            imgWidth: imageStyle.width
          })
        ]
      }),
      /* @__PURE__ */ jsx("div", {
        className: "testimonial__image",
        children: /* @__PURE__ */ jsx(Image, __spreadProps(__spreadValues({}, image), {
          commonStyle: __spreadProps(__spreadValues({}, imageStyle), {
            height: imageStyle.width,
            objectFit: "cover"
          }),
          alignment: imageStyle.alignment
        }))
      }),
      /* @__PURE__ */ jsxs("div", {
        className: "testimonial__footer",
        children: [
          /* @__PURE__ */ jsx(Name, {
            commonStyle: nameStyle,
            children: name
          }),
          /* @__PURE__ */ jsx(Title, {
            commonStyle: titleStyle,
            children: title
          })
        ]
      })
    ]
  });
};
const arrowWidth = 12;
const defaultLayoutCss = (layout) => {
  switch (layout) {
    case "imageAbove":
      return `display: grid;
            grid-template-rows: auto auto auto;
            grid-template-columns: 1fr;
            .testimonial {
              &__content {
                grid-row: 2/3;
              }
              &__image {
                grid-row: 1/2;
              }
              &__footer {
                grid-row: 3/4;
              }
            }`;
    case "imageStacked":
      return `display: grid;
            grid-template-rows: auto auto auto;
            grid-template-columns: 1fr;
            .testimonial {
              &__content {
                grid-row: 1/2;
              }
              &__image {
                grid-row: 2/3;
              }
              &__footer {
                grid-row: 3/4;
              }
            }`;
    case "imageInline":
      return `display: flex; 
            flex-wrap: wrap;
            align-items: center;`;
    case "imageRight":
      return `display: grid;
            grid-template-rows: auto 1fr;
            grid-template-columns: 1fr auto;
            .testimonial {
              &__content {
                grid-row: 1/2; 
                grid-column: 1/2;
              }
              &__image {
                grid-row: 1/3; 
                grid-column: 2/3;
              }
              &__footer {
                grid-row: 2/3; 
                grid-column: 1/2;
              }
            }`;
    case "imageLeft":
      return `display: grid;
            grid-template-rows: auto 1fr;
            grid-template-columns: auto 1fr;
            .testimonial {
              &__content {
                grid-row: 1/2;
                grid-column: 2/3;
              }
              &__image {
                grid-row: 1/3; 
                grid-column: 1/2;
              }
              &__footer {
                grid-row: 2/3; 
                grid-column: 2/3;
              }
            }`;
    default:
      return "";
  }
};
const bubbleLayoutCss = (layout) => {
  switch (layout) {
    case "imageAbove":
      return `display: flex; 
            align-items: center;
            flex-wrap: wrap;
            .testimonial {
              &__image {
                order: 1;
              }
              &__footer {
                order: 2;
              }
              &__content {
                order: 3;
              }
            }`;
    case "imageStacked":
      return `display: grid;
            grid-template-rows: auto auto auto;
            grid-template-columns: 1fr;
            .testimonial {
              &__content {
                grid-row: 1/2;
              }
              &__image {
                grid-row: 2/3;
              }
              &__footer {
                grid-row: 3/4;
              }
            }`;
    case "imageInline":
      return `display: flex; 
            flex-wrap: wrap;
            align-items: center;`;
    case "imageRight":
      return `display: grid;
            grid-template-rows: auto 1fr;
            grid-template-columns: 1fr auto;
            .testimonial {
              &__content {
                grid-row: 1/3; 
                grid-column: 1/2;
              }
              &__image {
                grid-row: 1/2; 
                grid-column: 2/3;
              }
              &__footer {
                grid-row: 2/3; 
                grid-column: 2/3;
              }
            }`;
    case "imageLeft":
      return `display: grid;
            grid-template-rows: auto 1fr;
            grid-template-columns: auto 1fr;
            .testimonial {
              &__content {
                grid-row: 1/3;
                grid-column: 2/3;
              }
              &__image {
                grid-row: 1/2; 
                grid-column: 1/2;
              }
              &__footer {
                grid-row: 2/3; 
                grid-column: 1/2;
              }
            }`;
    default:
      return "";
  }
};
const getArrowClassName = (layout, alignment) => {
  return `arrow-${layout.split(/(?=[A-Z])/).join("-").toLowerCase()}-${alignment}`;
};
const arrowPositionAttribute = (className) => {
  if (className.includes("inline") || className.includes("stacked"))
    return "bottom";
  if (className.includes("image-left"))
    return "left";
  if (className.includes("image-right"))
    return "right";
  if (className.includes("above"))
    return "top";
};
const gapCss = (layout) => {
  switch (layout) {
    case "imageAbove":
      return `.testimonial__content { margin-top: ${arrowWidth + 8}px; }`;
    case "imageStacked":
    case "imageInline":
      return `.testimonial__content { margin-bottom: ${arrowWidth + 8}px; }`;
    case "imageRight":
    case "imageLeft":
      return `column-gap: ${arrowWidth + 8}px;`;
    default:
      return "";
  }
};
const styledItemCss = (skin, layout) => {
  switch (skin) {
    case "bubble":
      return `${bubbleLayoutCss(layout)} 
              ${gapCss(layout)}`;
    case "default":
      return defaultLayoutCss(layout);
    default:
      return "";
  }
};
const contentWrapperCss = (skin, commonStyle) => {
  switch (skin) {
    case "bubble":
      return getStyle(commonStyle);
    case "default":
      return ".arrow{ display: none; }";
    default:
      return "";
  }
};
const StyledItem = styled.div(
  ({ width, layout, alignment, skin }) => `
      width: ${width || 100}%;
      justify-content: ${alignment === "left" ? "flex-start" : alignment === "right" ? "flex-end" : "center"};
      .image{
        padding: 12px;
      }
      ${styledItemCss(skin, layout)}
    `
);
const Content = styled.div(
  ({ commonStyle }) => `
      ${getStyle(commonStyle)}
    `
);
const Name = styled.div(
  ({ commonStyle }) => `
      ${getStyle(commonStyle)}
    `
);
const Title = styled.div(
  ({ commonStyle }) => `
      ${getStyle(commonStyle)}
    `
);
const ContentWrapper = styled.div(
  ({ skin, commonStyle }) => `
  width: 100%;
  position: relative;
  ${contentWrapperCss(skin, commonStyle)}`
);
const Arrow = styled.div(
  ({ imgWidth, className }) => `
    position: absolute;
    width: ${arrowWidth}px;
    height: ${arrowWidth}px;
    background: inherit;
    z-index: -1;
    transform: rotate(45deg);
    ${arrowPositionAttribute(className)}: -${arrowWidth / 2}px;
    &.arrow-image-inline-left, 
    &.arrow-image-stacked-left, 
    &.arrow-image-above-left {
      left: ${imgWidth / 2 - arrowWidth / 2}px;
    }
    &.arrow-image-inline-right,
    &.arrow-image-stacked-right, 
    &.arrow-image-above-right {
      right: ${imgWidth / 2 - arrowWidth / 2}px;
    }
    &.arrow-image-inline-center,
    &.arrow-image-stacked-center, 
    &.arrow-image-above-center {
      right: calc(50% - ${arrowWidth / 2}px);
    }
    ${className.includes("image-left") || className.includes("image-right") ? `top: ${imgWidth / 2 - arrowWidth / 2}px;` : ""}
  `
);

export { Arrow, Content, ContentWrapper, Name, StyledItem, TestimonialItem, Title, getArrowClassName };
