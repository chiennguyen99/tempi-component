'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var icons = require('@ant-design/icons');
var styled = require('@emotion/styled');
var coreEditor = require('@tempi/core-editor');
var coreRenderer = require('@tempi/core-renderer');
var antd = require('antd');
var get = require('lodash.get');
var TestimonialItem = require('./TestimonialItem.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var get__default = /*#__PURE__*/_interopDefaultLegacy(get);

const { defaultImage } = coreRenderer.mappingAssets;
const TestimonialList = ({ propKey }) => {
  const {
    items,
    actions: { setProp }
  } = coreEditor.useNode((node) => {
    return {
      items: get__default["default"](node.data.props, propKey)
    };
  });
  const handleAddItem = () => {
    const newItem = {
      content: `item content ${items.length + 1}`,
      image: {
        src: defaultImage
      },
      name: `item name ${items.length + 1}`,
      title: `item title ${items.length + 1}`
    };
    setProp((props) => {
      props["items"] = [...items, newItem];
    }, 500);
  };
  const handleRemoveItem = (itemIndex) => {
    setProp((props) => {
      props["items"] = items.filter((_, index) => index !== itemIndex);
    }, 500);
  };
  const handleCloneItem = (itemIndex) => {
    const newItem = items[itemIndex];
    setProp((props) => {
      props["items"] = [...items, newItem];
    }, 500);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      items.map((_, index) => /* @__PURE__ */ jsxRuntime.jsx(TestimonialItem.TestimonialItem, {
        index,
        handleCloneItem,
        handleRemoveItem
      }, index)),
      /* @__PURE__ */ jsxRuntime.jsx(BtnWrapper, {
        children: /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
          onClick: handleAddItem,
          type: "primary",
          icon: /* @__PURE__ */ jsxRuntime.jsx(icons.PlusCircleOutlined, {}),
          children: i18n.t("Th\xEAm ph\u1EA7n t\u1EED")
        })
      })
    ]
  });
};
const BtnWrapper = styled__default["default"].div`
  display: flex;
  justify-content: center;
  margin-bottom: 16px;
`;

exports.TestimonialList = TestimonialList;
