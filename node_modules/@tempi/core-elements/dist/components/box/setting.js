'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var coreRenderer = require('@tempi/core-renderer');
var ContentWrapper = require('../../core/ContentWrapper/ContentWrapper.js');
var propKey = require('../../constants/propKey.js');

const BoxSetting = () => {
  const flexDirectionOptions = [
    { label: i18n.t("C\u1ED9t"), value: "row" },
    { label: i18n.t("H\xE0ng"), value: "column" }
  ];
  const positionOptions = [
    { label: i18n.t("Tr\xE1i"), value: "flex-start" },
    { label: i18n.t("Gi\u1EEFa"), value: "center" },
    { label: i18n.t("Ph\u1EA3i"), value: "flex-end" },
    { label: i18n.t("Gi\xE3n \u0111\u1EC1u"), value: "space-between" }
  ];
  const flexDirectionPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CommonStyle,
    propKey.PROP_KEY.FlexDirection
  );
  const justifyContentPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CommonStyle,
    propKey.PROP_KEY.JustifyContent
  );
  const alignItemsPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CommonStyle,
    propKey.PROP_KEY.AlignItems
  );
  const [direction] = coreEditor.useProp(flexDirectionPropKey);
  return /* @__PURE__ */ jsxRuntime.jsxs(ContentWrapper.ContentWrapper, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
        options: flexDirectionOptions,
        propKey: flexDirectionPropKey,
        formItemProps: {
          label: i18n.t("Ki\u1EC3u hi\u1EC3n th\u1ECB")
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
        options: positionOptions,
        propKey: direction === "column" ? alignItemsPropKey : justifyContentPropKey,
        formItemProps: {
          label: i18n.t("V\u1ECB tr\xED ph\u1EA7n t\u1EED")
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CommonStyle, propKey.PROP_KEY.Gap),
        unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
        formItemProps: {
          label: i18n.t("Kho\u1EA3ng c\xE1ch")
        }
      })
    ]
  });
};

exports.BoxSetting = BoxSetting;
