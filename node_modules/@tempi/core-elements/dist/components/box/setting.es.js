import { jsxs, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { useProp, SelectConfig, InputNumberConfig } from '@tempi/core-editor';
import { UnitEnum } from '@tempi/core-renderer';
import { ContentWrapper } from '../../core/ContentWrapper/ContentWrapper.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';

const BoxSetting = () => {
  const flexDirectionOptions = [
    { label: t("C\u1ED9t"), value: "row" },
    { label: t("H\xE0ng"), value: "column" }
  ];
  const positionOptions = [
    { label: t("Tr\xE1i"), value: "flex-start" },
    { label: t("Gi\u1EEFa"), value: "center" },
    { label: t("Ph\u1EA3i"), value: "flex-end" },
    { label: t("Gi\xE3n \u0111\u1EC1u"), value: "space-between" }
  ];
  const flexDirectionPropKey = PROP_KEY.joinKey(
    PROP_KEY.CommonStyle,
    PROP_KEY.FlexDirection
  );
  const justifyContentPropKey = PROP_KEY.joinKey(
    PROP_KEY.CommonStyle,
    PROP_KEY.JustifyContent
  );
  const alignItemsPropKey = PROP_KEY.joinKey(
    PROP_KEY.CommonStyle,
    PROP_KEY.AlignItems
  );
  const [direction] = useProp(flexDirectionPropKey);
  return /* @__PURE__ */ jsxs(ContentWrapper, {
    children: [
      /* @__PURE__ */ jsx(SelectConfig, {
        options: flexDirectionOptions,
        propKey: flexDirectionPropKey,
        formItemProps: {
          label: t("Ki\u1EC3u hi\u1EC3n th\u1ECB")
        }
      }),
      /* @__PURE__ */ jsx(SelectConfig, {
        options: positionOptions,
        propKey: direction === "column" ? alignItemsPropKey : justifyContentPropKey,
        formItemProps: {
          label: t("V\u1ECB tr\xED ph\u1EA7n t\u1EED")
        }
      }),
      /* @__PURE__ */ jsx(InputNumberConfig, {
        propKey: PROP_KEY.joinKey(PROP_KEY.CommonStyle, PROP_KEY.Gap),
        unitProps: { defaultValue: UnitEnum.pixel },
        formItemProps: {
          label: t("Kho\u1EA3ng c\xE1ch")
        }
      })
    ]
  });
};

export { BoxSetting };
