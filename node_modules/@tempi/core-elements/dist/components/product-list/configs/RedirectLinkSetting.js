'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var reactFrameComponent = require('react-frame-component');
var propKey = require('../../../constants/propKey.js');

const RedirectLinkSetting = ({
  open,
  setOpen
}) => {
  const { document: frameDocument } = reactFrameComponent.useFrame();
  const [form] = antd.Form.useForm();
  const [buttonLink, setButtonLink] = coreEditor.useProp(propKey.PROP_KEY.ButtonLink);
  const handlerSaveModal = async (value) => {
    setButtonLink(value.link);
    setOpen(false);
  };
  React.useEffect(() => {
    if (!!buttonLink && open)
      form.setFieldValue("link", buttonLink);
  }, [open]);
  return /* @__PURE__ */ jsxRuntime.jsx(antd.Modal, {
    title: i18n.t("C\u1EA5u h\xECnh \u0111\u01B0\u1EDDng d\u1EABn"),
    zIndex: 2e3,
    onCancel: () => {
      form.resetFields();
      setOpen(false);
    },
    open,
    okText: i18n.t("L\u01B0u"),
    destroyOnClose: true,
    cancelText: i18n.t("common.cancel"),
    bodyStyle: { paddingTop: 0 },
    getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
    onOk: () => form.submit(),
    cancelButtonProps: {
      shape: "round"
    },
    okButtonProps: {
      shape: "round"
    },
    children: /* @__PURE__ */ jsxRuntime.jsx(antd.Form, {
      form,
      onFinish: handlerSaveModal,
      layout: "vertical",
      scrollToFirstError: true,
      children: /* @__PURE__ */ jsxRuntime.jsx(antd.Form.Item, {
        label: i18n.t("\u0110\u01B0\u1EDDng d\u1EABn"),
        name: "link",
        children: /* @__PURE__ */ jsxRuntime.jsx(antd.Input, {
          placeholder: i18n.t("Nh\u1EADp \u0111\u01B0\u1EDDng d\u1EABn")
        })
      })
    })
  });
};

exports.RedirectLinkSetting = RedirectLinkSetting;
