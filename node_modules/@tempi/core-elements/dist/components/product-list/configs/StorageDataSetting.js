'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var antd = require('antd');
var React = require('react');
var reactFrameComponent = require('react-frame-component');
var constants = require('../constants.js');
var useStorageData = require('../../../configs/storage/hook/useStorageData.js');
var ConfigStorageData = require('../../../configs/storage/ConfigStorageData.js');

const StorageDataSetting = ({
  open,
  setOpen
}) => {
  const { document: frameDocument } = reactFrameComponent.useFrame();
  const [form] = antd.Form.useForm();
  const formConfigs = antd.Form.useWatch("configs", form);
  const {
    getFormConfigs,
    ggSheetsAccounts,
    handleFetchFormAccount,
    handleSubmitStorageData,
    initStorageData,
    loadingForm,
    configStorageId
  } = useStorageData.useStorageData({ form });
  React.useEffect(() => {
    if (open) {
      getFormConfigs(configStorageId, initStorageData);
      handleFetchFormAccount();
    }
  }, [open]);
  const handlerSaveModal = async (value) => {
    await handleSubmitStorageData({ configs: value.configs });
    setOpen(false);
  };
  return /* @__PURE__ */ jsxRuntime.jsx(antd.Modal, {
    title: i18n.t("L\u01B0u d\u1EEF li\u1EC7u"),
    zIndex: 2e3,
    onCancel: () => setOpen(false),
    open,
    okText: i18n.t("L\u01B0u"),
    destroyOnClose: true,
    cancelText: i18n.t("common.cancel"),
    bodyStyle: { paddingTop: 0 },
    getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
    onOk: () => form.submit(),
    cancelButtonProps: {
      shape: "round"
    },
    okButtonProps: {
      loading: loadingForm,
      shape: "round",
      disabled: formConfigs == null ? void 0 : formConfigs.some(
        (item) => (item == null ? void 0 : item.statusGoogleSheetUrl) === "validating"
      )
    },
    children: /* @__PURE__ */ jsxRuntime.jsx(antd.Form, {
      form,
      onFinish: handlerSaveModal,
      layout: "vertical",
      scrollToFirstError: true,
      children: /* @__PURE__ */ jsxRuntime.jsx(antd.Spin, {
        spinning: loadingForm,
        children: /* @__PURE__ */ jsxRuntime.jsx(ConfigStorageData.ConfigStorageData, {
          form,
          ggSheetsAccounts,
          handleFetchFormAccount,
          suggestionAttributes: Object.values(constants.DATA_KEYS)
        })
      })
    })
  });
};

exports.StorageDataSetting = StorageDataSetting;
