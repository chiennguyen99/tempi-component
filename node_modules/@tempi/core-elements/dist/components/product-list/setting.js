'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var iconsDev = require('@tempi/icons-dev');
var constants = require('./constants.js');
var StorageDataSetting = require('./configs/StorageDataSetting.js');
var RedirectLinkSetting = require('./configs/RedirectLinkSetting.js');
var ProductListConfigModal = require('./configs/ProductListConfigModal/ProductListConfigModal.js');
var propKey = require('../../constants/propKey.js');

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const aligmentOptions = [
  {
    value: "left",
    label: "alignment_config.left",
    children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
      name: "LeftAlignmentOutlined",
      style: { fontSize: 50 }
    })
  },
  {
    value: "center",
    label: "alignment_config.center",
    children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
      name: "CenterAlignmentOutlined",
      style: { fontSize: 50 }
    })
  }
];
const layoutOptions = [
  {
    value: "grid",
    label: "layout_config.grid",
    children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
      name: "GridLayoutOutlined",
      style: { fontSize: 85, width: 85, height: 60 }
    })
  },
  {
    value: "carousel",
    label: "layout_config.carousel",
    children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
      name: "CarouselLayoutOutlined",
      style: { fontSize: 120, width: 120, height: 60 },
      width: 120,
      height: 60
    })
  }
];
const Setting = () => {
  const [eventType] = coreEditor.useProp(propKey.PROP_KEY.EventType);
  const [openStorageSetting, setOpenStorageSetting] = React.useState(false);
  const [openRedirectLinkSetting, setOpenRedirectLinkSetting] = React.useState(false);
  const [layout] = coreEditor.useProp(propKey.PROP_KEY.Layout);
  const [gridOptions, setGridOptions] = coreEditor.useProp(propKey.PROP_KEY.GridOptions);
  const [carouselOptions, setCarouselOptions] = coreEditor.useProp(
    propKey.PROP_KEY.CarouselOptions
  );
  const [showButton, setShowButton] = coreEditor.useProp(propKey.PROP_KEY.ShowButton);
  const [orderButton, setOrderButton] = coreEditor.useProp(propKey.PROP_KEY.OrderButton);
  const { isPrebuildEditor } = coreEditor.useBuilder();
  const handleShowButton = () => {
    if (showButton && !(orderButton == null ? void 0 : orderButton.buttonStyle)) {
      setOrderButton(constants.DEFAULT_PRODUCT_LIST.orderButton);
    }
    setShowButton(!showButton);
  };
  React.useEffect(() => {
    if (layout === "grid" && !gridOptions)
      setGridOptions(__spreadValues({}, constants.defaultGridOptions));
    if (layout === "carousel" && !carouselOptions)
      setCarouselOptions(__spreadValues({}, constants.defaultCarouselOptions));
  }, [layout]);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchToShow, {
        formItemProps: { label: i18n.t("Th\xEAm n\xFAt b\u1EA5m d\u01B0\u1EDBi s\u1EA3n ph\u1EA9m") },
        show: showButton,
        setShow: handleShowButton,
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputConfig, {
          formItemProps: {
            label: i18n.t("T\xEAn n\xFAt b\u1EA5m"),
            description: i18n.t('Hi\u1EC3n th\u1ECB "\u0110\u1EB7t h\xE0ng" khi kh\xF4ng nh\u1EADp')
          },
          inputProps: { maxLength: 20 },
          propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.OrderButton, propKey.PROP_KEY.Text)
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RadioConfig, {
        formItemProps: {
          label: showButton ? i18n.t("Khi kh\xE1ch h\xE0ng b\u1EA5m v\xE0o n\xFAt b\u1EA5m") : i18n.t("Khi kh\xE1ch h\xE0ng b\u1EA5m v\xE0o s\u1EA3n ph\u1EA9m"),
          layout: "vertical"
        },
        propKey: propKey.PROP_KEY.EventType,
        radioGroupProps: {
          options: [
            {
              value: "showPopup",
              label: /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                  i18n.t(
                    "M\u1EDF popup t\u1EA1o \u0111\u01A1n, l\u01B0u d\u1EEF li\u1EC7u v\u1EC1 Gmail, Google Sheet ho\u1EB7c API."
                  ),
                  eventType === "showPopup" && !isPrebuildEditor && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                      " ",
                      /* @__PURE__ */ jsxRuntime.jsx(antd.Typography.Link, {
                        onClick: () => setOpenStorageSetting(true),
                        children: i18n.t("C\u1EA5u h\xECnh l\u01B0u d\u1EEF li\u1EC7u")
                      })
                    ]
                  })
                ]
              })
            },
            {
              value: "link",
              label: !showButton ? /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
                children: i18n.t(
                  "\u0110i\u1EC1u h\u01B0\u1EDBng kh\xE1ch h\xE0ng v\u1EC1 \u0111\u01B0\u1EDDng d\u1EABn m\xE0 b\u1EA1n c\u1EA5u h\xECnh trong danh s\xE1ch s\u1EA3n ph\u1EA9m b\xEAn d\u01B0\u1EDBi."
                )
              }) : /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                  i18n.t(
                    "\u0110i\u1EC1u h\u01B0\u1EDBng kh\xE1ch h\xE0ng v\u1EC1 Facebook, Zalo ho\u1EB7c s\xE0n th\u01B0\u01A1ng m\u1EA1i \u0111i\u1EC7n t\u1EED."
                  ),
                  eventType === "link" && !isPrebuildEditor && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                      " ",
                      /* @__PURE__ */ jsxRuntime.jsx(antd.Typography.Link, {
                        onClick: () => setOpenRedirectLinkSetting(true),
                        children: i18n.t("C\u1EA5u h\xECnh \u0111\u01B0\u1EDDng d\u1EABn")
                      })
                    ]
                  })
                ]
              })
            }
          ],
          style: {
            display: "flex",
            flexDirection: "column",
            rowGap: 8
          }
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(StorageDataSetting.StorageDataSetting, {
        open: openStorageSetting,
        setOpen: setOpenStorageSetting
      }),
      /* @__PURE__ */ jsxRuntime.jsx(RedirectLinkSetting.RedirectLinkSetting, {
        open: openRedirectLinkSetting,
        setOpen: setOpenRedirectLinkSetting
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ModalConfigWrapper, {
        title: i18n.t("Qu\u1EA3n l\xFD s\u1EA3n ph\u1EA9m"),
        customModal: ProductListConfigModal.ProductListConfigModal
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputConfig, {
        formItemProps: {
          label: i18n.t("\u0110\u01A1n v\u1ECB ti\u1EC1n t\u1EC7"),
          description: i18n.t("Hi\u1EC3n th\u1ECB \u0111 khi kh\xF4ng nh\u1EADp")
        },
        propKey: propKey.PROP_KEY.CurrencyUnit
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
        formItemProps: {
          label: i18n.t("V\u1ECB tr\xED \u0111\u01A1n v\u1ECB ti\u1EC1n t\u1EC7")
        },
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CurrencyAlignment),
        buttonGroupProps: {
          listAlignment: ["left", "right"]
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.CustomRadioConfig, {
        options: i18n.getOptionsI18n(i18n.t, aligmentOptions, "label"),
        propKey: propKey.PROP_KEY.Alignment,
        formItemProps: { label: i18n.t("C\xE1ch hi\u1EC3n th\u1ECB n\u1ED9i dung s\u1EA3n ph\u1EA9m") }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.CustomRadioConfig, {
        options: i18n.getOptionsI18n(i18n.t, layoutOptions, "label"),
        propKey: propKey.PROP_KEY.Layout,
        formItemProps: { label: i18n.t("C\xE1ch hi\u1EC3n th\u1ECB danh s\xE1ch") }
      }),
      layout === "carousel" && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
            sliderProps: { min: 1, max: 5, step: 0.5 },
            propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CarouselOptions, propKey.PROP_KEY.Speed),
            usePropOptions: {
              formatter: (val) => val / 1e3,
              parser: (val) => val * 1e3
            },
            formItemProps: { label: i18n.t("T\u1ED1c \u0111\u1ED9 tr\u01B0\u1EE3t (gi\xE2y)") }
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
            sliderProps: { min: 1, max: 10, step: 1 },
            propKey: propKey.PROP_KEY.joinKey(
              propKey.PROP_KEY.CarouselOptions,
              propKey.PROP_KEY.SlidesPerView
            ),
            formItemProps: { label: i18n.t("S\u1ED1 s\u1EA3n ph\u1EA9m tr\xEAn m\u1ED9t h\xE0ng") }
          })
        ]
      }),
      layout === "grid" && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
        sliderProps: { min: 1, max: 10, step: 1 },
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.GridOptions, propKey.PROP_KEY.Columns),
        formItemProps: { label: i18n.t("S\u1ED1 s\u1EA3n ph\u1EA9m tr\xEAn m\u1ED9t h\xE0ng") }
      })
    ]
  });
};

exports.Setting = Setting;
