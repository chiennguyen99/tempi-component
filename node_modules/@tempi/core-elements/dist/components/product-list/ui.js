'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var constants = require('./constants.js');
var hooks = require('./hooks.js');
var CheckoutPopup = require('./components/CheckoutPopup/CheckoutPopup.js');
var CheckoutSuccessPopup = require('./components/CheckoutSuccessPopup/CheckoutSuccessPopup.js');
var ProductCarousel = require('./components/ProductCarousel/ProductCarousel.js');
var ProductGrid = require('./components/ProductGrid/ProductGrid.js');

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const TempiProductList = (_a) => {
  var _b = _a, {
    isEditingMode,
    configStorage
  } = _b, restProps = __objRest(_b, [
    "isEditingMode",
    "configStorage"
  ]);
  const {
    selectedProduct,
    setSelectedProduct,
    loading,
    doneCheckout,
    setDoneCheckout,
    handleFinishCheckout
  } = hooks.useCheckout(configStorage);
  const handleClickProduct = (restProps == null ? void 0 : restProps.eventType) === "showPopup" ? setSelectedProduct : void 0;
  const renderContent = () => {
    if ((restProps == null ? void 0 : restProps.layout) === "carousel")
      return /* @__PURE__ */ jsxRuntime.jsx(ProductCarousel.ProductCarousel, __spreadProps(__spreadValues({
        isEditingMode
      }, restProps), {
        carouselOptions: __spreadValues(__spreadValues({}, constants.defaultCarouselOptions), restProps == null ? void 0 : restProps.carouselOptions),
        onClick: handleClickProduct
      }));
    return /* @__PURE__ */ jsxRuntime.jsx(ProductGrid.ProductGrid, __spreadProps(__spreadValues({
      isEditingMode
    }, restProps), {
      gridOptions: __spreadValues(__spreadValues({}, constants.defaultGridOptions), restProps == null ? void 0 : restProps.gridOptions),
      onClick: handleClickProduct
    }));
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      renderContent(),
      /* @__PURE__ */ jsxRuntime.jsx(CheckoutPopup.CheckoutPopup, {
        open: !!selectedProduct,
        setOpen: () => setSelectedProduct(void 0),
        loading,
        onFinish: handleFinishCheckout
      }),
      /* @__PURE__ */ jsxRuntime.jsx(CheckoutSuccessPopup.CheckoutSuccessPopup, {
        open: doneCheckout,
        setOpen: () => setDoneCheckout(false)
      })
    ]
  });
};
TempiProductList.displayName = "TempiProductList";

exports.TempiProductList = TempiProductList;
