import { jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { getStyle } from '@tempi/core-renderer';
import { QRCodeCanvas } from 'qrcode.react';
import { useMemo } from 'react';
import { MAPPING_VERTICAL_ALIGNMENT_FLEX, MAPPING_ALIGNMENT_FLEX } from '../../constants/grid.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const QRCode = ({
  value,
  qrCodeStyle,
  commonStyle,
  alignment = MAPPING_VERTICAL_ALIGNMENT_FLEX.center,
  size = 160,
  bordered = true
}) => {
  const qrCodeProps = useMemo(() => {
    return {
      value,
      size,
      level: "M",
      bgColor: (qrCodeStyle == null ? void 0 : qrCodeStyle.backgroundColor) || "transparent",
      fgColor: qrCodeStyle == null ? void 0 : qrCodeStyle.color
    };
  }, [qrCodeStyle, size, value]);
  return /* @__PURE__ */ jsx(QRCodeWrapper, {
    align: alignment,
    children: /* @__PURE__ */ jsx(StyledQRCode, __spreadProps(__spreadValues({
      commonStyle
    }, { size, bordered, backgroundColor: qrCodeStyle == null ? void 0 : qrCodeStyle.backgroundColor }), {
      children: /* @__PURE__ */ jsx(QRCodeCanvas, __spreadValues({}, qrCodeProps))
    }))
  });
};
QRCode.displayName = "QRCode";
const QRCodeWrapper = styled.div(
  ({ align }) => `
  display: flex;
  justify-content: ${MAPPING_ALIGNMENT_FLEX[align]};
`
);
const StyledQRCode = styled.div(
  ({
    size,
    backgroundColor,
    bordered,
    commonStyle
  }) => `
  box-sizing: border-box;
  margin: 0;
  list-style: none;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: ${backgroundColor ? backgroundColor : "#fff"};
  border-radius: 8px;
  ${bordered ? "border: 1px solid rgba(5, 5, 5, 0.06);" : ""}
  position: relative;
  width: ${size};
  height: ${size};
  overflow: hidden;
  ${getStyle(commonStyle)};
`
);

export { QRCode };
