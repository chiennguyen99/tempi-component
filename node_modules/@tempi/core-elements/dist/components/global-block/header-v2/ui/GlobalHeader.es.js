import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { getImageUrlFromGoogleUserContent } from '@tempi/core-renderer';
import clsx from 'clsx';
import { useState, useEffect } from 'react';
import { useHeaderPosition } from '../../../header/hooks.es.js';
import { calculateGrid, flattenToTreeMax2Level, getUrlOfMenuItem, getTargetUrl } from './utils.es.js';
import { PositionHeader } from '../../../header/type.es.js';
import { Header } from './components/Header.es.js';
import { Content } from './components/Content.es.js';
import { Logo, LogoImg } from './components/Logo.es.js';
import { ToggleButton } from './components/ToggleButton.es.js';
import { Navbar } from './components/NavigationBar.es.js';
import { Menu } from './components/Menu.es.js';
import { Item, ItemLabel, ItemContentWrapper, ItemContent, ItemIcon } from './components/Item.es.js';
import { DropdownItem } from './components/DropdownItem.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const GlobalHeader = (props) => {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const {
    commonStyle,
    logoConfig,
    menuConfig,
    menu = [],
    isEditingMode,
    stickyTop
  } = props || {};
  const grid = calculateGrid(props);
  const menuOpenClassName = clsx({ open: mobileMenuOpen });
  const tree = flattenToTreeMax2Level(
    (menu || []).filter((el) => !el.isHidden)
  );
  const { headerRef, headerHeight } = useHeaderPosition(
    stickyTop ? PositionHeader.STICKY : PositionHeader.NORMAL
  );
  useEffect(() => {
    const handleClickOutside = (event) => {
      var _a, _b;
      if (!((_b = (_a = headerRef == null ? void 0 : headerRef.current) == null ? void 0 : _a.contains) == null ? void 0 : _b.call(_a, event.target))) {
        setMobileMenuOpen(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [headerRef]);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(Header, {
        commonStyle,
        ref: headerRef,
        grid,
        headerHeight,
        children: /* @__PURE__ */ jsxs(Content, {
          grid,
          commonStyle,
          children: [
            (logoConfig == null ? void 0 : logoConfig.show) && /* @__PURE__ */ jsx(Logo, __spreadProps(__spreadValues({}, !isEditingMode ? { href: "/" } : {}), {
              grid,
              children: /* @__PURE__ */ jsx(LogoImg, {
                alt: logoConfig == null ? void 0 : logoConfig.alt,
                src: getImageUrlFromGoogleUserContent(
                  logoConfig == null ? void 0 : logoConfig.src,
                  logoConfig == null ? void 0 : logoConfig.googleImageParams
                ),
                grid,
                loading: "lazy"
              })
            })),
            /* @__PURE__ */ jsx(ToggleButton, {
              className: menuOpenClassName,
              grid,
              onClick: () => setMobileMenuOpen(!mobileMenuOpen)
            }),
            /* @__PURE__ */ jsx(Navbar, {
              grid,
              children: /* @__PURE__ */ jsx(Menu, {
                className: menuOpenClassName,
                grid,
                children: tree.map((item) => {
                  var _a;
                  return /* @__PURE__ */ jsx(Item, {
                    children: ((_a = item == null ? void 0 : item.children) == null ? void 0 : _a.length) > 0 ? /* @__PURE__ */ jsx(DropdownItem, {
                      item,
                      grid,
                      alignMenu: menuConfig == null ? void 0 : menuConfig.align,
                      isEditingMode,
                      backgroundColor: commonStyle.backgroundColor || "white"
                    }) : /* @__PURE__ */ jsx(ItemLabel, {
                      children: /* @__PURE__ */ jsx(ItemContentWrapper, {
                        alignMenu: menuConfig == null ? void 0 : menuConfig.align,
                        children: /* @__PURE__ */ jsxs(ItemContent, __spreadProps(__spreadValues(__spreadProps(__spreadValues({
                          alignMenu: menuConfig == null ? void 0 : menuConfig.align
                        }, !isEditingMode ? {
                          href: getUrlOfMenuItem(item)
                        } : {}), {
                          grid,
                          target: getTargetUrl(item.target)
                        }), (item == null ? void 0 : item.linkType) === "LINK" && item.nofollow ? { rel: "nofollow" } : {}), {
                          children: [
                            (item == null ? void 0 : item.iconUrl) && /* @__PURE__ */ jsx(ItemIcon, {
                              src: item.iconUrl,
                              loading: "lazy"
                            }),
                            item == null ? void 0 : item.name
                          ]
                        }))
                      })
                    })
                  }, item.id);
                })
              })
            })
          ]
        })
      }),
      /* @__PURE__ */ jsx("div", {
        className: "placeholder"
      })
    ]
  });
};

export { GlobalHeader };
