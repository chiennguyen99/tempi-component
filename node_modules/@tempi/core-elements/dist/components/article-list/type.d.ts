import { CommonAttributesInterface, IPageExtraInfo } from '@tempi/core-renderer';
export interface ArticleCategoryInterface {
    id: number;
    name: string;
    websiteId?: number;
}
export interface ArticleGridLayoutConfig {
    row: number;
    column: number;
    gutter: number;
}
export interface ArticleListLayoutConfig {
    row: number;
    gutter: number;
}
export type ArticleLayoutInterface = 'grid' | 'list';
export type CategoryType = 'button' | 'text';
export interface ArticleListInterface extends CommonAttributesInterface {
    layout: ArticleLayoutInterface;
    categoryIds: number[];
    gridConfig: ArticleGridLayoutConfig;
    listConfig: ArticleListLayoutConfig;
    showLoadMore: boolean;
    isEditingMode?: boolean;
    displayConfig?: ArticleDisplayConfig;
    loadMoreType?: LoadMoreType;
    paginationColor?: string;
    isOpenNewTab?: boolean;
    titleFontSize?: number;
    categoryColor?: string;
    categoryType?: CategoryType;
    triggerUpdate?: boolean;
}
export interface ArticleInfo {
    authorName: string;
    publishedAt: number;
}
export interface ArticleInterface {
    id: number;
    name: string;
    description: string;
    extraInfo: IPageExtraInfo;
    articleInfo: ArticleInfo;
    categories: ArticleCategoryInterface[];
    canonical: string;
    slug: string;
}
export interface ArticleListPaginationInterface {
    page: number;
    pageSize: number;
    total: number;
}
export interface ArticleServiceInterface {
    getWebsiteCategories?: (websiteId: number) => Promise<ArticleCategoryInterface[]>;
}
export interface ArticleDisplayConfig {
    showImage?: boolean;
    showTitle?: boolean;
    showDesc?: boolean;
    showPublishDate?: boolean;
    showCategories?: boolean;
    showAuthor?: boolean;
}
export declare enum LoadMoreType {
    BUTTON = "button",
    PAGINATION = "pagination",
    NONE = "none"
}
//# sourceMappingURL=type.d.ts.map