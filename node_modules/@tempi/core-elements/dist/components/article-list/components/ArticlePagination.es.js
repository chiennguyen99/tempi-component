import { jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { Icon } from '@tempi/icons';
import ReactPaginate from 'react-paginate';
import { getPropsIcon } from '../../../utils/getPropsIcon.es.js';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const ArticlePagination = (props) => {
  const _a = props, { paginationColor = "#7367f0", textColor = "#000000" } = _a, rest = __objRest(_a, ["paginationColor", "textColor"]);
  const getIcon = (name) => /* @__PURE__ */ jsx(Icon, __spreadValues({}, __spreadValues({
    name
  }, getPropsIcon({
    color: paginationColor
  }))));
  return /* @__PURE__ */ jsx(Wrapper, {
    $paginationColor: paginationColor,
    $textColor: textColor,
    children: /* @__PURE__ */ jsx(ReactPaginate, __spreadValues({
      breakLabel: "...",
      nextLabel: getIcon("RightOutlined"),
      pageRangeDisplayed: 1,
      previousLabel: getIcon("LeftOutlined"),
      renderOnZeroPageCount: null
    }, rest))
  });
};
const Wrapper = styled.div`
  /* Reset default list styles */
  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  /* Pagination styles */
  ul[role='navigation'] {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 1em 0;
  }

  ul[role='navigation'] li {
    margin: 0 5px;
  }

  ul[role='navigation'] a {
    display: block;
    padding: 0.25em 0.75em;
    text-decoration: none;
    color: ${(props) => props.$textColor};

    border-radius: 4px;
    cursor: pointer;
  }

  ul[role='navigation'] .selected a {
    color: ${(props) => props.$paginationColor};
    background-color: transparent;
    border: 1px solid ${(props) => props.$paginationColor};
  }

  ul[role='navigation'] .disabled a {
    pointer-events: none;
    color: #d9d9d9;
  }

  /* Arrow styles */
  ul[role='navigation'] a[aria-label='Previous page'],
  ul[role='navigation'] a[aria-label='Next page'] {
    font-weight: bold;
  }

  /* Hover effect */
  ul[role='navigation'] a:hover:not(.disabled) {
    background-color: #ddd;
  }
`;

export { ArticlePagination };
