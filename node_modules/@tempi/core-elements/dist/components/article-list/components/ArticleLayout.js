'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var coreRenderer = require('@tempi/core-renderer');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const ArticleLayout = ({ layout, children, gridConfig, listConfig }) => {
  const { device } = coreRenderer.useStore();
  const isMobile = device === "mobile";
  if (layout === "list" || isMobile) {
    return /* @__PURE__ */ jsxRuntime.jsx(ListWrapper, __spreadProps(__spreadValues({}, listConfig), {
      children
    }));
  }
  return /* @__PURE__ */ jsxRuntime.jsx(GridWrapper, __spreadProps(__spreadValues({}, gridConfig), {
    children
  }));
};
const GridWrapper = styled__default["default"].div(
  ({ column = 4, gutter = 16 }) => `
display: grid;
grid-template-columns: repeat(${column}, minmax(0,1fr));
grid-gap: ${gutter}px;
grid-auto-rows: 1fr;
grid-auto-flow: dense;
`
);
const ListWrapper = styled__default["default"].div(
  ({ gutter = 16 }) => `
display: grid;
grid-template-columns: 1fr;
grid-gap: ${gutter}px;
grid-auto-rows: 1fr;
grid-auto-flow: dense;
`
);

exports.ArticleLayout = ArticleLayout;
