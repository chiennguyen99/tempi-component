'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var icons = require('@ant-design/icons');
var coreEditor = require('@tempi/core-editor');
var ResizeQuickSetting = require('../../quick-configs/ResizeQuickSetting/ResizeQuickSetting.js');

const YoutubeSetting = () => {
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputConfig, {
        propKey: "link",
        formItemProps: {
          label: i18n.t("Li\xEAn k\u1EBFt Youtube")
        },
        inputProps: {
          placeholder: i18n.t("Nh\u1EADp URL")
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchConfig, {
        propKey: "autoplay",
        formItemProps: {
          label: i18n.t("T\u1EF1 \u0111\u1ED9ng ph\xE1t tr\xEAn m\xE1y t\xEDnh")
        }
      })
    ]
  });
};
const YoutubeQuickSetting = () => {
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
        content: YoutubeSetting,
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
          children: /* @__PURE__ */ jsxRuntime.jsx(icons.YoutubeOutlined, {})
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(ResizeQuickSetting.ResizeQuickSetting, {
        configs: { allowConfigHeight: false }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.OpenSettingDialog, {}),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DuplicateNode, {}),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DeleteNode, {})
    ]
  });
};

exports.YoutubeQuickSetting = YoutubeQuickSetting;
