'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const RowQuickSetting = () => {
  const { actions } = coreEditor.useEditor();
  const { id } = coreEditor.useNode();
  const { setShowSettingDialog, track } = coreEditor.useBuilder();
  return /* @__PURE__ */ jsxRuntime.jsxs(IndicatorDiv, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RenderQuickSetting, {
        trigger: "click",
        onOpenChange: (visible) => {
          if (visible) {
            track == null ? void 0 : track({
              regionName: "RowSetting",
              contentName: "quickSettingBtn"
            });
          }
        },
        content: /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
          children: [
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
              onClick: () => {
                actions.selectNode(id);
                setShowSettingDialog(true);
                track == null ? void 0 : track({
                  regionName: "commonSetting",
                  contentName: "advancedSettingBtn"
                });
              },
              children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.SettingsRegular, {
                style: { fontSize: 16 }
              })
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DuplicateNode, {}),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.DeleteNode, {})
          ]
        }),
        children: /* @__PURE__ */ jsxRuntime.jsx(RowQuickSettingBtn, {
          onClick: () => actions.selectNode(id),
          children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.ChevronDownRegular, {
            fontSize: 12,
            style: {
              color: "#fff",
              pointerEvents: "none"
            }
          })
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(ActiveBorder, {
        className: "active-border"
      })
    ]
  });
};
const IndicatorDiv = styled__default["default"].div`
  position: absolute !important;
  top: -10px;
  left: -10px;
  width: 100%;
  height: 100%;
`;
const RowQuickSettingBtn = styled__default["default"].div`
  position: relative;
  z-index: 1000;
  width: 18px;
  height: 18px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #879294 !important;
  cursor: pointer;
  border-radius: 50%;

  &:hover {
    & ~ .active-border {
      border-color: #879294;
    }
  }
`;
const ActiveBorder = styled__default["default"].div`
  position: absolute;
  top: 9px;
  left: 9px;
  z-index: -1;
  width: 100%;
  height: 100%;
  border: 1px dashed transparent;
  transition: 0.2s linear;
`;

exports.RowQuickSetting = RowQuickSetting;
