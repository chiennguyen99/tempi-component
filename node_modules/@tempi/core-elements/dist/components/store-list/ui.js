'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var coreRenderer = require('@tempi/core-renderer');
var React = require('react');
var hooks = require('./hooks.js');
var Store = require('./components/Store.js');
var Row = require('../../core/Grid/Row.js');
var Col = require('../../core/Grid/Col.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const StoreList = ({
  stores,
  mainColor = "#2e7ac1",
  commonStyle,
  stickyTop,
  title
}) => {
  const [cityId, setCityId] = React.useState();
  const [districtId, setDistrictId] = React.useState();
  const [filteredStores, setFilteredStores] = React.useState(stores);
  const { cities: _cities, districts: _districts } = hooks.useGetCitiesAndDistricts();
  const cities = _cities.filter(
    (city) => !!stores.find((store) => store.cityId === city.idProvince)
  );
  const districts = _districts.filter(
    (district) => district.idProvince === cityId && !!stores.find((store) => store.districtId === district.idDistrict)
  );
  const handleChangeLocation = (_cityId, _districtId) => {
    if (_cityId) {
      setCityId(_cityId);
      setDistrictId(null);
    }
    if (_districtId) {
      setDistrictId(_districtId);
    }
  };
  React.useEffect(() => {
    if (!cityId || cityId === "0") {
      setFilteredStores(stores);
    } else if (cityId && (!districtId || districtId === "0")) {
      setFilteredStores(stores.filter((store) => store.cityId === cityId));
    } else
      setFilteredStores(
        stores.filter(
          (store) => store.cityId === cityId && store.districtId === districtId
        )
      );
  }, [cityId, districtId, stores]);
  return /* @__PURE__ */ jsxRuntime.jsx(Wrapper, {
    stickyTop,
    mainColor,
    commonStyle,
    children: /* @__PURE__ */ jsxRuntime.jsxs(Row.Row, {
      gutter: [24, 16],
      children: [
        /* @__PURE__ */ jsxRuntime.jsxs(Col.Col, {
          md: 5,
          xs: 12,
          children: [
            /* @__PURE__ */ jsxRuntime.jsxs("div", {
              className: "label",
              children: [
                "H\u1EC7 th\u1ED1ng ",
                stores.length,
                " c\u1EEDa h\xE0ng"
              ]
            }),
            /* @__PURE__ */ jsxRuntime.jsxs("div", {
              className: "select-location",
              children: [
                /* @__PURE__ */ jsxRuntime.jsx("h5", {
                  children: /* @__PURE__ */ jsxRuntime.jsx("b", {
                    children: title || "Ch\u1ECDn c\u1EEDa h\xE0ng theo t\u1EC9nh/th\xE0nh ph\u1ED1"
                  })
                }),
                /* @__PURE__ */ jsxRuntime.jsxs("select", {
                  onChange: (e) => handleChangeLocation(e.target.value),
                  children: [
                    /* @__PURE__ */ jsxRuntime.jsx("option", {
                      value: 0,
                      children: "Ch\u1ECDn t\u1EC9nh/ th\xE0nh ph\u1ED1"
                    }),
                    cities.map((city) => /* @__PURE__ */ jsxRuntime.jsx("option", {
                      value: city.idProvince,
                      children: city.name
                    }, city.idProvince))
                  ]
                }),
                /* @__PURE__ */ jsxRuntime.jsxs("select", {
                  onChange: (e) => handleChangeLocation(null, e.target.value),
                  children: [
                    /* @__PURE__ */ jsxRuntime.jsx("option", {
                      value: 0,
                      children: "Ch\u1ECDn qu\u1EADn/ huy\u1EC7n"
                    }),
                    districts.sort((a, b) => a.name < b.name ? -1 : 1).map((district) => /* @__PURE__ */ jsxRuntime.jsx("option", {
                      value: district.idDistrict,
                      children: district.name
                    }, district.idDistrict))
                  ]
                })
              ]
            })
          ]
        }),
        /* @__PURE__ */ jsxRuntime.jsxs(Col.Col, {
          md: 7,
          xs: 12,
          children: [
            /* @__PURE__ */ jsxRuntime.jsxs("div", {
              className: "label",
              children: [
                filteredStores.length,
                " k\u1EBFt qu\u1EA3"
              ]
            }),
            /* @__PURE__ */ jsxRuntime.jsx("div", {
              className: "store-list",
              children: filteredStores.length > 0 ? filteredStores.map((store, i) => /* @__PURE__ */ jsxRuntime.jsx(Store.Store, {
                store,
                mainColor
              }, i)) : /* @__PURE__ */ jsxRuntime.jsx(Empty, {
                mainColor,
                children: "Kh\xF4ng c\xF3 c\u1EEDa h\xE0ng"
              })
            })
          ]
        })
      ]
    })
  });
};
StoreList.displayName = "StoreList";
const Empty = styled__default["default"].div(
  ({ mainColor }) => `
  font-size: 1.8em;
  text-align: center;
  padding: 2em;
  color: ${mainColor};
  opacity: 0.85;

`
);
const Wrapper = styled__default["default"].div(
  ({ mainColor, commonStyle, stickyTop }) => `   
  ${coreRenderer.getStyle(commonStyle)}

  .label{
    font-size: 1em;
    margin-bottom: 0.5em;
  }

  .select-location{    
    padding: 0.8em 1.5em;
    background-color: ${mainColor};
    border-radius: 3px;
    font-size: 1.1em;
    position: sticky;
    top: ${stickyTop}px;
    
    h5 {
      color: white;
      margin-top: 0.5em;
      margin-bottom: 1em;
    }
  
    select{
      width: 100%;
      margin-bottom: 1em;
      border-radius: 4px;
      -webkit-appearance: none;
      padding: 0.5em 3.5em 0.5em 1em;

      background-color: white;
      background-image: linear-gradient(45deg, transparent 50%, gray 50%), linear-gradient(135deg, gray 50%, transparent 50%), linear-gradient(to right, #ccc, #ccc);
      background-position: calc(100% - 20px) calc(1em + 2px), calc(100% - 15px) calc(1em + 2px), calc(100% - 2.5em) 0.5em;
      background-size: 5px 5px, 5px 5px, 1px 1.5em;
      background-repeat: no-repeat;      
    }
  }
  
  .store-list{
    border: 1px solid ${mainColor};
    border-radius: 5px;
    overflow: hidden;
    background-color: white;
  }
`
);

exports.StoreList = StoreList;
