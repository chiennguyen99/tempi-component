import { jsxs, jsx } from 'react/jsx-runtime';
import { t } from '../../../i18n.es.js';
import { useSortable } from '@dnd-kit/sortable';
import { CSS } from '@dnd-kit/utilities';
import styled from '@emotion/styled';
import { CopyRegular, DeleteRegular, ReOrderDotsVerticalRegular } from '@fluentui/react-icons';
import { useProp, FormItem, InputConfig, nomalizeText } from '@tempi/core-editor';
import { Cascader } from 'antd';
import { useGetCitiesAndDistricts } from '../hooks.es.js';
import { PROP_KEY } from '../../../constants/propKey.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const StoreDataConfig = ({ index, store, activeField, setActiveField, onDuplicate, onRemove }) => {
  const { setNodeRef, attributes, listeners, transform } = useSortable({
    id: store.dndId
  });
  const [province, setProvince] = useProp(
    PROP_KEY.joinKey(PROP_KEY.Stores, index.toString(), PROP_KEY.CityId)
  );
  const [district, setDistrict] = useProp(
    PROP_KEY.joinKey(PROP_KEY.Stores, index.toString(), PROP_KEY.DistrictId)
  );
  const { cities, districts } = useGetCitiesAndDistricts();
  const getOptions = () => {
    const options = [];
    cities.forEach((city) => {
      const localDistrict = districts.filter(
        (d) => d.idProvince === city.idProvince
      );
      options.push({
        label: city.name,
        value: city.idProvince,
        children: localDistrict.map((local) => ({
          label: local.name,
          value: local.idDistrict
        }))
      });
    });
    return options;
  };
  const filter = (inputValue, path) => path.some(
    (option) => nomalizeText(option.label).toLowerCase().indexOf(nomalizeText(inputValue.toLowerCase())) > -1
  );
  const onChangeLocation = (value) => {
    const [firstLevel, secondLevel] = value || [];
    setProvince(firstLevel);
    setDistrict(secondLevel);
  };
  return /* @__PURE__ */ jsxs(StyledTagField, {
    ref: setNodeRef,
    style: { transform: CSS.Transform.toString(transform) },
    children: [
      /* @__PURE__ */ jsxs(StyledTagHeader, {
        onClick: () => {
          if (activeField === index)
            setActiveField(void 0);
          else
            setActiveField(index);
        },
        children: [
          /* @__PURE__ */ jsxs("div", {
            className: "flex",
            children: [
              /* @__PURE__ */ jsx(StyledAction, __spreadProps(__spreadValues(__spreadValues({}, listeners), attributes), {
                style: { cursor: "move", marginRight: 8 },
                children: /* @__PURE__ */ jsx(ReOrderDotsVerticalRegular, {
                  style: {
                    fontSize: 20
                  }
                })
              })),
              /* @__PURE__ */ jsx("div", {
                children: store.name
              })
            ]
          }),
          /* @__PURE__ */ jsxs("div", {
            className: "flex",
            children: [
              /* @__PURE__ */ jsx(StyledAction, {
                style: { marginRight: 8 },
                onClick: (e) => {
                  e.stopPropagation();
                  onDuplicate();
                },
                children: /* @__PURE__ */ jsx(CopyRegular, {
                  style: {
                    fontSize: 16
                  }
                })
              }),
              /* @__PURE__ */ jsx(StyledAction, {
                onClick: (e) => {
                  e.stopPropagation();
                  onRemove();
                },
                children: /* @__PURE__ */ jsx(DeleteRegular, {
                  style: {
                    fontSize: 16
                  }
                })
              })
            ]
          })
        ]
      }),
      activeField === index && /* @__PURE__ */ jsxs(StyledTagContent, {
        children: [
          /* @__PURE__ */ jsx(FormItem, {
            label: t("V\u1ECB tr\xED"),
            children: /* @__PURE__ */ jsx(Cascader, {
              options: getOptions(),
              onChange: onChangeLocation,
              placeholder: t("Ch\u1ECDn \u0111\u1ECBa \u0111i\u1EC3m"),
              showSearch: { filter },
              getPopupContainer: (trigger) => trigger,
              style: { width: 140 },
              value: [province, district],
              allowClear: false
            })
          }),
          /* @__PURE__ */ jsx(InputConfig, {
            formItemProps: {
              label: t("T\xEAn")
            },
            propKey: PROP_KEY.joinKey(
              PROP_KEY.Stores,
              index.toString(),
              PROP_KEY.Name
            )
          }),
          /* @__PURE__ */ jsx(InputConfig, {
            formItemProps: {
              label: t("\u0110\u1ECBa ch\u1EC9")
            },
            propKey: PROP_KEY.joinKey(
              PROP_KEY.Stores,
              index.toString(),
              PROP_KEY.Address
            )
          }),
          /* @__PURE__ */ jsx(InputConfig, {
            formItemProps: {
              label: t("S\u1ED1 \u0111i\u1EC7n tho\u1EA1i")
            },
            propKey: PROP_KEY.joinKey(
              PROP_KEY.Stores,
              index.toString(),
              PROP_KEY.Phone
            )
          }),
          /* @__PURE__ */ jsx(InputConfig, {
            formItemProps: {
              label: t("Gi\u1EDD l\xE0m vi\u1EC7c")
            },
            propKey: PROP_KEY.joinKey(
              PROP_KEY.Stores,
              index.toString(),
              PROP_KEY.WorkHours
            )
          }),
          /* @__PURE__ */ jsx(InputConfig, {
            formItemProps: {
              label: t("B\u1EA3n \u0111\u1ED3")
            },
            propKey: PROP_KEY.joinKey(
              PROP_KEY.Stores,
              index.toString(),
              PROP_KEY.Map
            )
          })
        ]
      })
    ]
  }, index);
};
const StyledTagField = styled.div`
  justify-content: space-between;
  padding: 0.5rem;
  border-radius: 4px;
  border: 1px solid var(--border-color);
  margin-bottom: 8px;
`;
const StyledTagHeader = styled.div`
  display: flex;
  flex-grow: 1;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
`;
const StyledTagContent = styled.div`
  padding: 0.5rem;
`;
const StyledAction = styled.div`
  background-color: transparent;
  cursor: pointer;
`;

export { StoreDataConfig };
