import { jsx } from 'react/jsx-runtime';
import { withSelector, AdvanceAttributes, getEditorName } from '@tempi/core-editor';
import { TestimonialV2QuickSetting } from './TestimonialV2QuickSetting.es.js';
import { TestimonialV2Setting } from './TestimonialV2Setting.es.js';
import { TestimonialV2 } from '../../ui/TestimonialV2/TestimonialV2.es.js';
import { RowEditor } from '../../../../section/selector.es.js';
import { RootEditor } from '../../../../root/selector.es.js';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const TestimonialV2Editor = withSelector(
  (props) => {
    return /* @__PURE__ */ jsx(TestimonialV2, __spreadValues({
      allowTouchMove: false
    }, props));
  },
  {
    displayName: "C\u1EA3m nh\u1EADn kh\xE1ch h\xE0ng",
    tag: TestimonialV2.displayName.toLowerCase(),
    advanceAttributes: AdvanceAttributes,
    quickSetting: TestimonialV2QuickSetting,
    customAttributes: TestimonialV2Setting,
    rules: {
      canDrop: (targetNode) => {
        const ignoreTargets = [
          getEditorName({ RowEditor }),
          getEditorName({ RootEditor })
        ];
        return !ignoreTargets.includes(targetNode.data.name);
      }
    }
  }
);

export { TestimonialV2Editor };
