'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var coreRenderer = require('@tempi/core-renderer');
var antd = require('antd');
var React = require('react');
var propKey = require('../../../constants/propKey.js');
var TextConfig = require('../../../configs/TextConfig/TextConfig.js');

const { Panel } = antd.Collapse;
const FormStyleSetting = ({
  isSubscriptionForm = false
}) => {
  const [, setAlignItems] = coreEditor.useProp(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.FormStyle, propKey.PROP_KEY.AlignItems)
  );
  const [flexDirection] = coreEditor.useProp(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.FormStyle, propKey.PROP_KEY.FlexDirection)
  );
  const [, setJustifyContent] = coreEditor.useProp(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.FormStyle, propKey.PROP_KEY.JustifyContent)
  );
  const flexDirectionOptions = [
    {
      label: i18n.t("common.horizontal"),
      value: "row"
    },
    {
      label: i18n.t("common.vertical"),
      value: "column"
    }
  ];
  React.useEffect(() => {
    if (flexDirection === "column") {
      setJustifyContent(void 0);
    }
    if (flexDirection === "row") {
      !isSubscriptionForm && setAlignItems(void 0);
    }
  }, [flexDirection]);
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: /* @__PURE__ */ jsxRuntime.jsxs(antd.Collapse, {
      expandIconPosition: "end",
      bordered: false,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(antd.Collapse.Panel, {
          header: i18n.t("M\xE0u n\u1EC1n"),
          children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
            propKey: propKey.PROP_KEY.joinKey(
              propKey.PROP_KEY.FormStyle,
              propKey.PROP_KEY.BackgroundColor
            ),
            formItemProps: {
              label: i18n.t("M\xE0u n\u1EC1n")
            },
            gradientPicker: true
          })
        }, "BACKGROUND_COLOR"),
        /* @__PURE__ */ jsxRuntime.jsx(antd.Collapse.Panel, {
          header: i18n.t("\u1EA2nh n\u1EC1n"),
          children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.BackgroundImageConfig, {
            propKey: propKey.PROP_KEY.FormStyle
          })
        }, "BACKGROUND_IMAGE"),
        /* @__PURE__ */ jsxRuntime.jsxs(Panel, {
          header: "Form",
          children: [
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
              formItemProps: {
                label: i18n.t("Ki\u1EC3u hi\u1EC3n th\u1ECB")
              },
              options: flexDirectionOptions,
              propKey: propKey.PROP_KEY.joinKey(
                propKey.PROP_KEY.FormStyle,
                propKey.PROP_KEY.FlexDirection
              )
            }),
            flexDirection === "column" && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
              propKey: propKey.PROP_KEY.joinKey(
                propKey.PROP_KEY.FormStyle,
                propKey.PROP_KEY.AlignItems
              ),
              buttonGroupProps: {
                listAlignment: ["flex-start", "center", "flex-end"]
              },
              formItemProps: {
                label: i18n.t("C\u0103n ch\u1EC9nh")
              }
            }),
            flexDirection === "row" && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
              propKey: propKey.PROP_KEY.joinKey(
                propKey.PROP_KEY.FormStyle,
                propKey.PROP_KEY.JustifyContent
              ),
              buttonGroupProps: {
                listAlignment: ["flex-start", "center", "flex-end"]
              },
              formItemProps: {
                label: i18n.t("C\u0103n ch\u1EC9nh")
              }
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
              formItemProps: {
                label: i18n.t("Kho\u1EA3ng c\xE1ch h\xE0ng")
              },
              unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
              propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.FormStyle, propKey.PROP_KEY.RowGap)
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
              propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.LabelStyle, propKey.PROP_KEY.Color),
              formItemProps: {
                label: i18n.t("M\xE0u nh\xE3n")
              }
            }),
            /* @__PURE__ */ jsxRuntime.jsx(TextConfig.TextConfig, {
              propKey: propKey.PROP_KEY.LabelStyle,
              title: i18n.t("Ch\u1EEF nh\xE3n"),
              config: { fontSize: true }
            })
          ]
        }, "FORM"),
        /* @__PURE__ */ jsxRuntime.jsxs(Panel, {
          header: "Field",
          children: [
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
              propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.InputStyle, propKey.PROP_KEY.Color),
              formItemProps: {
                label: i18n.t("M\xE0u ch\u1EEF input")
              }
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
              propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.OptionStyle, propKey.PROP_KEY.Color),
              formItemProps: {
                label: i18n.t("M\xE0u l\u1EF1a ch\u1ECDn")
              }
            }),
            /* @__PURE__ */ jsxRuntime.jsx(TextConfig.TextConfig, {
              propKey: propKey.PROP_KEY.InputStyle,
              title: i18n.t("Ch\u1EEF input"),
              config: { fontSize: true }
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
              propKey: propKey.PROP_KEY.joinKey(
                propKey.PROP_KEY.InputStyle,
                propKey.PROP_KEY.BorderColor
              ),
              formItemProps: {
                label: i18n.t("M\xE0u vi\u1EC1n")
              }
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
              formItemProps: {
                label: i18n.t("K\xEDch th\u01B0\u1EDBc vi\u1EC1n")
              },
              unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
              propKey: propKey.PROP_KEY.joinKey(
                propKey.PROP_KEY.InputStyle,
                propKey.PROP_KEY.BorderWidth
              )
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
              formItemProps: {
                label: i18n.t("Bo g\xF3c")
              },
              unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
              propKey: propKey.PROP_KEY.joinKey(
                propKey.PROP_KEY.InputStyle,
                propKey.PROP_KEY.BorderRadius
              )
            }),
            /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
              propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.ErrorStyle, propKey.PROP_KEY.Color),
              formItemProps: {
                label: i18n.t("M\xE0u th\xF4ng b\xE1o l\u1ED7i")
              }
            })
          ]
        }, "FIELD")
      ]
    })
  });
};

exports.FormStyleSetting = FormStyleSetting;
