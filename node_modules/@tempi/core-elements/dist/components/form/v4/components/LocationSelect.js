'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var styled = require('@emotion/styled');
var icons = require('@tempi/icons');
var coreRenderer = require('@tempi/core-renderer');
var React = require('react');
var Cascader = require('../../../../core/Cascader/Cascader.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const LocationSelect = (props) => {
  const _a = props, {
    commonStyle,
    inputStyle,
    setValue,
    register,
    name,
    trigger,
    wrapperRef
  } = _a, rest = __objRest(_a, [
    "commonStyle",
    "inputStyle",
    "setValue",
    "register",
    "name",
    "trigger",
    "wrapperRef"
  ]);
  const [options, setOptions] = React.useState([]);
  const { device } = coreRenderer.useStore();
  const [currentProvince, setCurrentProvince] = React.useState();
  const [currentDistrict, setCurrentDistrict] = React.useState();
  const [currentWard, setCurrentWard] = React.useState();
  const [location, setLocation] = React.useState();
  const onChange = (_value, selectedOptions) => {
    setLocation(
      selectedOptions.reverse().map((o) => o.label).join(", ")
    );
  };
  const renderDesktop = () => /* @__PURE__ */ jsxRuntime.jsx(Cascader, {
    options,
    onChange,
    expandIcon: /* @__PURE__ */ jsxRuntime.jsx(icons.Icon, {
      name: "ForwardOutlined"
    }),
    getPopupContainer: () => wrapperRef.current,
    children: /* @__PURE__ */ jsxRuntime.jsx(StyledInput, __spreadProps(__spreadValues({
      inputStyle,
      value: location
    }, register ? register(name, __spreadValues({}, rest)) : __spreadValues({ name }, rest)), {
      autoComplete: "off",
      readOnly: true
    }))
  });
  const renderMobile = () => {
    var _a2, _b;
    return /* @__PURE__ */ jsxRuntime.jsxs("div", {
      children: [
        /* @__PURE__ */ jsxRuntime.jsx("input", __spreadProps(__spreadValues({}, register ? register(name, { required: rest.required }) : {}), {
          style: { display: "none" }
        })),
        /* @__PURE__ */ jsxRuntime.jsxs(StyledSelect, {
          inputStyle,
          placeholder: i18n.t("Ch\u1ECDn t\u1EC9nh/ th\xE0nh"),
          onChange: (e) => {
            setCurrentProvince(
              options.find((option) => option.value == e.target.value)
            );
            setCurrentDistrict(null);
            setCurrentWard(null);
          },
          children: [
            /* @__PURE__ */ jsxRuntime.jsx("option", {
              children: i18n.t("Ch\u1ECDn t\u1EC9nh/ th\xE0nh ph\u1ED1")
            }),
            options.map((option) => /* @__PURE__ */ jsxRuntime.jsx("option", {
              value: option.value,
              children: option.label
            }, option.value))
          ]
        }),
        /* @__PURE__ */ jsxRuntime.jsxs(StyledSelect, {
          inputStyle,
          onChange: (e) => {
            setCurrentDistrict(
              currentProvince.children.find(
                (option) => option.value == e.target.value
              )
            );
            setCurrentWard(null);
          },
          children: [
            /* @__PURE__ */ jsxRuntime.jsx("option", {
              children: i18n.t("Ch\u1ECDn qu\u1EADn/ huy\u1EC7n")
            }),
            (_a2 = currentProvince == null ? void 0 : currentProvince.children) == null ? void 0 : _a2.map((option) => /* @__PURE__ */ jsxRuntime.jsx("option", {
              value: option.value,
              children: option.label
            }, option.value))
          ]
        }),
        /* @__PURE__ */ jsxRuntime.jsxs(StyledSelect, {
          inputStyle,
          placeholder: i18n.t("Ch\u1ECDn x\xE3/ ph\u01B0\u1EDDng"),
          onChange: (e) => setCurrentWard(
            currentDistrict.children.find(
              (option) => option.value == e.target.value
            )
          ),
          children: [
            /* @__PURE__ */ jsxRuntime.jsx("option", {
              children: i18n.t("Ch\u1ECDn x\xE3/ ph\u01B0\u1EDDng")
            }),
            (_b = currentDistrict == null ? void 0 : currentDistrict.children) == null ? void 0 : _b.map((option) => /* @__PURE__ */ jsxRuntime.jsx("option", {
              value: option.value,
              children: option.label
            }, option.value))
          ]
        })
      ]
    });
  };
  React.useEffect(() => {
    if (currentProvince && currentDistrict && currentWard) {
      const newLocation = [currentWard, currentDistrict, currentProvince].map((o) => o.label).join(", ");
      setValue(name, newLocation);
      setLocation(newLocation);
      trigger(name);
    } else {
      setValue(name, null);
    }
  }, [currentProvince, currentDistrict, currentWard]);
  React.useEffect(() => {
    const scriptTag = document.createElement("script");
    scriptTag.src = "https://landingbuilder-cdn.tekoapis.com/location/1.0.1/location.vi.min.js";
    scriptTag.addEventListener("load", () => {
      setOptions(window.TempiLocation["VN"]);
    });
    document.body.appendChild(scriptTag);
  }, []);
  return /* @__PURE__ */ jsxRuntime.jsx(Wrapper, {
    commonStyle,
    children: device === "mobile" ? renderMobile() : renderDesktop()
  });
};
const Wrapper = styled__default["default"].div(
  ({ commonStyle }) => `
    width:100%;
    ${coreRenderer.getStyle(commonStyle)}
    height: unset!important;
  `
);
const StyledInput = styled__default["default"].input(
  ({ inputStyle }) => `
    position: relative;
    display: inline-block;
    width: 100%;
    min-width: 100%;
    height: 32px;
    color: rgba(0, 0, 0, 0.85);
    padding: 0 0.5rem;
    &:focus,
    &-focused {
      outline: 0;
    }
    &::-moz-placeholder {
      opacity: 1;
    }

    &::placeholder {
      color: #999;
    }

    &:placeholder-shown {
      text-overflow: ellipsis;
    }
    border-style: solid;
    border-color: rgb(238, 238, 238);
    border-width: 1px;
  ${coreRenderer.getStyle(inputStyle)}
`
);
const StyledSelect = styled__default["default"].select(
  ({ inputStyle }) => `
    position: relative;
    display: inline-block;
    width: 100%;
    min-width: 100%;
    color: rgba(0, 0, 0, 0.85);
    height: 32px;
    padding: 0 0.5rem;
    &:focus,
    &-focused {
      outline: 0;
    }
    &::-moz-placeholder {
      opacity: 1;
    }

    &::placeholder {
      color: #999;
    }

    &:placeholder-shown {
      text-overflow: ellipsis;
    }
    border-style: solid;
    border-color: rgb(238, 238, 238);
    border-width: 1px;
    margin-bottom: 8px;
  ${coreRenderer.getStyle(inputStyle)}
`
);

exports.LocationSelect = LocationSelect;
