import { jsxs, jsx } from 'react/jsx-runtime';
import { t } from '../../../../i18n.es.js';
import { useProp, FormItem } from '@tempi/core-editor';
import { Space, Typography, Divider, Switch } from 'antd';
import { ResponseCustomConfig } from './ResponseCustomConfig.es.js';
import { SelectResponseType } from './SelectResponseType.es.js';
import { PROP_KEY } from '../../../../constants/propKey.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const ResponseConfig = ({
  allowConfigResponseByCode
}) => {
  const [response = {}, setResponse] = useProp(PROP_KEY.Response);
  const disableDefaultRes = () => (response == null ? void 0 : response.responseType) === "custom";
  return /* @__PURE__ */ jsxs(Space, {
    direction: "vertical",
    children: [
      /* @__PURE__ */ jsx(Typography.Text, {
        children: t(
          "C\u1EA5u h\xECnh trang c\u1EA3m \u01A1n ho\u1EB7c popup c\u1EA3m \u01A1n sau khi kh\xE1ch h\xE0ng g\u1EEDi d\u1EEF li\u1EC7u"
        )
      }),
      /* @__PURE__ */ jsx(FormItem, {
        layout: "vertical",
        label: t("G\u1EEDi d\u1EEF li\u1EC7u th\xE0nh c\xF4ng"),
        children: /* @__PURE__ */ jsx(SelectResponseType, {
          value: {
            defaultResponseType: !!response.success ? "popupResponse" : !!response.successPage ? "pageResponse" : null,
            popupId: response.success,
            urlPage: response.successPage
          },
          onChange: (value) => setResponse(__spreadProps(__spreadValues({}, response), {
            success: value == null ? void 0 : value.popupId,
            successPage: value == null ? void 0 : value.urlPage,
            responseType: "default"
          })),
          disabled: disableDefaultRes(),
          type: "success"
        })
      }),
      /* @__PURE__ */ jsx(FormItem, {
        layout: "vertical",
        label: t("G\u1EEDi d\u1EEF li\u1EC7u th\u1EA5t b\u1EA1i"),
        children: /* @__PURE__ */ jsx(SelectResponseType, {
          value: {
            defaultResponseType: !!response.failed ? "popupResponse" : !!response.faildedPage ? "pageResponse" : null,
            popupId: response.failed,
            urlPage: response.faildedPage
          },
          onChange: (value) => setResponse(__spreadProps(__spreadValues({}, response), {
            failed: value == null ? void 0 : value.popupId,
            faildedPage: value == null ? void 0 : value.urlPage,
            responseType: "default"
          })),
          disabled: disableDefaultRes(),
          type: "fail"
        })
      }),
      /* @__PURE__ */ jsx(Divider, {
        style: {
          margin: "6px 0"
        }
      }),
      allowConfigResponseByCode && /* @__PURE__ */ jsx(FormItem, {
        layout: "horizontal",
        label: t("N\xE2ng cao: T\u1EF1 c\u1EA5u h\xECnh ph\u1EA3n h\u1ED3i d\u1EF1a theo response code"),
        children: /* @__PURE__ */ jsx(Switch, {
          checked: disableDefaultRes(),
          onChange: (val) => {
            setResponse(__spreadProps(__spreadValues({}, response), {
              responseType: !val ? "default" : "custom"
            }));
          }
        })
      }),
      disableDefaultRes() && /* @__PURE__ */ jsx(FormItem, {
        children: /* @__PURE__ */ jsx(ResponseCustomConfig, {})
      })
    ]
  });
};

export { ResponseConfig };
