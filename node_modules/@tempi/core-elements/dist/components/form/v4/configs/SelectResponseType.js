'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var styled = require('@emotion/styled');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var uuid = require('uuid');
var constants = require('../constants.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const defaultResponseTypeSuccessOpt = [
  {
    label: "form_config.response.popup_success",
    value: "popupResponse"
  },
  {
    label: "form_config.response.page_success",
    value: "pageResponse"
  }
];
const defaultResponseTypeFailOpt = [
  {
    label: "form_config.response.popup_failed",
    value: "popupResponse"
  },
  {
    label: "form_config.response.page_failed",
    value: "pageResponse"
  }
];
const SelectResponseType = ({
  value,
  onChange,
  type = "success",
  disabled = false
}) => {
  const [response, setResponse] = React.useState(value);
  const { actions, addBlock, nodes } = coreEditor.useEditor((state) => ({
    nodes: state.nodes
  }));
  const { id: currentNodeId, childNodes } = coreEditor.useNode((node) => {
    return {
      childNodes: node.data.nodes
    };
  });
  const onChangeResponseType = async (defaultResponseType) => {
    if (defaultResponseType === "popupResponse") {
      const node = coreEditor.deserializePB(
        constants.DEFAULT_POPUP_SUCCESS(`popup_${type}_${uuid.v4()}`)
      );
      const newNode = await addBlock(
        node,
        childNodes.length,
        currentNodeId
      );
      onChangeResponse({
        defaultResponseType,
        popupId: newNode.rootNodeId,
        urlPage: ""
      });
    } else {
      if (response == null ? void 0 : response.popupId)
        actions.delete(response.popupId);
      onChangeResponse(__spreadProps(__spreadValues({}, response), {
        defaultResponseType,
        popupId: ""
      }));
    }
  };
  const showPopup = React.useMemo(() => {
    return (response == null ? void 0 : response.popupId) && (nodes == null ? void 0 : nodes[response.popupId]);
  }, [response == null ? void 0 : response.popupId, nodes]);
  React.useEffect(() => {
    if ((response == null ? void 0 : response.popupId) && !(nodes == null ? void 0 : nodes[response.popupId])) {
      onChangeResponse(__spreadProps(__spreadValues({}, response), {
        popupId: void 0
      }));
    }
  }, [response == null ? void 0 : response.popupId, nodes]);
  const onChangeResponse = (value2) => {
    onChange(value2);
    setResponse(value2);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(antd.Select, {
        placeholder: i18n.t("Ch\u1ECDn ki\u1EC3u ph\u1EA3n h\u1ED3i"),
        value: response == null ? void 0 : response.defaultResponseType,
        onChange: onChangeResponseType,
        allowClear: true,
        options: type === "success" ? i18n.getOptionsI18n(i18n.t, defaultResponseTypeSuccessOpt, "label") : i18n.getOptionsI18n(i18n.t, defaultResponseTypeFailOpt, "label"),
        disabled,
        dropdownStyle: { zIndex: 1080 },
        style: { width: "100%" }
      }),
      /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          showPopup && /* @__PURE__ */ jsxRuntime.jsxs(antd.Row, {
            align: "middle",
            justify: "space-between",
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(StyledLabel, {
                children: type === "success" ? i18n.t("Popup th\xE0nh c\xF4ng") : i18n.t("Popup th\u1EA5t b\u1EA1i")
              }),
              /* @__PURE__ */ jsxRuntime.jsx(StyledButton, {
                type: "link",
                onClick: () => actions.selectNode(response == null ? void 0 : response.popupId),
                disabled,
                children: type === "success" ? i18n.t("S\u1EEDa popup th\xE0nh c\xF4ng") : i18n.t("S\u1EEDa popup th\u1EA5t b\u1EA1i")
              })
            ]
          }),
          (response == null ? void 0 : response.defaultResponseType) === "pageResponse" && /* @__PURE__ */ jsxRuntime.jsxs("div", {
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(StyledLabel, {
                children: type === "success" ? i18n.t("URL trang c\u1EA3m \u01A1n") : i18n.t("URL trang th\u1EA5t b\u1EA1i")
              }),
              /* @__PURE__ */ jsxRuntime.jsx(antd.Input, {
                disabled,
                placeholder: i18n.t("Nh\u1EADp url trang"),
                value: response == null ? void 0 : response.urlPage,
                onChange: (e) => onChangeResponse(__spreadProps(__spreadValues({}, response), { urlPage: e.target.value }))
              })
            ]
          })
        ]
      })
    ]
  });
};
const StyledLabel = styled__default["default"].div`
  padding: 8px 0 8px 0;
  line-height: 1.5715;
  white-space: normal;
  text-align: left;
`;
const StyledButton = styled__default["default"](antd.Button)`
  padding-right: 0;
`;

exports.SelectResponseType = SelectResponseType;
