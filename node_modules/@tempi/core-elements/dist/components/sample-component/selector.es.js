import { withSelector, AdvanceAttributes, getEditorName } from '@tempi/core-editor';
import { DEFAULT_SAMPLE_COMPONENT } from './constants.es.js';
import { QuickSetting } from './quick-setting.es.js';
import { SampleComponentSetting } from './setting.es.js';
import { SampleComponent } from './ui.es.js';
import { RowEditor } from '../section/selector.es.js';
import { RootEditor } from '../root/selector.es.js';

var _a, _b;
const SampleComponentEditor = withSelector(SampleComponent, {
  displayName: "Tempi Sample",
  tag: ((_b = (_a = SampleComponent) == null ? void 0 : _a.displayName) == null ? void 0 : _b.toLowerCase()) || "Tempi Sample",
  quickSetting: QuickSetting,
  customAttributes: SampleComponentSetting,
  advanceAttributes: AdvanceAttributes,
  props: DEFAULT_SAMPLE_COMPONENT,
  rules: {
    canDrop: (targetNode) => {
      const ignoreTargets = [
        getEditorName({ RowEditor }),
        getEditorName({ RootEditor })
      ];
      return !ignoreTargets.includes(targetNode.data.name);
    }
  }
});

export { SampleComponentEditor, SampleComponentEditor as default };
