import { useState, useRef, useEffect } from 'react';

const useFirstVisible = (element) => {
  const [isVisible, setState] = useState(false);
  const counter = useRef(0);
  useEffect(() => {
    if ((element == null ? void 0 : element.current) && !counter.current) {
      const observer = new IntersectionObserver(([entry]) => {
        if (entry.isIntersecting && !counter.current) {
          setState(entry.isIntersecting);
          observer.unobserve(element.current);
          counter.current++;
        }
      });
      observer.observe(element.current);
      return () => {
        if (element == null ? void 0 : element.current) {
          observer.unobserve(element.current);
        }
      };
    }
  }, [element]);
  return isVisible;
};

export { useFirstVisible };
