'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var icons = require('@ant-design/icons');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var constants = require('./constants.js');
var SocialItemSetting = require('./SocialItemSetting.js');

const DataSetting = () => {
  const [icons$1, setIcons] = coreEditor.useProp("icons");
  const [currentExpandIndex, setCurrentExpandIndex] = React.useState(0);
  const onRemove = (index) => {
    const newIcons = icons$1.filter((_, _index) => _index !== index);
    setIcons(newIcons);
  };
  const onAddIcon = () => {
    setIcons([...icons$1, constants.DEFAULT_ICON]);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      icons$1.map((e, index) => {
        return /* @__PURE__ */ jsxRuntime.jsx(SocialItemSetting.SocialItemSetting, {
          index,
          icon: e,
          onRemove,
          currentExpandIndex,
          setExpandIndex: setCurrentExpandIndex
        }, index);
      }),
      /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
        style: {
          marginTop: 8,
          marginBottom: 8
        },
        type: "primary",
        block: true,
        icon: /* @__PURE__ */ jsxRuntime.jsx(icons.PlusOutlined, {}),
        onClick: onAddIcon,
        children: i18n.t("Th\xEAm icon")
      })
    ]
  });
};

exports.DataSetting = DataSetting;
