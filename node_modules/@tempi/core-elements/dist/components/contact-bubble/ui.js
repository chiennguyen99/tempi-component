'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var coreRenderer = require('@tempi/core-renderer');
var type = require('./type.js');
var Bubbles = require('./components/Bubbles.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const ContactBubble = (props) => {
  const { device } = coreRenderer.useStore();
  const { enable, isEditorMode } = props;
  if (!enable)
    return null;
  const {
    items = [],
    layout = type.ContactBubbleLayout.VERTICAL,
    position = type.ContactBubblePosition.BOTTOM_RIGHT,
    gap
  } = (device === "desktop" ? props == null ? void 0 : props.desktop : props == null ? void 0 : props.mobile) || {};
  return /* @__PURE__ */ jsxRuntime.jsx(Wrapper, {
    position,
    gap,
    children: /* @__PURE__ */ jsxRuntime.jsx(Bubbles.Bubbles, {
      items,
      layout,
      position,
      isEditorMode
    })
  });
};
ContactBubble.displayName = "ContactBubble";
const getStyleByPosition = (position, gap) => {
  switch (position) {
    case type.ContactBubblePosition.BOTTOM_RIGHT:
      return `
bottom: ${(gap == null ? void 0 : gap.vertical) || 0}px;
right: ${(gap == null ? void 0 : gap.horizontal) || 0}px;
`;
    case type.ContactBubblePosition.BOTTOM_LEFT:
      return `
bottom: ${(gap == null ? void 0 : gap.vertical) || 0}px;
left: ${(gap == null ? void 0 : gap.horizontal) || 0}px;
`;
    case type.ContactBubblePosition.CENTER_LEFT:
      return `
top: 50%;
left: ${(gap == null ? void 0 : gap.horizontal) || 0}px;
transform: translateY(-50%);
`;
    case type.ContactBubblePosition.CENTER_RIGHT:
      return `
top: 50%;
right: ${(gap == null ? void 0 : gap.horizontal) || 0}px;
transform: translateY(-50%);
`;
    default:
      return "";
  }
};
const Wrapper = styled__default["default"].div(
  ({ position, gap }) => `
position: fixed;
z-index: 9999;
${getStyleByPosition(position, gap)}
`
);

exports.ContactBubble = ContactBubble;
