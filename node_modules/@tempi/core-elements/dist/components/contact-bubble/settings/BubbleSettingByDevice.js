'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var BubbleItemSetting = require('./BubbleItemSetting.js');
var type = require('../type.js');
var styled = require('@emotion/styled');
var propKey = require('../../../constants/propKey.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const BubbleSettingByDevice = ({ device }) => {
  const { relatedNodeId } = coreEditor.useBuilder();
  const [position] = coreEditor.useProp(propKey.PROP_KEY.joinKey(device, propKey.PROP_KEY.Position));
  const renderGapConfig = () => {
    let horizontalLabel = "";
    let verticalLabel = "";
    switch (position) {
      case type.ContactBubblePosition.BOTTOM_RIGHT:
        horizontalLabel = i18n.t("C\xE1ch l\u1EC1 ph\u1EA3i");
        verticalLabel = i18n.t("C\xE1ch l\u1EC1 d\u01B0\u1EDBi");
        break;
      case type.ContactBubblePosition.BOTTOM_LEFT:
        horizontalLabel = i18n.t("C\xE1ch l\u1EC1 tr\xE1i");
        verticalLabel = i18n.t("C\xE1ch l\u1EC1 d\u01B0\u1EDBi");
        break;
      case type.ContactBubblePosition.CENTER_LEFT:
        horizontalLabel = i18n.t("C\xE1ch l\u1EC1 tr\xE1i");
        break;
      case type.ContactBubblePosition.CENTER_RIGHT:
        horizontalLabel = i18n.t("C\xE1ch l\u1EC1 ph\u1EA3i");
        break;
    }
    return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        horizontalLabel && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
          formItemProps: {
            label: horizontalLabel
          },
          sliderProps: {
            min: 0,
            max: 200
          },
          propKey: propKey.PROP_KEY.joinKey(
            device,
            propKey.PROP_KEY.Gap,
            propKey.PROP_KEY.Horizontal
          ),
          unitProps: {
            defaultValue: "px"
          }
        }),
        verticalLabel && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
          formItemProps: {
            label: verticalLabel
          },
          sliderProps: {
            min: 0,
            max: 200
          },
          propKey: propKey.PROP_KEY.joinKey(device, propKey.PROP_KEY.Gap, propKey.PROP_KEY.Vertical),
          unitProps: {
            defaultValue: "px"
          }
        })
      ]
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(PanelLabel, {
        children: i18n.t("C\xE0i \u0111\u1EB7t chung")
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
        options: [
          { label: i18n.t("Nh\u1EA5p nh\xE1y"), value: type.ContactBubbleLayout.FLASH },
          { label: i18n.t("H\xE0ng d\u1ECDc"), value: type.ContactBubbleLayout.VERTICAL }
        ],
        propKey: propKey.PROP_KEY.joinKey(device, propKey.PROP_KEY.Layout),
        formItemProps: { label: i18n.t("Ki\u1EC3u") }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SelectConfig, {
        propKey: propKey.PROP_KEY.joinKey(device, propKey.PROP_KEY.Position),
        formItemProps: { label: i18n.t("V\u1ECB tr\xED") },
        options: [
          {
            label: i18n.t("D\u01B0\u1EDBi c\xF9ng ph\u1EA3i"),
            value: type.ContactBubblePosition.BOTTOM_RIGHT
          },
          {
            label: i18n.t("D\u01B0\u1EDBi c\xF9ng tr\xE1i"),
            value: type.ContactBubblePosition.BOTTOM_LEFT
          },
          {
            label: i18n.t("Gi\u1EEFa ph\u1EA3i"),
            value: type.ContactBubblePosition.CENTER_RIGHT
          },
          {
            label: i18n.t("Gi\u1EEFa tr\xE1i"),
            value: type.ContactBubblePosition.CENTER_LEFT
          }
        ]
      }),
      renderGapConfig(),
      /* @__PURE__ */ jsxRuntime.jsx(PanelLabel, {
        children: i18n.t("Danh s\xE1ch n\xFAt")
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ItemListConfig, {
        propKey: propKey.PROP_KEY.joinKey(device, propKey.PROP_KEY.Items),
        activeItemConfig: BubbleItemSetting.BubbleItemSetting,
        activeItemConfigProps: { device },
        defaultActiveItem: relatedNodeId == null ? void 0 : relatedNodeId.itemIndex,
        addItemText: i18n.t("Th\xEAm n\xFAt"),
        defaultItem: {
          title: "",
          link: ""
        }
      })
    ]
  });
};
const PanelLabel = styled__default["default"].div`
  font-weight: bold;
  margin-bottom: 8px;
`;

exports.BubbleSettingByDevice = BubbleSettingByDevice;
