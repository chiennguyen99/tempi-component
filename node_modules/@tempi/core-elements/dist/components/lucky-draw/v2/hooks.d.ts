import { ConfigStorageInterface } from '../../form';
import { LuckyDrawResponse, WheelResponseInterface } from './type';
export declare const useLuckyDraw: (id: number, configs: {
    triggerUpdate?: boolean;
    popupResponse?: LuckyDrawResponse;
    configStorage?: ConfigStorageInterface;
    wrapperRef?: React.MutableRefObject<HTMLDivElement>;
    userPhoneNumber?: string;
    isDisableLuckyDrawPhoneInput?: boolean;
}) => {
    wheel: WheelResponseInterface;
    loading: boolean;
    mustSpin: boolean;
    turnCount: number;
    prizeNumber: number;
    isShowForm: boolean;
    totalPercentage: number;
    setLoading: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    setUserInfo: import("react").Dispatch<(prevState: undefined) => undefined>;
    handleSpin: (userInfo: any) => Promise<void>;
    handleSpinClick: () => void;
    setMustSpin: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    setIsShowForm: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    handleStorageData: (configStorage: ConfigStorageInterface) => Promise<void>;
    handleStopSpin: () => Promise<void>;
};
//# sourceMappingURL=hooks.d.ts.map