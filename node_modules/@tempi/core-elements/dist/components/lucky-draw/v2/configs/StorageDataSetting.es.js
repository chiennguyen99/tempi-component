import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../../../i18n.es.js';
import { Form, Tooltip, Button, Modal, Spin } from 'antd';
import { useState, useEffect } from 'react';
import { useFrame } from 'react-frame-component';
import { useStorageData } from '../../../../configs/storage/hook/useStorageData.es.js';
import { ConfigStorageData } from '../../../../configs/storage/ConfigStorageData.es.js';

const StorageDataSetting = () => {
  const { document: frameDocument } = useFrame();
  const [isOpen, setIsOpen] = useState(false);
  const [form] = Form.useForm();
  const {
    getFormConfigs,
    ggSheetsAccounts,
    handleFetchFormAccount,
    handleSubmitStorageData,
    initStorageData,
    loadingForm,
    configStorageId
  } = useStorageData({ form });
  useEffect(() => {
    if (isOpen) {
      getFormConfigs(configStorageId, initStorageData);
      handleFetchFormAccount();
    }
  }, [isOpen]);
  const handlerSaveModal = async (value) => {
    await handleSubmitStorageData(value);
    setIsOpen(false);
  };
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(Tooltip, {
        title: t("L\u01B0u d\u1EEF li\u1EC7u v\u1EC1 Email, Google Sheet ho\u1EB7c API"),
        children: /* @__PURE__ */ jsx(Button, {
          type: "text",
          onClick: () => setIsOpen(true),
          children: t("L\u01B0u d\u1EEF li\u1EC7u")
        })
      }),
      /* @__PURE__ */ jsx(Modal, {
        onCancel: () => setIsOpen(false),
        open: isOpen,
        title: t("L\u01B0u d\u1EEF li\u1EC7u"),
        okText: t("L\u01B0u"),
        destroyOnClose: true,
        cancelText: t("common.cancel"),
        getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
        onOk: () => form.submit(),
        children: /* @__PURE__ */ jsx(Form, {
          form,
          onFinish: handlerSaveModal,
          layout: "vertical",
          scrollToFirstError: true,
          children: /* @__PURE__ */ jsx(Spin, {
            spinning: loadingForm,
            children: /* @__PURE__ */ jsx(ConfigStorageData, {
              form,
              ggSheetsAccounts,
              handleFetchFormAccount
            })
          })
        })
      })
    ]
  });
};

export { StorageDataSetting };
