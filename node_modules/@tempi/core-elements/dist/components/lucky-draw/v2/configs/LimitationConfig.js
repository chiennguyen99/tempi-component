'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var styled = require('@emotion/styled');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var dayjs = require('dayjs');
var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const LimitationConfig = ({ limit, onSubmit }) => {
  const [form] = antd.Form.useForm();
  const [loading, setLoading] = React.useState(false);
  const [limitType, setLimitType] = React.useState((limit == null ? void 0 : limit.type) || 1);
  const RESET_DURATIONS = [
    { value: "day", label: i18n.t("Ng\xE0y") },
    { value: "week", label: i18n.t("Tu\u1EA7n") },
    { value: "month", label: i18n.t("Th\xE1ng") }
  ];
  const onChangeLimitType = (e) => {
    setLimitType(e.target.value);
    form.resetFields();
  };
  const handleSubmitForm = async () => {
    setLoading(true);
    const dataBody = __spreadProps(__spreadValues({}, form.getFieldsValue()), {
      type: limitType
    });
    if (!!dataBody) {
      if (limitType === 1)
        delete dataBody.resetUnit;
      if (limitType === 2)
        dataBody.startAt = dayjs__default["default"](form.getFieldValue("startAt")).toISOString();
      else
        delete dataBody.startAt;
      try {
        await (onSubmit == null ? void 0 : onSubmit(dataBody));
      } catch (error) {
      }
    }
    setTimeout(() => setLoading(false), 300);
  };
  const UserLimitConfig = () => /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
      name: "spinTurn",
      label: i18n.t("L\u01B0\u1EE3t tham gia \u0111\u1ED1i \u0111a"),
      rules: [
        { required: true, message: i18n.t("H\xE3y nh\u1EADp l\u01B0\u1EE3t tham gia t\u1ED1i \u0111a") }
      ],
      children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, __spreadProps(__spreadValues({}, { min: 1, placeholder: i18n.t("Nh\u1EADp s\u1ED1") }), {
        style: { width: "100%" }
      }))
    })
  });
  const TimeLimitConfig = () => /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
        name: "spinTurn",
        label: i18n.t("L\u01B0\u1EE3t tham gia"),
        rules: [{ required: true, message: i18n.t("H\xE3y nh\u1EADp l\u01B0\u1EE3t tham gia") }],
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, __spreadProps(__spreadValues({}, { min: 1, placeholder: i18n.t("Nh\u1EADp s\u1ED1") }), {
          style: { width: "100%" }
        }))
      }),
      /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
        name: "startAt",
        label: i18n.t("Th\u1EDDi gian b\u1EAFt \u0111\u1EA7u"),
        rules: [{ required: true, message: i18n.t("H\xE3y ch\u1ECDn th\u1EDDi gian b\u1EAFt \u0111\u1EA7u") }],
        children: /* @__PURE__ */ jsxRuntime.jsx(antd.DatePicker, {
          showTime: true,
          format: "DD/MM/YYYY HH:mm:ss",
          placeholder: "dd/mm/yyyy hh:MM:ss",
          style: { width: "100%" }
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsxs(StyledResetWrapper, {
        label: i18n.t("luckydraw_config.condition.reset_after"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
            noStyle: true,
            name: "resetAfter",
            rules: [{ required: true, message: i18n.t("H\xE3y nh\u1EADp gi\xE1 tr\u1ECB") }],
            children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, __spreadProps(__spreadValues({}, { min: 1, placeholder: i18n.t("Nh\u1EADp s\u1ED1") }), {
              style: { width: "100%", marginBottom: 8 }
            }))
          }),
          /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
            noStyle: true,
            name: "resetUnit",
            rules: [{ required: true, message: i18n.t("H\xE3y ch\u1ECDn \u0111\u01A1n v\u1ECB") }],
            children: /* @__PURE__ */ jsxRuntime.jsx(StyledSelectConfig, {
              options: RESET_DURATIONS,
              selectProps: { defaultValue: "day" }
            })
          })
        ]
      })
    ]
  });
  const StartLimitConfig = () => /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
        name: "spinTurn",
        label: i18n.t("L\u01B0\u1EE3t tham gia"),
        rules: [{ required: true, message: i18n.t("H\xE3y nh\u1EADp l\u01B0\u1EE3t tham gia") }],
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, __spreadProps(__spreadValues({}, { min: 1, placeholder: i18n.t("Nh\u1EADp s\u1ED1") }), {
          style: { width: "100%" }
        }))
      }),
      /* @__PURE__ */ jsxRuntime.jsxs(StyledResetWrapper, {
        label: i18n.t("luckydraw_config.condition.reset_after"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
            noStyle: true,
            name: "resetAfter",
            rules: [{ required: true, message: i18n.t("H\xE3y nh\u1EADp gi\xE1 tr\u1ECB") }],
            children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, __spreadProps(__spreadValues({}, { min: 1, placeholder: i18n.t("Nh\u1EADp s\u1ED1") }), {
              style: { width: "100%", marginBottom: 8 }
            }))
          }),
          /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
            noStyle: true,
            name: "resetUnit",
            rules: [{ required: true, message: i18n.t("H\xE3y ch\u1ECDn \u0111\u01A1n v\u1ECB") }],
            children: /* @__PURE__ */ jsxRuntime.jsx(StyledSelectConfig, {
              options: RESET_DURATIONS
            })
          })
        ]
      })
    ]
  });
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: /* @__PURE__ */ jsxRuntime.jsxs(antd.Form, {
      form,
      onFinish: handleSubmitForm,
      initialValues: __spreadProps(__spreadValues({}, limit), {
        startAt: dayjs__default["default"]((limit == null ? void 0 : limit.startAt) || dayjs__default["default"]()),
        resetUnit: limit.resetUnit || "day"
      }),
      layout: "vertical",
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(coreEditor.FormItem, {
          label: i18n.t("Gi\u1EDBi h\u1EA1n tham gia"),
          layout: "vertical",
          children: /* @__PURE__ */ jsxRuntime.jsx(StyledLimitationConfig, {
            children: /* @__PURE__ */ jsxRuntime.jsxs(antd.Radio.Group, {
              onChange: onChangeLimitType,
              value: limitType,
              children: [
                /* @__PURE__ */ jsxRuntime.jsx(StyledRadio, {
                  value: 1,
                  children: i18n.t("Gi\u1EDBi h\u1EA1n theo m\u1ED7i ng\u01B0\u1EDDi ch\u01A1i")
                }),
                limitType === 1 && /* @__PURE__ */ jsxRuntime.jsx(UserLimitConfig, {}),
                /* @__PURE__ */ jsxRuntime.jsx(StyledRadio, {
                  value: 2,
                  children: i18n.t("T\xEDnh theo m\u1ED1c th\u1EDDi gian c\u1ED1 \u0111\u1ECBnh")
                }),
                limitType === 2 && /* @__PURE__ */ jsxRuntime.jsx(TimeLimitConfig, {}),
                /* @__PURE__ */ jsxRuntime.jsx(StyledRadio, {
                  value: 3,
                  children: i18n.t("T\xEDnh theo th\u1EDDi \u0111i\u1EC3m tham gia")
                }),
                limitType === 3 && /* @__PURE__ */ jsxRuntime.jsx(StartLimitConfig, {})
              ]
            })
          })
        }),
        /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
          loading,
          type: "primary",
          htmlType: "submit",
          style: { width: 120 },
          block: true,
          children: i18n.t("L\u01B0u")
        })
      ]
    })
  });
};
const StyledLimitationConfig = styled__default["default"].div`
  margin-top: 16px;
`;
const StyledRadio = styled__default["default"](antd.Radio)`
  margin-bottom: 12px;
  font-size: 13px;
  .ant-radio-wrapper {
    display: flex;
    align-items: center;
  }
  .ant-radio-inner {
    background-color: transparent;
  }
`;
const StyledFormItem = styled__default["default"](antd.Form.Item)`
  margin-bottom: 4px;
`;
const StyledResetWrapper = styled__default["default"](StyledFormItem)`
  .ant-form-item-control-input-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
    gap: 8px;
  }

  .custom-form-item {
    margin-bottom: unset;
  }
`;
const StyledSelectConfig = styled__default["default"](coreEditor.SelectConfig)`
  width: 100% !important;
  margin-bottom: 0;
`;

exports.LimitationConfig = LimitationConfig;
