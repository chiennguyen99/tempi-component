import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../../../i18n.es.js';
import { EditOutlined } from '@ant-design/icons';
import styled from '@emotion/styled';
import { useEditor, useNode, useProp, FormItem, deserializePB } from '@tempi/core-editor';
import { Switch, Divider } from 'antd';
import { useEffect, useMemo } from 'react';
import { v4 } from 'uuid';
import { DEFAULT_POPUP_PRIZE_V2, DEFAULT_POPUP_OUT_OF_MOVE_V2, DEFAULT_POPUP_OUT_OF_PRIZE_V2 } from '../constants.es.js';
import { ResponseCustomConfig } from './ResponseCustomConfig.es.js';
import { PROP_KEY } from '../../../../constants/propKey.es.js';

const ResponseConfig = () => {
  const { actions, addBlock, nodes } = useEditor((state) => ({
    nodes: state.nodes
  }));
  const { id: currentNodeId, childNodes } = useNode((node) => {
    return {
      childNodes: node.data.nodes
    };
  });
  const [prizePopupId, setPrizePopupId] = useProp(
    PROP_KEY.joinKey(PROP_KEY.Response, PROP_KEY.Prize)
  );
  const [outOfTurnPopupId, setOutOfTurnPopupId] = useProp(
    PROP_KEY.joinKey(PROP_KEY.Response, PROP_KEY.OutOfTurn)
  );
  const [outOfPrizePopupId, setOutOfPrizePopupId] = useProp(
    PROP_KEY.joinKey(PROP_KEY.Response, PROP_KEY.OutOfPrize)
  );
  const handleSwitchPrizePopup = async (flag) => {
    if (flag) {
      const node = deserializePB(
        DEFAULT_POPUP_PRIZE_V2(
          t("Popup tr\xFAng gi\u1EA3i ({{uuid()}})", { "uuid()": v4() })
        )
      );
      const newNode = await addBlock(
        node,
        childNodes.length,
        currentNodeId
      );
      setPrizePopupId(newNode.rootNodeId);
    } else {
      if (nodes[prizePopupId]) {
        actions.delete(prizePopupId);
        setPrizePopupId(null);
      }
    }
  };
  const handleSwitchOutOfTurnPopup = async (flag) => {
    if (flag) {
      const node = deserializePB(
        DEFAULT_POPUP_OUT_OF_MOVE_V2(
          t("Popup h\u1EBFt l\u01B0\u1EE3t ({{uuid()}})", { "uuid()": v4() })
        )
      );
      const newNode = await addBlock(
        node,
        childNodes.length,
        currentNodeId
      );
      setOutOfTurnPopupId(newNode.rootNodeId);
    } else {
      if (nodes[outOfTurnPopupId]) {
        actions.delete(outOfTurnPopupId);
        setOutOfTurnPopupId(null);
      }
    }
  };
  const handleSwitchOutOfPrizePopup = async (flag) => {
    if (flag) {
      const node = deserializePB(
        DEFAULT_POPUP_OUT_OF_PRIZE_V2(
          t("Popup h\u1EBFt qu\xE0 ({{uuid()}})", { "uuid()": v4() })
        )
      );
      const newNode = await addBlock(
        node,
        childNodes.length,
        currentNodeId
      );
      setOutOfPrizePopupId(newNode.rootNodeId);
    } else {
      if (nodes[outOfPrizePopupId]) {
        actions.delete(outOfPrizePopupId);
        setOutOfPrizePopupId(null);
      }
    }
  };
  useEffect(() => {
    if (prizePopupId === void 0) {
      handleSwitchPrizePopup(true);
    }
    if (outOfTurnPopupId === void 0) {
      handleSwitchOutOfTurnPopup(true);
    }
    if (outOfPrizePopupId === void 0) {
      handleSwitchOutOfPrizePopup(true);
    }
  }, []);
  const showPrizeDetail = useMemo(() => {
    return prizePopupId && (nodes == null ? void 0 : nodes[prizePopupId]);
  }, [prizePopupId, nodes]);
  const showOutOfTurnDetail = useMemo(() => {
    return outOfTurnPopupId && (nodes == null ? void 0 : nodes[outOfTurnPopupId]);
  }, [outOfTurnPopupId, nodes]);
  const showOutOfPrizeDetail = useMemo(() => {
    return outOfPrizePopupId && (nodes == null ? void 0 : nodes[outOfPrizePopupId]);
  }, [outOfPrizePopupId, nodes]);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(FormItem, {
        label: /* @__PURE__ */ jsxs(Fragment, {
          children: [
            /* @__PURE__ */ jsx("span", {
              children: t("Popup tr\xFAng th\u01B0\u1EDFng")
            }),
            !!showPrizeDetail && /* @__PURE__ */ jsx(StyledIcon, {
              onClick: () => actions.selectNode(prizePopupId)
            })
          ]
        }),
        children: /* @__PURE__ */ jsx(Switch, {
          checked: !!showPrizeDetail,
          onChange: handleSwitchPrizePopup
        })
      }),
      /* @__PURE__ */ jsx(FormItem, {
        label: /* @__PURE__ */ jsxs(Fragment, {
          children: [
            /* @__PURE__ */ jsx("span", {
              children: t("Popup h\u1EBFt l\u01B0\u1EE3t")
            }),
            !!showOutOfTurnDetail && /* @__PURE__ */ jsx(StyledIcon, {
              onClick: () => actions.selectNode(outOfTurnPopupId)
            })
          ]
        }),
        children: /* @__PURE__ */ jsx(Switch, {
          checked: !!showOutOfTurnDetail,
          onChange: handleSwitchOutOfTurnPopup
        })
      }),
      /* @__PURE__ */ jsx(FormItem, {
        label: /* @__PURE__ */ jsxs(Fragment, {
          children: [
            /* @__PURE__ */ jsx("span", {
              children: t("Popup h\u1EBFt qu\xE0")
            }),
            !!showOutOfPrizeDetail && /* @__PURE__ */ jsx(StyledIcon, {
              onClick: () => actions.selectNode(outOfPrizePopupId)
            })
          ]
        }),
        children: /* @__PURE__ */ jsx(Switch, {
          checked: !!showOutOfPrizeDetail,
          onChange: handleSwitchOutOfPrizePopup
        })
      }),
      /* @__PURE__ */ jsx(Divider, {
        style: {
          margin: "12px 0"
        }
      }),
      /* @__PURE__ */ jsx(FormItem, {
        layout: "horizontal",
        label: t("N\xE2ng cao: T\u1EF1 c\u1EA5u h\xECnh ph\u1EA3n h\u1ED3i d\u1EF1a theo response code"),
        children: /* @__PURE__ */ jsx("div", {})
      }),
      /* @__PURE__ */ jsx(FormItem, {
        children: /* @__PURE__ */ jsx(ResponseCustomConfig, {})
      })
    ]
  });
};
const StyledIcon = styled(EditOutlined)(
  ({ theme }) => `
  cursor: pointer;
  color: ${theme.colorPrimary} !important;
  font-size: 20px;
  margin-left: 0.25em;
`
);

export { ResponseConfig };
