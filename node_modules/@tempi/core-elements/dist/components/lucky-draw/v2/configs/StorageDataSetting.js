'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var antd = require('antd');
var React = require('react');
var reactFrameComponent = require('react-frame-component');
var useStorageData = require('../../../../configs/storage/hook/useStorageData.js');
var ConfigStorageData = require('../../../../configs/storage/ConfigStorageData.js');

const StorageDataSetting = () => {
  const { document: frameDocument } = reactFrameComponent.useFrame();
  const [isOpen, setIsOpen] = React.useState(false);
  const [form] = antd.Form.useForm();
  const {
    getFormConfigs,
    ggSheetsAccounts,
    handleFetchFormAccount,
    handleSubmitStorageData,
    initStorageData,
    loadingForm,
    configStorageId
  } = useStorageData.useStorageData({ form });
  React.useEffect(() => {
    if (isOpen) {
      getFormConfigs(configStorageId, initStorageData);
      handleFetchFormAccount();
    }
  }, [isOpen]);
  const handlerSaveModal = async (value) => {
    await handleSubmitStorageData(value);
    setIsOpen(false);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(antd.Tooltip, {
        title: i18n.t("L\u01B0u d\u1EEF li\u1EC7u v\u1EC1 Email, Google Sheet ho\u1EB7c API"),
        children: /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
          type: "text",
          onClick: () => setIsOpen(true),
          children: i18n.t("L\u01B0u d\u1EEF li\u1EC7u")
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(antd.Modal, {
        onCancel: () => setIsOpen(false),
        open: isOpen,
        title: i18n.t("L\u01B0u d\u1EEF li\u1EC7u"),
        okText: i18n.t("L\u01B0u"),
        destroyOnClose: true,
        cancelText: i18n.t("common.cancel"),
        getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
        onOk: () => form.submit(),
        children: /* @__PURE__ */ jsxRuntime.jsx(antd.Form, {
          form,
          onFinish: handlerSaveModal,
          layout: "vertical",
          scrollToFirstError: true,
          children: /* @__PURE__ */ jsxRuntime.jsx(antd.Spin, {
            spinning: loadingForm,
            children: /* @__PURE__ */ jsxRuntime.jsx(ConfigStorageData.ConfigStorageData, {
              form,
              ggSheetsAccounts,
              handleFetchFormAccount
            })
          })
        })
      })
    ]
  });
};

exports.StorageDataSetting = StorageDataSetting;
