'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var icons = require('@ant-design/icons');
var styled = require('@emotion/styled');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var LuckyDrawContext = require('../context/LuckyDrawContext.js');
var ApiConfig = require('../../../../configs/ApiConfig/ApiConfig.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const PrizeConfig = ({ item, setActive, isActive, isCreate = false, onClose }) => {
  var _a, _b;
  const [isOpen, setOpen] = React.useState(isActive);
  const [form] = antd.Form.useForm();
  const [loading, setLoading] = React.useState(false);
  const { id, condition, updateItem, addItem, removeItem } = React.useContext(LuckyDrawContext.LuckyDrawContext);
  const { upsertWheelItem, deleteWheelItem } = coreEditor.useBuilder();
  const handleSubmit = async (values) => {
    var _a2, _b2;
    setLoading(true);
    if (item == null ? void 0 : item.id) {
      const updatedItem = __spreadProps(__spreadValues({
        id: item == null ? void 0 : item.id
      }, values), {
        wheelId: id
      });
      if (!((_a2 = updatedItem == null ? void 0 : updatedItem.image) == null ? void 0 : _a2.src)) {
        updatedItem.image = null;
      }
      await upsertWheelItem(updatedItem).then(() => {
        updateItem(updatedItem);
      });
    } else {
      const newItem = __spreadProps(__spreadValues({}, values), { wheelId: id });
      if (!((_b2 = newItem == null ? void 0 : newItem.image) == null ? void 0 : _b2.src)) {
        delete newItem.image;
      }
      await upsertWheelItem(newItem).then((id2) => {
        addItem(__spreadProps(__spreadValues({}, newItem), { id: id2 }));
        form.resetFields();
      });
    }
    setLoading(false);
    setOpen(false);
    onClose == null ? void 0 : onClose();
  };
  const handleClose = () => {
    form.resetFields();
    setOpen(false);
    onClose == null ? void 0 : onClose();
  };
  const handleDelete = async (id2) => {
    if (confirm(i18n.t("B\u1EA1n ch\u1EAFc ch\u1EAFn mu\u1ED1n x\xF3a ph\u1EA7n qu\xE0 n\xE0y?"))) {
      setLoading(true);
      try {
        await deleteWheelItem(id2).then(() => {
          removeItem(id2);
        });
      } catch (err) {
      }
      setLoading(false);
    }
  };
  React.useEffect(() => {
    if (!isActive) {
      setOpen(false);
    } else {
      setOpen(true);
    }
  }, [isActive]);
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    style: { borderRadius: 5, overflow: "hidden" },
    children: /* @__PURE__ */ jsxRuntime.jsx(antd.Spin, {
      spinning: loading,
      children: /* @__PURE__ */ jsxRuntime.jsxs(Wrapper, {
        className: isOpen ? "open" : "close",
        isCreate,
        isOpen,
        children: [
          !isCreate && /* @__PURE__ */ jsxRuntime.jsxs(PrizeHeader, {
            onClick: () => {
              if (!isOpen) {
                setActive();
              }
              setOpen(!isOpen);
            },
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(StyledLabel, {
                title: item == null ? void 0 : item.name,
                children: item == null ? void 0 : item.name
              }),
              /* @__PURE__ */ jsxRuntime.jsxs("div", {
                style: { color: "#82869e", marginRight: 8 },
                children: [
                  (item == null ? void 0 : item.percentage) || 0,
                  "%"
                ]
              }),
              /* @__PURE__ */ jsxRuntime.jsx(StyledIcon, {
                onClick: (e) => {
                  e.stopPropagation();
                  handleDelete(item.id);
                }
              })
            ]
          }),
          /* @__PURE__ */ jsxRuntime.jsxs("div", {
            style: { padding: "8px 0" },
            children: [
              !isCreate && /* @__PURE__ */ jsxRuntime.jsx(antd.Divider, {
                style: {
                  borderColor: "var(--border-color)",
                  margin: "0 0 12px 0"
                }
              }),
              /* @__PURE__ */ jsxRuntime.jsxs(antd.Form, {
                form,
                name: "prize",
                onFinish: handleSubmit,
                initialValues: item,
                children: [
                  /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
                    name: "name",
                    label: i18n.t("T\xEAn qu\xE0"),
                    rules: [
                      {
                        required: true,
                        message: i18n.t("T\xEAn qu\xE0 kh\xF4ng \u0111\u01B0\u1EE3c b\u1ECF tr\u1ED1ng")
                      }
                    ],
                    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.Input, {
                      defaultValue: item == null ? void 0 : item.name
                    })
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
                    name: "percentage",
                    label: i18n.t("T\u1EC9 l\u1EC7 tr\xFAng th\u01B0\u1EDFng (%)"),
                    rules: [
                      {
                        required: true,
                        message: i18n.t("T\u1EC9 l\u1EC7 tr\xFAng th\u01B0\u1EDFng kh\xF4ng \u0111\u01B0\u1EE3c b\u1ECF tr\u1ED1ng")
                      }
                    ],
                    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, {
                      min: 0,
                      max: 100
                    })
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
                    name: "request",
                    noStyle: true,
                    children: /* @__PURE__ */ jsxRuntime.jsx(ApiConfig.ApiConfig, {
                      data: item == null ? void 0 : item.request,
                      onSubmit: async (request) => {
                        form.setFieldValue("request", request);
                      },
                      attributes: [
                        "prizeName",
                        "spinAt",
                        ...((_a = condition == null ? void 0 : condition.form) == null ? void 0 : _a.fields.map((field) => field.name)) || []
                      ]
                    })
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
                    name: ["image", "src"],
                    noStyle: true,
                    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageFormItem, {
                      defaultValue: (_b = item == null ? void 0 : item.image) == null ? void 0 : _b.src,
                      onChange: (src) => {
                        form.setFieldValue(["image", "src"], src);
                      }
                    })
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
                    name: ["image", "width"],
                    label: i18n.t("Chi\u1EC1u r\u1ED9ng \u1EA3nh (px)"),
                    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, {})
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(StyledFormItem, {
                    name: "quantity",
                    label: i18n.t("S\u1ED1 l\u01B0\u1EE3ng gi\u1EA3i th\u01B0\u1EDFng"),
                    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumber, {})
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(antd.Divider, {
                    style: {
                      borderColor: "var(--border-color)",
                      margin: "0 0 12px 0"
                    }
                  }),
                  /* @__PURE__ */ jsxRuntime.jsxs("div", {
                    style: { display: "flex", gap: 25 },
                    children: [
                      /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
                        type: "text",
                        onClick: handleClose,
                        style: {
                          flex: 1,
                          borderRadius: 4
                        },
                        children: i18n.t("common.cancel")
                      }),
                      /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
                        type: "primary",
                        onClick: () => form.submit(),
                        loading,
                        style: { flex: 1, borderRadius: 4 },
                        children: i18n.t("L\u01B0u")
                      })
                    ]
                  })
                ]
              })
            ]
          })
        ]
      })
    })
  });
};
const PrizeHeader = styled__default["default"].div`
  font-weight: 500;
  user-select: none;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  width: 100%;
`;
const StyledLabel = styled__default["default"].div`
  flex-grow: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 0.5em;
`;
const StyledIcon = styled__default["default"](icons.DeleteOutlined)`
  font-size: 1.2em;
  color: #82869e;

  &:hover {
    color: var(--text-color);
  }
`;
const Wrapper = styled__default["default"].div(
  ({ isCreate, isOpen }) => `

${(!isCreate || isOpen) && `
  padding: 10px 12px;
  border: 1px solid var(--border-color);
  margin-bottom: 8px;
  `}

padding-right: 12px;
padding-left: 12px;

border-radius: 5px;
overflow: hidden;
transition: 0.5s all;

&.close {
  max-height: ${isCreate ? "0px" : "42px"};
}

&.open {
  max-height: 600px;
}
`
);
const StyledFormItem = styled__default["default"](antd.Form.Item)`
  margin: 0 0 8px 0;

  .ant-form-item-label {
    flex-grow: 1;
    text-align: left;
  }

  .ant-form-item-control,
  .ant-input-number {
    width: 110px !important;
  }

  .ant-form-horizontal .ant-form-item-control,
  .ant-form-item-control {
    flex: unset;
  }
`;

exports.PrizeConfig = PrizeConfig;
