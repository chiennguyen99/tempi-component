import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../../../i18n.es.js';
import { PlusOutlined, QuestionCircleOutlined } from '@ant-design/icons';
import styled from '@emotion/styled';
import { Popover, Spin, Button } from 'antd';
import { useState, useContext } from 'react';
import { InputNumberConfig, SelectConfig, SwitchConfig } from '@tempi/core-editor';
import { LuckyDrawContext } from '../context/LuckyDrawContext.es.js';
import { PrizeConfig } from './PrizeConfig.es.js';
import { PROP_KEY } from '../../../../constants/propKey.es.js';

const PrizeListConfig = () => {
  const [activeIndex, setActiveIndex] = useState(null);
  const [showCreateForm, setShowCreateForm] = useState(false);
  const { items, loading } = useContext(LuckyDrawContext);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(InputNumberConfig, {
        propKey: PROP_KEY.PrizeAngle,
        formItemProps: {
          label: t("G\xF3c quay tr\xFAng th\u01B0\u1EDFng")
        }
      }),
      /* @__PURE__ */ jsx(SelectConfig, {
        propKey: PROP_KEY.joinKey(
          PROP_KEY.CanvasConfig,
          PROP_KEY.PerpendicularPrize
        ),
        options: [
          { label: t("common.horizontal"), value: false },
          { label: t("common.vertical"), value: true }
        ],
        formItemProps: {
          label: t("H\u01B0\u1EDBng gi\u1EA3i th\u01B0\u1EDFng")
        }
      }),
      /* @__PURE__ */ jsx(SwitchConfig, {
        propKey: PROP_KEY.ShowTurn,
        formItemProps: {
          label: t("Hi\u1EC3n th\u1ECB s\u1ED1 l\u01B0\u1EE3t quay")
        }
      }),
      /* @__PURE__ */ jsxs(StyledLabel, {
        children: [
          t("Danh s\xE1ch gi\u1EA3i th\u01B0\u1EDFng"),
          " ",
          /* @__PURE__ */ jsx(Popover, {
            content: t("T\u1ED5ng x\xE1c su\u1EA5t tr\xFAng th\u01B0\u1EDFng ph\u1EA3i b\u1EB1ng 100%"),
            zIndex: 1100,
            children: /* @__PURE__ */ jsx(StyledIcon, {
              name: "AntdQuestionCircleOutlined"
            })
          })
        ]
      }),
      /* @__PURE__ */ jsxs(Spin, {
        spinning: loading,
        children: [
          items == null ? void 0 : items.map((item, index) => /* @__PURE__ */ jsx(PrizeConfig, {
            item,
            isActive: index === activeIndex,
            setActive: () => setActiveIndex(index)
          }, item == null ? void 0 : item.id)),
          /* @__PURE__ */ jsx(PrizeConfig, {
            isActive: showCreateForm,
            setActive: () => {
              setActiveIndex(null);
            },
            onClose: () => {
              setShowCreateForm(false);
            },
            isCreate: true
          }),
          /* @__PURE__ */ jsx(StyledBtn, {
            block: true,
            type: "primary",
            icon: /* @__PURE__ */ jsx(PlusOutlined, {}),
            onClick: () => setShowCreateForm(true),
            children: t("Th\xEAm ph\u1EA7n qu\xE0")
          })
        ]
      })
    ]
  });
};
const StyledLabel = styled.div`
  font-weight: 500;
  margin: 20px 0 10px 0;
`;
const StyledBtn = styled(Button)`
  margin-bottom: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  span {
    margin-right: 4px;
  }
`;
const StyledIcon = styled(QuestionCircleOutlined)`
  font-size: 1.2em;
  color: #82869e;

  &:hover {
    color: var(--text-color);
  }
`;

export { PrizeListConfig };
