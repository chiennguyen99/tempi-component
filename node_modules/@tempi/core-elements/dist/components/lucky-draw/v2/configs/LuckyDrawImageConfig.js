'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var type = require('../type.js');
var BackgroundColorConfig = require('./BackgroundColorConfig.js');
var propKey = require('../../../../constants/propKey.js');
var QuickSettingTabWrapper = require('../../../../core/QuickSettingTabWrapper/QuickSettingTabWrapper.js');

const LuckyDrawImageConfig = () => {
  const backgroundColors = propKey.PROP_KEY.BackgroundColors;
  const backgroundImagePropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CanvasConfig,
    propKey.PROP_KEY.Background,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.Src
  );
  const backgroundImageWidthPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CanvasConfig,
    propKey.PROP_KEY.Background,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.GoogleImageParams,
    propKey.PROP_KEY.Width
  );
  const backgroundRotatePropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CanvasConfig,
    propKey.PROP_KEY.Background,
    propKey.PROP_KEY.Rotate
  );
  const borderImagePropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CanvasConfig,
    propKey.PROP_KEY.Border,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.Src
  );
  const borderImageWidthPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.CanvasConfig,
    propKey.PROP_KEY.Border,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.GoogleImageParams,
    propKey.PROP_KEY.Width
  );
  const spinTriggerImagePropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.SpinTrigger,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.Src
  );
  const spinTriggerImageWidthPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.SpinTrigger,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.GoogleImageParams,
    propKey.PROP_KEY.Width
  );
  const rouletteImagePropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.Roulette,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.Src
  );
  const rouletteImageWidthPropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.Roulette,
    propKey.PROP_KEY.Image,
    propKey.PROP_KEY.GoogleImageParams,
    propKey.PROP_KEY.Width
  );
  const rouletteRotatePropKey = propKey.PROP_KEY.joinKey(
    propKey.PROP_KEY.Roulette,
    propKey.PROP_KEY.Rotate
  );
  const [showPopover, setShowPopover] = React.useState(
    type.ShowPopoverEnum.HIDE
  );
  const renderContent = () => /* @__PURE__ */ jsxRuntime.jsxs(QuickSettingTabWrapper.QuickSettingTabWrapper, {
    centered: false,
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(antd.Tabs.TabPane, {
        tab: i18n.t("M\xE0u n\u1EC1n"),
        children: /* @__PURE__ */ jsxRuntime.jsx(BackgroundColorConfig.BackgroundColorConfig, {
          propKey: backgroundColors,
          setOpenPopover: setShowPopover
        })
      }, "background-color-tab"),
      /* @__PURE__ */ jsxRuntime.jsxs(antd.Tabs.TabPane, {
        tab: i18n.t("\u1EA2nh n\u1EC1n"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageConfig, {
            propKey: backgroundImagePropKey,
            widthPropKey: backgroundImageWidthPropKey,
            layout: "vertical"
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
            propKey: backgroundRotatePropKey,
            formItemProps: {
              label: i18n.t("Xoay (\u0111\u1ED9)")
            }
          })
        ]
      }, "background-tab"),
      /* @__PURE__ */ jsxRuntime.jsx(antd.Tabs.TabPane, {
        tab: i18n.t("Vi\u1EC1n"),
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageConfig, {
          propKey: borderImagePropKey,
          widthPropKey: borderImageWidthPropKey
        })
      }, "border-tab"),
      /* @__PURE__ */ jsxRuntime.jsx(antd.Tabs.TabPane, {
        tab: i18n.t("N\xFAt"),
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageConfig, {
          propKey: spinTriggerImagePropKey,
          widthPropKey: spinTriggerImageWidthPropKey
        })
      }, "button-tab"),
      /* @__PURE__ */ jsxRuntime.jsxs(antd.Tabs.TabPane, {
        tab: i18n.t("M\u0169i t\xEAn"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageConfig, {
            propKey: rouletteImagePropKey,
            widthPropKey: rouletteImageWidthPropKey
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
            propKey: rouletteRotatePropKey,
            formItemProps: {
              label: i18n.t("Xoay (\u0111\u1ED9)")
            }
          })
        ]
      }, "roulette-tab")
    ]
  });
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
      content: renderContent(),
      overlayInnerStyle: { width: "max-content" },
      open: !!showPopover,
      onOpenChange: (visible) => {
        setShowPopover(
          (prev) => prev === type.ShowPopoverEnum.ALWAYS_SHOW ? type.ShowPopoverEnum.ALWAYS_SHOW : visible ? type.ShowPopoverEnum.SHOW : type.ShowPopoverEnum.HIDE
        );
      },
      children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
        tooltip: i18n.t("lucky_draw_config"),
        children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.ImageRegular, {
          style: { fontSize: 16 }
        })
      })
    })
  });
};

exports.LuckyDrawImageConfig = LuckyDrawImageConfig;
