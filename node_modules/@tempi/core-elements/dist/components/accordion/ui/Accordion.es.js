import { jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { getStyle } from '@tempi/core-renderer';
import { AccordionProvider } from '../context.es.js';
import { getAccordionItemChildrenCss } from '../utils.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const Accordion = (_a) => {
  var _b = _a, {
    children,
    icon,
    titleLevel = "h5"
  } = _b, rest = __objRest(_b, [
    "children",
    "icon",
    "titleLevel"
  ]);
  return /* @__PURE__ */ jsx(Wrapper, __spreadProps(__spreadValues({}, rest), {
    children: /* @__PURE__ */ jsx(AccordionProvider, {
      titleLevel,
      icon,
      children
    })
  }));
};
Accordion.displayName = "Accordion";
const Wrapper = styled.div(
  ({ commonStyle, itemStyle, titleStyle, duration }) => {
    const animationDuration = typeof duration === "number" ? `transition: all ${duration}s;` : "";
    return `
    ${getStyle(commonStyle)}
    display: flex;
    flex-direction: column;

    .accordion {
      &__item {
        ${getStyle(itemStyle)}
      }
      &__title {
        h1, h2, h3, h4, h5, h6, p {
          ${getStyle(titleStyle)}
        }
      }
      &__header,
      &__content  {
        ${animationDuration}
      }
    }
  `;
  },
  getAccordionItemChildrenCss
);

export { Accordion };
