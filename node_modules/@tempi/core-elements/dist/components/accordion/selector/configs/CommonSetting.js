'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var coreRenderer = require('@tempi/core-renderer');
var propKey = require('../../../../constants/propKey.js');

const CommonSetting = () => {
  const iconPostionKey = propKey.PROP_KEY.joinKey(propKey.PROP_KEY.Icon, propKey.PROP_KEY.Align);
  const [iconPosition] = coreEditor.useProp(iconPostionKey);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SizeAttribute, {
        configs: { allowConfigHeight: false }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.Duration),
        formItemProps: {
          label: i18n.t("Kho\u1EA3ng th\u1EDDi gian (s)")
        },
        inputNumberProps: {
          step: 0.1,
          placeholder: "0"
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CommonStyle, propKey.PROP_KEY.RowGap),
        formItemProps: {
          label: i18n.t("Kho\u1EA3ng c\xE1ch gi\u1EEFa c\xE1c m\u1EE5c")
        },
        unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
        inputNumberProps: {
          placeholder: "0"
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
        formItemProps: {
          label: i18n.t("V\u1ECB tr\xED bi\u1EC3u t\u01B0\u1EE3ng")
        },
        propKey: iconPostionKey,
        buttonGroupProps: {
          listAlignment: ["left", "right"]
        }
      }),
      iconPosition === coreRenderer.Alignment.left && /* @__PURE__ */ jsxRuntime.jsx(coreEditor.InputNumberConfig, {
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.HeaderStyle, propKey.PROP_KEY.ColumnGap),
        formItemProps: {
          label: i18n.t("Kho\u1EA3ng c\xE1ch gi\u1EEFa ti\xEAu \u0111\u1EC1 v\xE0 icon")
        },
        inputNumberProps: {
          placeholder: "0"
        },
        unitProps: { defaultValue: coreRenderer.UnitEnum.pixel }
      })
    ]
  });
};

exports.CommonSetting = CommonSetting;
