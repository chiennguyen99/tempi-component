import { jsx } from 'react/jsx-runtime';
import { useNode, useEditor, crafting, getEditorName } from '@tempi/core-editor';
import { useEffect } from 'react';
import { DEFAULT_ACCORDION } from '../../constants.es.js';
import { AccordionItem } from '../../ui/AccordionItem.es.js';
import { AccordionEditor } from '../Accordion/AccordionEditor.es.js';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const AccordionItemEditor = (props) => {
  const {
    connectors: { connect, drag },
    isActive,
    parent,
    id
  } = useNode((node) => ({
    isActive: node.events.selected,
    parent: node.data.parent
  }));
  const {
    actions: { selectNode }
  } = useEditor(({ events }) => ({ selectedNodeIds: events.selected }));
  useEffect(() => {
    if (isActive) {
      selectNode(parent);
    }
  }, [isActive]);
  return /* @__PURE__ */ jsx(AccordionItem, __spreadValues({
    dataUniqId: id,
    ref: (ref) => connect(drag(ref))
  }, props));
};
AccordionItemEditor.craft = crafting({
  displayName: "N\u1ED9i dung thu g\u1ECDn (item)",
  tag: AccordionItem.displayName.toLowerCase(),
  props: DEFAULT_ACCORDION.accordionItem,
  rules: {
    canMoveIn: () => false,
    canDrop: (targetNode) => {
      const allowTargets = [getEditorName({ AccordionEditor })];
      return allowTargets.includes(targetNode.data.name);
    }
  }
});

export { AccordionItemEditor };
