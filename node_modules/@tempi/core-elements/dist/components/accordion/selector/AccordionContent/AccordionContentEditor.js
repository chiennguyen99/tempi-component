'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var constants = require('../../constants.js');
var AccordionContent = require('../../ui/AccordionContent.js');
var Empty = require('../../../../core/Empty/Empty.js');
var AccordionItemEditor = require('../AccordionItem/AccordionItemEditor.js');

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const { useToken } = antd.theme;
const AccordionContentEditor = (_a) => {
  var _b = _a, {
    children
  } = _b, rest = __objRest(_b, [
    "children"
  ]);
  const { setOpenElementMenu } = coreEditor.useBuilder();
  const { token: themeToken } = useToken();
  const {
    id,
    isActive,
    connectors: { connect }
  } = coreEditor.useNode((node) => ({
    isActive: node.events.selected
  }));
  const {
    actions: { selectNode },
    ancestors
  } = coreEditor.useEditor((_, query) => ({
    ancestors: query.node(id).ancestors()
  }));
  React.useEffect(() => {
    if (isActive) {
      selectNode(ancestors[ancestors.length - 1]);
    }
  }, [isActive]);
  const defaultPlaceholder = /* @__PURE__ */ jsxRuntime.jsx(reactIcons.AddCircleFilled, {
    style: {
      fontSize: 24,
      color: themeToken.colorPrimary,
      cursor: "pointer"
    },
    onClick: (e) => {
      e.stopPropagation();
      setOpenElementMenu(true);
    }
  });
  return /* @__PURE__ */ jsxRuntime.jsx(AccordionContent.AccordionContent, __spreadProps(__spreadValues({
    ref: connect
  }, rest), {
    children: children || /* @__PURE__ */ jsxRuntime.jsx(Empty.Empty, {
      children: defaultPlaceholder
    })
  }));
};
AccordionContentEditor.craft = coreEditor.crafting({
  displayName: "N\u1ED9i dung thu g\u1ECDn (content)",
  tag: AccordionContent.AccordionContent.displayName.toLowerCase(),
  props: constants.DEFAULT_ACCORDION.accordionContent,
  rules: {
    canMoveIn: (incomingNodes) => {
      const ignoreSources = [coreEditor.getEditorName({ AccordionItemEditor: AccordionItemEditor.AccordionItemEditor })];
      return incomingNodes.every(
        (node) => !ignoreSources.includes(node.data.name)
      );
    }
  }
});

exports.AccordionContentEditor = AccordionContentEditor;
