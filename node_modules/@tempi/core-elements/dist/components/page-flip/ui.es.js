import { jsx } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { getImageUrlFromGoogleUserContent, getStyle, Alignment } from '@tempi/core-renderer';
import { useRef, useState, useEffect } from 'react';
import HTMLFlipBook from 'react-pageflip';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const PageFlip = (_a) => {
  var _b = _a, {
    commonStyle,
    id,
    images,
    align
  } = _b, rest = __objRest(_b, [
    "commonStyle",
    "id",
    "images",
    "align"
  ]);
  const pageFlipRef = useRef();
  const [pageFlipKey, setPageFlipKey] = useState(0);
  const DEFAULT_WIDTH = 596;
  const DEFAULT_HEIGHT = 842;
  useEffect(() => {
    setPageFlipKey((key) => key + 1);
  }, [
    rest.autoSize,
    rest.drawShadow,
    rest.flippingTime,
    rest.height,
    rest.width,
    rest.maxHeight,
    rest.maxWidth,
    rest.maxShadowOpacity,
    rest.mobileScrollSupport,
    rest.showCover,
    rest.size,
    rest.startZIndex,
    rest.usePortrait
  ]);
  return /* @__PURE__ */ jsx(Wrapper, {
    commonStyle,
    id,
    align,
    children: /* @__PURE__ */ jsx(HTMLFlipBook, __spreadProps(__spreadValues({
      ref: pageFlipRef
    }, rest), {
      width: rest.width || DEFAULT_WIDTH,
      height: rest.height || DEFAULT_HEIGHT,
      children: images == null ? void 0 : images.map((image, index) => {
        const { src, googleImageParams } = image;
        return /* @__PURE__ */ jsx(Page, {
          src: getImageUrlFromGoogleUserContent(src, __spreadValues({
            format: "webp"
          }, googleImageParams))
        }, index);
      })
    }), pageFlipKey)
  });
};
const transformAlign = (align) => {
  switch (align) {
    case Alignment.center:
      return "margin: 0 auto;";
    case Alignment.right:
      return `
        margin: 0 auto;
        margin-right: 0;
      `;
    default:
      return "";
  }
};
const Wrapper = styled.div(
  ({ commonStyle, align }) => `
  display: flex;
  width: 100%;
  max-width: 100% !important;
  max-width: fit-content;
  position: relative;
  overflow: hidden;
  ${getStyle(commonStyle)}
  ${transformAlign(align)}
`
);
const Page = styled.div(
  ({ src }) => `
  width: 100%;
  height: 100%;
  background-size: contain;
  background-repeat: no-repeat;
  background-image: url(${src});
`
);
PageFlip.displayName = "PageFlip";

export { PageFlip };
