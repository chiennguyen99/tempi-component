'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var styled = require('@emotion/styled');
var iconsDev = require('@tempi/icons-dev');
var coreEditor = require('@tempi/core-editor');
var coreRenderer = require('@tempi/core-renderer');
var antd = require('antd');
var propKey = require('../../constants/propKey.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const GallerySetting = () => {
  const [layout, setLayout] = coreEditor.usePropSeparateDevice(propKey.PROP_KEY.Layout, true);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.FormItem, {
        label: i18n.t("B\u1ED1 c\u1EE5c"),
        layout: "vertical",
        children: /* @__PURE__ */ jsxRuntime.jsxs(antd.Row, {
          gutter: 16,
          children: [
            /* @__PURE__ */ jsxRuntime.jsxs(antd.Col, {
              span: 12,
              children: [
                /* @__PURE__ */ jsxRuntime.jsx(LayoutSelectButton, {
                  block: true,
                  type: layout === "masonry" ? "primary" : "default",
                  onClick: () => setLayout("masonry"),
                  children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
                    name: "MasonryGalleryOutlined",
                    style: { fontSize: 50 }
                  })
                }),
                /* @__PURE__ */ jsxRuntime.jsx("div", {
                  style: { textAlign: "center" },
                  children: "Masonry"
                })
              ]
            }),
            /* @__PURE__ */ jsxRuntime.jsxs(antd.Col, {
              span: 12,
              children: [
                /* @__PURE__ */ jsxRuntime.jsx(LayoutSelectButton, {
                  type: layout === "grid" ? "primary" : "default",
                  onClick: () => setLayout("grid"),
                  block: true,
                  children: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
                    name: "GridGalleryOutlined",
                    style: { fontSize: 50 }
                  })
                }),
                /* @__PURE__ */ jsxRuntime.jsx("div", {
                  style: { textAlign: "center" },
                  children: i18n.t("D\u1EA1ng l\u01B0\u1EDBi")
                })
              ]
            })
          ]
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
        propKey: propKey.PROP_KEY.ColumnCount,
        formItemProps: {
          label: i18n.t("S\u1ED1 c\u1ED9t")
        },
        sliderProps: { min: 1, max: 16 },
        separateDevice: true
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
        propKey: propKey.PROP_KEY.Gap,
        formItemProps: {
          label: i18n.t("Kho\u1EA3ng c\xE1ch gi\u1EEFa c\xE1c \u1EA3nh")
        },
        sliderProps: { min: 0, max: 64 },
        unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
        separateDevice: true
      }),
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchConfig, {
        separateDevice: true,
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.ZoomPreview),
        formItemProps: {
          label: i18n.t("Ph\xF3ng to khi click \u1EA3nh"),
          description: i18n.t("Kh\xF4ng \xE1p d\u1EE5ng \u1EDF ch\u1EBF \u0111\u1ED9 ch\u1EC9nh s\u1EEDa")
        }
      })
    ]
  });
};
const LayoutSelectButton = styled__default["default"](antd.Button)(
  ({ type }) => `
  height: unset;
  margin-bottom: 0.5em;
  padding-top: 1em;
  padding-bottom: 1em;

  ${type === "default" ? "color: #82868B;" : ""}
`
);

exports.GallerySetting = GallerySetting;
