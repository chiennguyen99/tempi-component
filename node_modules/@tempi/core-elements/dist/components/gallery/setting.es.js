import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import styled from '@emotion/styled';
import { AntdCustomIcon } from '@tempi/icons-dev';
import { usePropSeparateDevice, FormItem, RangeSliderConfig, SwitchConfig } from '@tempi/core-editor';
import { UnitEnum } from '@tempi/core-renderer';
import { Row, Col, Button } from 'antd';
import { PROP_KEY } from '../../constants/propKey.es.js';

const GallerySetting = () => {
  const [layout, setLayout] = usePropSeparateDevice(PROP_KEY.Layout, true);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(FormItem, {
        label: t("B\u1ED1 c\u1EE5c"),
        layout: "vertical",
        children: /* @__PURE__ */ jsxs(Row, {
          gutter: 16,
          children: [
            /* @__PURE__ */ jsxs(Col, {
              span: 12,
              children: [
                /* @__PURE__ */ jsx(LayoutSelectButton, {
                  block: true,
                  type: layout === "masonry" ? "primary" : "default",
                  onClick: () => setLayout("masonry"),
                  children: /* @__PURE__ */ jsx(AntdCustomIcon, {
                    name: "MasonryGalleryOutlined",
                    style: { fontSize: 50 }
                  })
                }),
                /* @__PURE__ */ jsx("div", {
                  style: { textAlign: "center" },
                  children: "Masonry"
                })
              ]
            }),
            /* @__PURE__ */ jsxs(Col, {
              span: 12,
              children: [
                /* @__PURE__ */ jsx(LayoutSelectButton, {
                  type: layout === "grid" ? "primary" : "default",
                  onClick: () => setLayout("grid"),
                  block: true,
                  children: /* @__PURE__ */ jsx(AntdCustomIcon, {
                    name: "GridGalleryOutlined",
                    style: { fontSize: 50 }
                  })
                }),
                /* @__PURE__ */ jsx("div", {
                  style: { textAlign: "center" },
                  children: t("D\u1EA1ng l\u01B0\u1EDBi")
                })
              ]
            })
          ]
        })
      }),
      /* @__PURE__ */ jsx(RangeSliderConfig, {
        propKey: PROP_KEY.ColumnCount,
        formItemProps: {
          label: t("S\u1ED1 c\u1ED9t")
        },
        sliderProps: { min: 1, max: 16 },
        separateDevice: true
      }),
      /* @__PURE__ */ jsx(RangeSliderConfig, {
        propKey: PROP_KEY.Gap,
        formItemProps: {
          label: t("Kho\u1EA3ng c\xE1ch gi\u1EEFa c\xE1c \u1EA3nh")
        },
        sliderProps: { min: 0, max: 64 },
        unitProps: { defaultValue: UnitEnum.pixel },
        separateDevice: true
      }),
      /* @__PURE__ */ jsx(SwitchConfig, {
        separateDevice: true,
        propKey: PROP_KEY.joinKey(PROP_KEY.ZoomPreview),
        formItemProps: {
          label: t("Ph\xF3ng to khi click \u1EA3nh"),
          description: t("Kh\xF4ng \xE1p d\u1EE5ng \u1EDF ch\u1EBF \u0111\u1ED9 ch\u1EC9nh s\u1EEDa")
        }
      })
    ]
  });
};
const LayoutSelectButton = styled(Button)(
  ({ type }) => `
  height: unset;
  margin-bottom: 0.5em;
  padding-top: 1em;
  padding-bottom: 1em;

  ${type === "default" ? "color: #82868B;" : ""}
`
);

export { GallerySetting };
