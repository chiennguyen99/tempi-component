'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../../i18n.js');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var propKey = require('../../../../constants/propKey.js');
var QuickSettingTabWrapper = require('../../../../core/QuickSettingTabWrapper/QuickSettingTabWrapper.js');
var ShadowConfig = require('../../../../configs/ShadowConfig/ShadowConfig.js');

const ButtonColorConfig = ({
  propKey: propKey$1,
  separateDevice
} = {}) => {
  const buttonStyleKey = propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.ButtonStyle);
  const content = () => /* @__PURE__ */ jsxRuntime.jsxs(QuickSettingTabWrapper.QuickSettingTabWrapper, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsxs(antd.Tabs.TabPane, {
        tab: i18n.t("N\u1EC1n"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
            propKey: propKey.PROP_KEY.joinKey(buttonStyleKey, propKey.PROP_KEY.BackgroundColor),
            formItemProps: {
              label: i18n.t("M\xE0u n\u1EC1n")
            },
            gradientPicker: true,
            separateDevice
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
            formItemProps: {
              label: i18n.t("M\xE0u khi di chu\u1ED9t")
            },
            propKey: propKey.PROP_KEY.joinKey(
              buttonStyleKey,
              propKey.PROP_KEY.HoverBackgroundColor
            ),
            gradientPicker: true,
            separateDevice
          })
        ]
      }, "1"),
      /* @__PURE__ */ jsxRuntime.jsxs(antd.Tabs.TabPane, {
        tab: i18n.t("Ch\u1EEF"),
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
            formItemProps: {
              label: i18n.t("M\xE0u ch\u1EEF")
            },
            propKey: propKey.PROP_KEY.joinKey(buttonStyleKey, propKey.PROP_KEY.Color),
            separateDevice
          }),
          /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
            formItemProps: {
              label: i18n.t("M\xE0u khi di chu\u1ED9t")
            },
            propKey: propKey.PROP_KEY.joinKey(buttonStyleKey, propKey.PROP_KEY.HoverColor),
            separateDevice
          })
        ]
      }, "2"),
      /* @__PURE__ */ jsxRuntime.jsx(antd.Tabs.TabPane, {
        tab: i18n.t("Vi\u1EC1n"),
        children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.BorderConfig, {
          separateDevice,
          propKey: buttonStyleKey
        })
      }, "3"),
      /* @__PURE__ */ jsxRuntime.jsx(antd.Tabs.TabPane, {
        tab: i18n.t("B\xF3ng"),
        children: /* @__PURE__ */ jsxRuntime.jsx(ShadowConfig.ShadowConfig, {
          propKey: propKey.PROP_KEY.joinKey(buttonStyleKey, propKey.PROP_KEY.Shadow),
          separateDevice
        })
      }, "4")
    ]
  });
  return /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
    content,
    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
      tooltip: i18n.t("M\xE0u kh\u1ED1i"),
      children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.Color16Regular, {})
    })
  });
};

exports.ButtonColorConfig = ButtonColorConfig;
