import { jsxs, jsx } from 'react/jsx-runtime';
import { t } from '../../../../i18n.es.js';
import { useState, useEffect } from 'react';
import { useProp, SwitchToShow, AlignmentConfig, InputNumberConfig } from '@tempi/core-editor';
import { UnitEnum } from '@tempi/core-renderer';
import { IconSettings } from '../../../../configs/IconSettings/IconSettings.es.js';
import { PROP_KEY } from '../../../../constants/propKey.es.js';

const IconButtonConfig = ({
  propKey,
  separateDevice
} = {}) => {
  const iconPropKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.IconConfig,
    PROP_KEY.Icon
  );
  const [icon, setIcon] = useProp(iconPropKey);
  const iconName = icon == null ? void 0 : icon.name;
  const [showIconConfig, setShowIconConfig] = useState(!!icon);
  const resetIcon = () => {
    setIcon(void 0);
  };
  useEffect(() => {
    setShowIconConfig(!!iconName);
  }, [iconName]);
  useEffect(() => {
    if (!showIconConfig)
      resetIcon();
  }, [showIconConfig]);
  return /* @__PURE__ */ jsxs(SwitchToShow, {
    formItemProps: { label: t("Hi\u1EC3n th\u1ECB bi\u1EC3u t\u01B0\u1EE3ng") },
    show: showIconConfig,
    setShow: setShowIconConfig,
    children: [
      /* @__PURE__ */ jsx(IconSettings, {
        propKey: iconPropKey,
        separateDevice
      }),
      /* @__PURE__ */ jsx(AlignmentConfig, {
        formItemProps: {
          label: t("V\u1ECB tr\xED")
        },
        buttonGroupProps: {
          listAlignment: ["left", "right"]
        },
        propKey: PROP_KEY.joinKey(
          propKey,
          PROP_KEY.IconConfig,
          PROP_KEY.Position
        ),
        separateDevice
      }),
      /* @__PURE__ */ jsx(InputNumberConfig, {
        propKey: PROP_KEY.joinKey(
          propKey,
          PROP_KEY.IconConfig,
          PROP_KEY.Spacing
        ),
        formItemProps: {
          label: t("Kho\u1EA3ng c\xE1ch")
        },
        unitProps: { defaultValue: UnitEnum.pixel },
        separateDevice
      })
    ]
  });
};

export { IconButtonConfig };
