import { SliderTypeEnum } from '../v1/type.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const convertOptionSliderV2ToV1 = (options) => {
  const _a = options, {
    items,
    gridCols,
    gridRows,
    arrows,
    arrowStyle,
    pagination,
    paginationStyle,
    autoplay,
    pauseOnHover,
    rewind,
    paginationColor
  } = _a, rest = __objRest(_a, [
    "items",
    "gridCols",
    "gridRows",
    "arrows",
    "arrowStyle",
    "pagination",
    "paginationStyle",
    "autoplay",
    "pauseOnHover",
    "rewind",
    "paginationColor"
  ]);
  const newValue = __spreadValues({
    type: SliderTypeEnum.product,
    items,
    slidesPerColumn: gridRows,
    slidesPerView: gridCols,
    navigation: arrows || !!arrowStyle,
    navigationStyle: arrowStyle,
    pagination: pagination || !!paginationStyle,
    paginationStyle,
    autoplay,
    loop: rewind,
    pauseOnMouseEnter: pauseOnHover,
    paginationColor,
    virtual: gridRows === 1
  }, rest);
  return Object.keys(newValue).filter((el) => newValue[el] !== void 0).reduce(
    (acc, curr) => __spreadProps(__spreadValues({}, acc), { [curr]: newValue[curr] }),
    {}
  );
};

export { convertOptionSliderV2ToV1 };
