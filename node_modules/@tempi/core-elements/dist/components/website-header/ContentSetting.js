'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var coreEditor = require('@tempi/core-editor');
var coreRenderer = require('@tempi/core-renderer');
var antd = require('antd');
var React = require('react');
var ButtonSetting = require('./ButtonSetting.js');
var LanguageSetting = require('./LanguageSetting.js');
var SearchSetting = require('./SearchSetting.js');
var propKey = require('../../constants/propKey.js');

const { Panel } = antd.Collapse;
const HeaderV2ContentSetting = () => {
  const [showLogo] = coreEditor.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.LogoConfig, propKey.PROP_KEY.Show),
    true
  );
  const [paddingTop] = coreEditor.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CommonStyle, propKey.PROP_KEY.Padding, propKey.PROP_KEY.Top),
    true
  );
  const [, setPaddingBottom] = coreEditor.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey.PROP_KEY.CommonStyle, propKey.PROP_KEY.Padding, propKey.PROP_KEY.Bottom),
    true
  );
  React.useEffect(() => {
    setPaddingBottom(paddingTop);
  }, [paddingTop]);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchConfig, {
        formItemProps: {
          label: i18n.t("G\u1EAFn \u0111\u1EA7u trang khi cu\u1ED9n xu\u1ED1ng")
        },
        propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.StickyTop),
        separateDevice: true
      }),
      /* @__PURE__ */ jsxRuntime.jsxs(antd.Collapse, {
        expandIconPosition: "end",
        bordered: false,
        children: [
          /* @__PURE__ */ jsxRuntime.jsxs(Panel, {
            header: "Menu",
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
                formItemProps: {
                  label: i18n.t("V\u1ECB tr\xED menu")
                },
                propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.MenuConfig, propKey.PROP_KEY.Align),
                separateDevice: true
              }),
              /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
                formItemProps: {
                  label: i18n.t("Kho\u1EA3ng c\xE1ch gi\u1EEFa c\xE1c menu")
                },
                propKey: propKey.PROP_KEY.joinKey(
                  propKey.PROP_KEY.MenuConfig,
                  propKey.PROP_KEY.CommonStyle,
                  propKey.PROP_KEY.ColumnGap
                ),
                separateDevice: true,
                sliderProps: {
                  min: 0,
                  max: 64
                },
                inputNumberProps: {
                  min: 0,
                  max: 64,
                  style: {
                    width: 100
                  }
                },
                unitProps: { defaultValue: coreRenderer.UnitEnum.pixel }
              }),
              /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
                formItemProps: {
                  label: i18n.t("Kho\u1EA3ng c\xE1ch tr\xEAn / d\u01B0\u1EDBi menu")
                },
                propKey: propKey.PROP_KEY.joinKey(
                  propKey.PROP_KEY.CommonStyle,
                  propKey.PROP_KEY.Padding,
                  propKey.PROP_KEY.Top
                ),
                inputNumberProps: {
                  min: 0,
                  max: 128,
                  style: {
                    width: 100
                  }
                },
                sliderProps: {
                  min: 0,
                  max: 128
                },
                unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
                separateDevice: true
              })
            ]
          }, "Menu"),
          /* @__PURE__ */ jsxRuntime.jsxs(Panel, {
            header: "Logo",
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SwitchConfig, {
                formItemProps: {
                  label: i18n.t("Hi\u1EC3n th\u1ECB Logo")
                },
                propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.LogoConfig, propKey.PROP_KEY.Show),
                separateDevice: true
              }),
              showLogo && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                  /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ImageConfig, {
                    propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.LogoConfig, propKey.PROP_KEY.Src),
                    widthPropKey: propKey.PROP_KEY.joinKey(
                      propKey.PROP_KEY.LogoConfig,
                      propKey.PROP_KEY.GoogleImageParams,
                      propKey.PROP_KEY.Width
                    ),
                    altPropKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.LogoConfig, propKey.PROP_KEY.Alt),
                    separateDevice: true
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
                    sliderProps: {
                      min: 30,
                      max: 350
                    },
                    formItemProps: {
                      label: i18n.t("Chi\u1EC1u r\u1ED9ng logo")
                    },
                    propKey: propKey.PROP_KEY.joinKey(
                      propKey.PROP_KEY.LogoConfig,
                      propKey.PROP_KEY.CommonStyle,
                      propKey.PROP_KEY.Width
                    ),
                    inputNumberProps: {
                      min: 30,
                      max: 350,
                      style: {
                        width: 100
                      }
                    },
                    unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
                    separateDevice: true
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(coreEditor.RangeSliderConfig, {
                    formItemProps: {
                      label: i18n.t("Kho\u1EA3ng c\xE1ch logo v\u1EDBi menu")
                    },
                    propKey: propKey.PROP_KEY.joinKey(
                      propKey.PROP_KEY.LogoConfig,
                      propKey.PROP_KEY.SpacingWithMenu
                    ),
                    sliderProps: {
                      min: 0,
                      max: 64
                    },
                    inputNumberProps: {
                      min: 0,
                      max: 64,
                      style: {
                        width: 100
                      }
                    },
                    unitProps: { defaultValue: coreRenderer.UnitEnum.pixel },
                    separateDevice: true
                  }),
                  /* @__PURE__ */ jsxRuntime.jsx(coreEditor.AlignmentConfig, {
                    formItemProps: {
                      label: i18n.t("V\u1ECB tr\xED logo")
                    },
                    propKey: propKey.PROP_KEY.joinKey(propKey.PROP_KEY.LogoConfig, propKey.PROP_KEY.Align),
                    separateDevice: true
                  })
                ]
              })
            ]
          }, "Logo"),
          /* @__PURE__ */ jsxRuntime.jsx(Panel, {
            header: i18n.t("N\xFAt k\xEAu g\u1ECDi h\xE0nh \u0111\u1ED9ng"),
            children: /* @__PURE__ */ jsxRuntime.jsx(ButtonSetting.ButtonSetting, {})
          }, "ActionButton"),
          /* @__PURE__ */ jsxRuntime.jsx(Panel, {
            header: i18n.t("N\xFAt chuy\u1EC3n \u0111\u1ED5i ng\xF4n ng\u1EEF"),
            children: /* @__PURE__ */ jsxRuntime.jsx(LanguageSetting.LanguageSetting, {})
          }, "LanguageSetting")
        ]
      }),
      /* @__PURE__ */ jsxRuntime.jsx(SearchSetting.SearchSetting, {})
    ]
  });
};

exports.HeaderV2ContentSetting = HeaderV2ContentSetting;
