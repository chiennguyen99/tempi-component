import { WebsiteMenu } from '@tempi/core-renderer';
import { BaseHeaderInterface, MenuTreeItem } from './type';
export interface HeaderGrid {
    gridArea: string;
    navigationGridTemplateColumns: string;
    padding?: string;
    paddingTop?: number;
    paddingRight?: number;
    paddingLeft?: number;
    paddingBottom?: number;
    width: number;
    logoGridRow: string;
    logoGridColumn: string;
    logoJustifySelf: string;
    logoSpacing: string;
    logoWidth: number;
    logoImageObjectPosition: string;
    leftLanguageSelectGridColumn: string;
    linksGridRow: string;
    linksGridColumn: string;
    navigationJustifySelf: string;
    menuItemSpacing: number;
    navigationTextAlign: string;
    menuColor: string;
    menuHoverColor: string;
    menuFontSize: string | number;
    menuFontStyle: string;
    menuFontWeight: string;
    menuTextDecoration: string | number;
    mobilePadding: string;
    mobilePaddingTop: number;
    mobilePaddingRight: number;
    mobilePaddingBottom: number;
    mobilePaddingLeft: number;
    mobileLogoWidth: number;
    mobileMenuItemSpacing: number;
    mobileNavigationGridTemplateColumns: string;
    mobileLogoGridRow: string;
    mobileLogoGridColumn: string;
    mobileLogoJustifySelf: string;
    mobileLogoImageObjectPosition: string;
    mobileLinksGridRow: string;
    mobileLinksGridColumn: string;
    mobileLogoSpacing: string;
    mobileNavigationTextAlign: string;
    mobileNavigationJustifySelf: string;
    mobileBackground: string | number;
    mobileDropdownBackgroundColor: string;
    backgroundOverlayOpacity: number;
}
export declare const calculateGrid: (props: BaseHeaderInterface) => HeaderGrid;
export declare const splitPaddingString: (paddingString: string) => any;
export declare const flattenToTreeMax2Level: (originMenu: WebsiteMenu[]) => MenuTreeItem[];
export declare const getFlattenTreeActiveMenu: (originMenu: WebsiteMenu[], activeSlug: string) => {
    children: WebsiteMenu[];
    id: string;
    name: string;
    target?: "SELF" | "BLANK";
    isHidden?: boolean;
    linkType?: "PAGE" | "LINK";
    linkPageId?: number;
    page?: import("@tempi/core-renderer").Page;
    parentId?: string;
    href?: string;
    nofollow?: boolean;
    iconUrl?: string;
    isActive?: boolean;
}[];
export declare const isLightColor: (input: string) => boolean;
//# sourceMappingURL=utils.d.ts.map