'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var styled = require('@emotion/styled');
var coreRenderer = require('@tempi/core-renderer');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const Header = styled__default["default"].header(({ commonStyle, headerHeight }) => {
  const _a = commonStyle, rest = __objRest(_a, ["padding"]);
  return `
    display: grid;
    grid-area: 1/1/-1/-1;
    grid-template-rows: 100%;
    grid-template-columns: 100%;
    width: 100%;
    transition: box-shadow 0.15s linear;
  
    &.sticky {
      position: fixed;
      top: 0;
      width: 100%;
      z-index: 100;
    }
    ${headerHeight ? `
    &.sticky + .placeholder{
      padding-bottom: ${headerHeight}px;
    }
    ` : ""}
    
    ${coreRenderer.getStyle(rest)}
  `;
});

exports.Header = Header;
