'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var styled = require('@emotion/styled');
var constants = require('../constants.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const ActionButton = styled__default["default"].div(({}) => {
  return `
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 16px;
    padding-left: 16px;

    div {
      margin: 0px;
    }

    @media screen and (max-width: ${constants.MOBILE_WIDTH}px){
      display: none;
    }
  `;
});
const ActionButtonMobile = styled__default["default"].div(
  ({ grid }) => {
    const { navigationTextAlign } = grid;
    let alignItems;
    switch (navigationTextAlign) {
      case "left":
        alignItems = "flex-start";
        break;
      case "right":
        alignItems = "flex-end";
        break;
      case "center":
        alignItems = "center";
        break;
    }
    return `
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 16px;
    @media screen and (min-width: ${constants.MOBILE_WIDTH}px){
      display: none;
    }

    div {
      // because buttonV2 has a wrapper flex, setting align-item in parent div has no value.
      justify-content: ${alignItems};
      margin: 0px;
    }
  `;
  }
);

exports.ActionButton = ActionButton;
exports.ActionButtonMobile = ActionButtonMobile;
