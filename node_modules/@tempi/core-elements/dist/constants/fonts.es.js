import { pbFontFamily, pbFontWeight } from '@tempi/core-renderer';
import { capitalize } from '../utils/capitalize.es.js';
import { getResponsiveAttrKey } from '../utils/getResponsiveAttrKey.es.js';

const fontFamilyOptions = pbFontFamily.map((ff) => ({
  label: ff,
  value: ff
}));
const fontWeightOptions = Object.entries(pbFontWeight).reduce((acc, cur) => {
  var _a;
  return [...acc, { label: capitalize(cur[0]), value: (_a = cur[1]) == null ? void 0 : _a.toString() }];
}, []);
const fontSizeOptions = [12, 14, 16, 18, 24, 32, 48, 64, 72].map(
  (ff) => ({
    label: ff,
    key: ff
  })
);
const textTransformOptions = [
  { label: "Capitalize", value: "capitalize" },
  { label: "Uppercase", value: "uppercase" },
  { label: "Lowercase", value: "lowercase" }
];
const textDecorationOptions = [
  { label: "Underline", value: "underline" },
  { label: "Overline", value: "overline" },
  { label: "Line Through", value: "line-through" }
];
const fontStyleOptions = [
  { label: "Normal", value: "normal" },
  { label: "Italic", value: "italic" },
  { label: "Oblique", value: "oblique" }
];
const fontVariantOptions = [
  { label: "Normal", value: "normal" },
  { label: "Small Caps", value: "small-caps" }
];
const TEXT_STYLE_KEY = {
  fontSize: "fontSize"
};
const RESPONSIVE_TEXT_STYLE_KEY = {
  fontSize: {
    desktop: getResponsiveAttrKey(TEXT_STYLE_KEY.fontSize, "desktop"),
    mobile: getResponsiveAttrKey(TEXT_STYLE_KEY.fontSize, "mobile")
  }
};
const getCommonTextCss = (allowResponsive) => {
  const { fontSize } = RESPONSIVE_TEXT_STYLE_KEY;
  return `
  *:not(.ProseMirror-trailingBreak):empty:after {
    content: "";
    display: inline-block;
  }

  ${allowResponsive ? `
  @media (min-width: 768px) {
    .fs-desktop {
      font-size: var(--${fontSize.desktop});
    }

    li {
      margin-left: var(--${fontSize.desktop}, 1rem);
    }
  }

  @media (max-width: 767px) {
    .fs-mobile {
      font-size: var(--${fontSize.mobile});
    }
    
    li {
      margin-left: var(--${fontSize.mobile}, 1rem);
    }
  }
    ` : `
      li {
        margin-left: 1rem;
      }
    `}
`;
};

export { RESPONSIVE_TEXT_STYLE_KEY, TEXT_STYLE_KEY, fontFamilyOptions, fontSizeOptions, fontStyleOptions, fontVariantOptions, fontWeightOptions, getCommonTextCss, textDecorationOptions, textTransformOptions };
