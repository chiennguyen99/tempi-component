'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var coreRenderer = require('@tempi/core-renderer');

const getNewPopupName = (nodes, query, incomingName) => {
  var _a, _b, _c, _d;
  let newPopupName = "";
  const allPopupIds = [
    ...new Set(
      (_a = nodes[coreRenderer.ROOT]) == null ? void 0 : _a.data.nodes.filter(
        (key) => {
          var _a2, _b2;
          return ((_b2 = (_a2 = nodes[key]) == null ? void 0 : _a2.data) == null ? void 0 : _b2.name) === "PopupEditorV1";
        }
      )
    )
  ];
  if (incomingName) {
    let numberOfCopy = 0;
    for (const id of allPopupIds) {
      const nodeName = (_d = (_c = (_b = query.node(id).get()) == null ? void 0 : _b.data) == null ? void 0 : _c.props) == null ? void 0 : _d.name;
      if (nodeName === incomingName || nodeName.includes(`${incomingName} - Copy`)) {
        numberOfCopy++;
      }
      newPopupName = `${incomingName}${numberOfCopy ? ` - Copy ${numberOfCopy > 1 ? `(${numberOfCopy})` : ""}` : ""}`;
    }
  } else {
    let maxPopupNumber = 0;
    allPopupIds.forEach((id) => {
      var _a2, _b2, _c2;
      const nodeName = (_c2 = (_b2 = (_a2 = query.node(id).get()) == null ? void 0 : _a2.data) == null ? void 0 : _b2.props) == null ? void 0 : _c2.name;
      if (nodeName.startsWith("POPUP")) {
        const nodeNameNumber = parseInt(nodeName.split("POPUP")[1], 10);
        if (nodeNameNumber > maxPopupNumber)
          maxPopupNumber = nodeNameNumber;
      }
    });
    newPopupName = `POPUP${maxPopupNumber + 1}`;
  }
  return newPopupName;
};

exports.getNewPopupName = getNewPopupName;
