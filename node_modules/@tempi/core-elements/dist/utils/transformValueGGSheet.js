'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var getPartialDateTimeTimeZone7 = require('./getPartialDateTimeTimeZone7.js');

const transformValuesGGSheet = (values, inputs) => {
  const formData = [];
  inputs.forEach((item) => {
    let value = values[item.name];
    if (item.type === "date" && !!values[item.name]) {
      const { year, month, day } = getPartialDateTimeTimeZone7.getPartialDateTimeTimeZone7(
        new Date(values[item.name])
      );
      value = `${day}-${month}-${year}`;
    }
    if (item.type === "datetime-local" && !!values[item.name]) {
      const { year, month, day, hour, minute, second } = getPartialDateTimeTimeZone7.getPartialDateTimeTimeZone7(new Date(values[item.name]));
      value = `${day}-${month}-${year} ${parseInt(hour) > 23 ? `00` : hour}:${minute}:${second}`;
    }
    if (item.type === "checkbox-group" && value === false || item.type === "radio-group" && value === null) {
      value = "";
    }
    formData.push({
      name: item.name,
      value: typeof value === "object" ? JSON.stringify(value) : value,
      type: item.type === "number" ? "number" : "string"
    });
    delete values[item.name];
  });
  Object.keys(values).forEach((el) => {
    if (values[el] != null && values[el] != void 0) {
      formData.push({
        name: el,
        value: values[el],
        type: "string"
      });
    }
  });
  return formData;
};

exports.transformValuesGGSheet = transformValuesGGSheet;
