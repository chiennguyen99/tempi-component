'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var constants = require('../configs/TipTapEditor/constants.js');

const updateTextAttribute = (commandProps, nodeTypes, attribute) => {
  const {
    commands,
    chain,
    state: { tr }
  } = commandProps;
  if (tr.getMeta(constants.APPLY_TO_NODE_BLOCK)) {
    return nodeTypes.filter(
      (type) => [
        constants.NODE_TYPES.listItem,
        constants.NODE_TYPES.heading,
        constants.NODE_TYPES.paragraph,
        constants.NODE_TYPES.textStyle
      ].includes(type)
    ).every((type) => {
      const appliedAttrs = attribute;
      if (type === constants.NODE_TYPES.textStyle) {
        for (const key in appliedAttrs) {
          appliedAttrs[key] = null;
        }
      }
      return chain().updateAttributes(type, appliedAttrs).setTextSelection({
        from: tr.selection.from,
        to: tr.selection.to
      }).run();
    });
  }
  return commands.setMark(constants.NODE_TYPES.textStyle, attribute);
};

exports.updateTextAttribute = updateTextAttribute;
