'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var React = require('react');
var icons = require('@tempi/icons');
var antd = require('antd');
var styled = require('@emotion/styled');
var getPropsIcon = require('../../utils/getPropsIcon.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const iconTypes = ["Fill", "Outline", "Color"];
const IconPopup = ({
  onClose,
  iconName,
  onSelectIcon
}) => {
  const [activeTab, setActiveTab] = React.useState(0);
  const [keyword, setKeyWord] = React.useState("");
  const onSearch = (event) => {
    setKeyWord(event.target.value);
  };
  const filterWithKeyword = (key) => {
    if (keyword)
      return new RegExp(keyword, "i").test(key);
    return true;
  };
  const filterDevIcon = (key) => !new RegExp("Dev", "i").test(key);
  const OutlinedIcons = React.useMemo(
    () => icons.LIST_ICONS.filter(
      (key) => !key.startsWith("Antd") && key.endsWith("Outlined") && filterWithKeyword(key)
    ),
    [keyword]
  );
  const FilledIcons = React.useMemo(
    () => icons.LIST_ICONS.filter(
      (key) => !key.startsWith("Antd") && key.endsWith("Filled") && filterWithKeyword(key) && filterDevIcon(key)
    ),
    [keyword]
  );
  const ColoredIcons = React.useMemo(
    () => icons.LIST_ICONS.filter(
      (key) => !key.startsWith("Antd") && key.endsWith("Colored") && filterWithKeyword(key)
    ),
    [keyword]
  );
  const IconTabs = [FilledIcons, OutlinedIcons, ColoredIcons];
  const handleClickIcon = (e) => {
    if (iconName === e) {
      onSelectIcon(null);
      return;
    }
    onSelectIcon(e);
    onClose();
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(Wrapper, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(StyledClose, {
        name: "CloseOutlined",
        style: { fontSize: 20 },
        onClick: onClose
      }),
      /* @__PURE__ */ jsxRuntime.jsx(TabHeader, {
        children: iconTypes.map((e, index) => /* @__PURE__ */ jsxRuntime.jsx(React__default["default"].Fragment, {
          children: /* @__PURE__ */ jsxRuntime.jsx(TabItem, {
            className: activeTab === index ? "active" : "",
            onClick: () => setActiveTab(index),
            children: /* @__PURE__ */ jsxRuntime.jsx(antd.Typography.Paragraph, {
              style: { marginBottom: 0, color: "inherit" },
              children: e
            })
          })
        }, index))
      }),
      /* @__PURE__ */ jsxRuntime.jsx(SearchInput, {
        value: keyword,
        onChange: onSearch,
        placeholder: i18n.t("T\xECm ki\u1EBFm bi\u1EC3u t\u01B0\u1EE3ng \u1EDF \u0111\xE2y")
      }),
      /* @__PURE__ */ jsxRuntime.jsx("div", {
        style: { height: 350 },
        children: /* @__PURE__ */ jsxRuntime.jsx(IconWrapper, {
          children: IconTabs[activeTab].length ? IconTabs[activeTab].map((e, index) => /* @__PURE__ */ jsxRuntime.jsx(StyledIcon, {
            className: iconName === e ? "active" : "",
            onClick: () => handleClickIcon(e),
            children: React__default["default"].createElement(icons.Icon, __spreadValues({
              name: e
            }, getPropsIcon.getPropsIcon({
              size: 24
            })))
          }, index)) : /* @__PURE__ */ jsxRuntime.jsx(antd.Empty, {
            style: { margin: "auto" }
          })
        })
      })
    ]
  });
};
const Wrapper = styled__default["default"].div`
  position: relative;
  padding: 1rem;
`;
const StyledClose = styled__default["default"](icons.Icon)`
  position: absolute;
  top: 1.3rem;
  right: 1rem;
  cursor: pointer;
`;
const TabHeader = styled__default["default"].div`
  display: flex;
  margin-left: 0.5rem;
  margin-bottom: 1rem;
`;
const TabItem = styled__default["default"].div(
  ({ theme }) => `
  padding: 4px 12px;
  border-radius: 999px;
  margin-right: 1rem;
  cursor: pointer;
  &.active {
    background: ${theme.colorPrimary} !important;
    color: var(--text-color-inverse);
  }
`
);
const SearchInput = styled__default["default"](antd.Input.Search)`
  padding-left: 0.5rem;
  padding-bottom: 1rem;
`;
const IconWrapper = styled__default["default"].div`
  width: 100%;
  height: 100%;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  overflow: auto;
`;
const StyledIcon = styled__default["default"].div(
  ({ theme }) => `
  width: 24px;
  height: 24px;
  padding: 0.5rem;
  border-radius: 0.5rem;
  border: 1px solid transparent;
  box-sizing: content-box;
  cursor: pointer;

  &:hover {
    border: 1px solid grey;
  }
  &.active {
    border: 1px solid ${theme.colorPrimary} !important;
  }
  > svg {
    margin: auto;
  }
`
);

exports.IconPopup = IconPopup;
