'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var coreEditor = require('@tempi/core-editor');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const RenderFloatingQuickSetting = ({ quickSetting, children }) => {
  const {
    query: { node },
    hoveredNodes,
    selectedNodes
  } = coreEditor.useEditor((state) => ({
    hoveredNodes: state.events.hovered,
    selectedNodes: state.events.selected
  }));
  const { allDescendants, isActive, isHover } = coreEditor.useNode(({ events, id }) => ({
    allDescendants: node(id).descendants(true),
    isActive: events.selected,
    isHover: events.hovered
  }));
  const showQuickSetting = () => {
    if (allDescendants.some((el) => selectedNodes.has(el)))
      return false;
    const hoveredChilds = allDescendants.some((el) => hoveredNodes.has(el));
    return hoveredChilds || isHover || isActive;
  };
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      showQuickSetting() && /* @__PURE__ */ jsxRuntime.jsx("div", {
        style: { position: "relative" },
        children: /* @__PURE__ */ jsxRuntime.jsx(Wrapper, {
          children: /* @__PURE__ */ jsxRuntime.jsx(QuickSettingWrapper, {
            children: quickSetting
          })
        })
      }),
      children
    ]
  });
};
const QuickSettingWrapper = styled__default["default"].div`
  height: 40px;
  background: ${(props) => props.theme.colorBgBase};
  box-shadow: ${(props) => props.theme.boxShadowSecondary};
  border-radius: 999px;
  display: flex;
  align-items: center;
`;
const Wrapper = styled__default["default"].div`
  position: absolute;
  top: 4px;
  right: 24px;
  z-index: 1000;
`;

exports.RenderFloatingQuickSetting = RenderFloatingQuickSetting;
