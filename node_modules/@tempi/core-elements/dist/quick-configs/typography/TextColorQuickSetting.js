'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var getEditorAttributeValue = require('../../utils/getEditorAttributeValue.js');

const TextColorQuickSetting = ({ editor }) => {
  const content = () => {
    return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
          formItemProps: {
            label: i18n.t("M\xE0u ch\u1EEF")
          },
          colorPickerProps: {
            color: getEditorAttributeValue.getEditorAttributeValue(editor, "color"),
            onChangeColor: (color) => {
              var _a, _b;
              (_b = (_a = editor == null ? void 0 : editor.commands) == null ? void 0 : _a.executeCmd) == null ? void 0 : _b.call(
                _a,
                ({ commands }) => commands.setColor(color)
              );
            }
          }
        }),
        /* @__PURE__ */ jsxRuntime.jsx(coreEditor.ColorPickerConfig, {
          formItemProps: {
            label: i18n.t("M\xE0u n\u1EC1n ch\u1EEF")
          },
          colorPickerProps: {
            color: getEditorAttributeValue.getEditorAttributeValue(editor, "backgroundColor"),
            onChangeColor: (backgroundColor) => {
              var _a, _b;
              (_b = (_a = editor == null ? void 0 : editor.commands) == null ? void 0 : _a.executeCmd) == null ? void 0 : _b.call(
                _a,
                ({ commands }) => commands.setBackgroundColor(backgroundColor)
              );
            }
          }
        })
      ]
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsx(coreEditor.SubQuickSetting, {
    content,
    children: /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
      tooltip: i18n.t("M\xE0u ch\u1EEF"),
      children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.BorderOutsideRegular, {
        fontSize: 16
      })
    })
  });
};

exports.TextColorQuickSetting = TextColorQuickSetting;
