'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');

const listAlignment = ["left", "center", "right", "justify"];
const TextAlignQuickSetting = ({
  editor
}) => {
  const iconMap = [
    reactIcons.TextAlignLeftRegular,
    reactIcons.TextAlignCenterRegular,
    reactIcons.TextAlignRightRegular,
    reactIcons.TextAlignJustifyRegular
  ];
  const renderIcon = () => {
    for (let i = 0; i < listAlignment.length; i++) {
      const textAlign = listAlignment[i];
      if (editor == null ? void 0 : editor.isActive({ textAlign })) {
        const Comp = iconMap[i];
        return /* @__PURE__ */ jsxRuntime.jsx(Comp, {});
      }
    }
    return /* @__PURE__ */ jsxRuntime.jsx(reactIcons.TextAlignLeftRegular, {});
  };
  const setTextAlign = (align) => {
    var _a, _b;
    (_b = (_a = editor == null ? void 0 : editor.commands) == null ? void 0 : _a.executeCmd) == null ? void 0 : _b.call(
      _a,
      ({ commands }) => commands.setTextAlign(align)
    );
  };
  const onClick = () => {
    const currentPos = listAlignment.findIndex(
      (val) => editor == null ? void 0 : editor.isActive({ textAlign: val })
    );
    setTextAlign(listAlignment[(currentPos + 1) % listAlignment.length]);
  };
  return /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
    onClick,
    children: renderIcon()
  });
};

exports.TextAlignQuickSetting = TextAlignQuickSetting;
