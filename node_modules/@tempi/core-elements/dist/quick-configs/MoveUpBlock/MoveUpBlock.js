'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');

const MoveUpBlock = () => {
  const { actions, query, getParent, getPrevNode } = coreEditor.useEditor();
  const { id } = coreEditor.useNode();
  const onMoveUp = () => {
    var _a, _b, _c;
    const parentId = getParent(id).id;
    const index = query.node(parentId).get().data.nodes.indexOf(id);
    const nodeIsFirstElement = index === 0;
    const prevNodeIsHeader = ((_c = (_b = (_a = getPrevNode(id)) == null ? void 0 : _a.data) == null ? void 0 : _b.props) == null ? void 0 : _c.type) === "HEADER";
    if (nodeIsFirstElement || prevNodeIsHeader)
      return;
    actions.move(id, parentId, index - 1);
    actions.selectNode();
  };
  return /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
    onClick: onMoveUp,
    tooltip: i18n.t("Di chuy\u1EC3n kh\u1ED1i l\xEAn tr\xEAn"),
    children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.ArrowSortUpRegular, {
      style: { fontSize: 16 }
    })
  });
};

exports.MoveUpBlock = MoveUpBlock;
