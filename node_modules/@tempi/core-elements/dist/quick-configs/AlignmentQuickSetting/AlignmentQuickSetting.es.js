import { jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { usePropSeparateDevice, QuickSettingButton } from '@tempi/core-editor';
import { TextAlignJustify20Regular, TextAlignRight16Regular, TextAlignCenter16Regular, TextAlignLeft16Regular } from '@fluentui/react-icons';

const AlignmentQuickSetting = ({
  propKey,
  listAlignment = ["left", "center", "right"],
  separateDevice
}) => {
  const [alignment, setAlignment] = usePropSeparateDevice(
    propKey,
    separateDevice
  );
  const renderIcon = () => {
    switch (alignment) {
      case "left":
        return /* @__PURE__ */ jsx(TextAlignLeft16Regular, {});
      case "flex-start":
        return /* @__PURE__ */ jsx(TextAlignLeft16Regular, {});
      case "center":
        return /* @__PURE__ */ jsx(TextAlignCenter16Regular, {});
      case "right":
        return /* @__PURE__ */ jsx(TextAlignRight16Regular, {});
      case "flex-end":
        return /* @__PURE__ */ jsx(TextAlignRight16Regular, {});
      case "justify":
        return /* @__PURE__ */ jsx(TextAlignJustify20Regular, {
          style: { width: 16, height: 16 }
        });
      case "space-between":
        return /* @__PURE__ */ jsx(TextAlignJustify20Regular, {
          style: { width: 16, height: 16 }
        });
      default:
        return /* @__PURE__ */ jsx(TextAlignJustify20Regular, {
          style: { width: 16, height: 16 }
        });
    }
  };
  const handleClickIcon = () => {
    if (!listAlignment.length)
      return;
    if (!alignment || !listAlignment.includes(alignment)) {
      setAlignment(listAlignment[0]);
      return;
    }
    const currentPos = listAlignment.findIndex((val) => val === alignment);
    if (currentPos < 0)
      return;
    setAlignment(listAlignment[(currentPos + 1) % listAlignment.length]);
  };
  return /* @__PURE__ */ jsx(QuickSettingButton, {
    tooltip: t("C\u0103n chi\u0309nh"),
    onClick: handleClickIcon,
    children: renderIcon()
  });
};

export { AlignmentQuickSetting };
