'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var reactIcons = require('@fluentui/react-icons');
var coreEditor = require('@tempi/core-editor');
var getNewPopupName = require('../../utils/getNewPopupName.js');
var propKey = require('../../constants/propKey.js');

const DuplicatePopup = ({
  duplicatedNode
}) => {
  const { query, nodes, duplicateNode, getSiblings } = coreEditor.useEditor((state) => ({
    nodes: state.nodes
  }));
  const { id, node, parentId } = coreEditor.useNode((node2) => ({
    node: node2,
    parentId: node2.data.parent
  }));
  const [popupName, setPopupName] = coreEditor.useProp(propKey.PROP_KEY.Name);
  return /* @__PURE__ */ jsxRuntime.jsx(coreEditor.QuickSettingButton, {
    tooltip: i18n.t("Nh\xE2n b\u1EA3n"),
    onClick: () => {
      const index = getSiblings(id).findIndex((el) => el === id);
      const newPopupName = getNewPopupName.getNewPopupName(nodes, query, popupName);
      setPopupName(newPopupName);
      duplicateNode(duplicatedNode || node, parentId, index);
    },
    children: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.Copy16Regular, {})
  });
};

exports.DuplicatePopup = DuplicatePopup;
