import { jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { Copy16Regular } from '@fluentui/react-icons';
import { useEditor, useNode, useProp, QuickSettingButton } from '@tempi/core-editor';
import { getNewPopupName } from '../../utils/getNewPopupName.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';

const DuplicatePopup = ({
  duplicatedNode
}) => {
  const { query, nodes, duplicateNode, getSiblings } = useEditor((state) => ({
    nodes: state.nodes
  }));
  const { id, node, parentId } = useNode((node2) => ({
    node: node2,
    parentId: node2.data.parent
  }));
  const [popupName, setPopupName] = useProp(PROP_KEY.Name);
  return /* @__PURE__ */ jsx(QuickSettingButton, {
    tooltip: t("Nh\xE2n b\u1EA3n"),
    onClick: () => {
      const index = getSiblings(id).findIndex((el) => el === id);
      const newPopupName = getNewPopupName(nodes, query, popupName);
      setPopupName(newPopupName);
      duplicateNode(duplicatedNode || node, parentId, index);
    },
    children: /* @__PURE__ */ jsx(Copy16Regular, {})
  });
};

export { DuplicatePopup };
