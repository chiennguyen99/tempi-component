'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var icons = require('@ant-design/icons');
var styled = require('@emotion/styled');
var coreEditor = require('@tempi/core-editor');
var React = require('react');
var ModalApiConfig = require('./ModalApiConfig.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const ApiConfig = ({ onSubmit, data, attributes = [] }) => {
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(coreEditor.FormItem, {
        label: i18n.t("Li\xEAn k\u1EBFt API"),
        children: /* @__PURE__ */ jsxRuntime.jsxs(StyledTextButton, {
          onClick: () => setIsModalOpen(true),
          children: [
            i18n.t("Ch\u1EC9nh s\u1EEDa"),
            /* @__PURE__ */ jsxRuntime.jsx(icons.EditOutlined, {})
          ]
        })
      }),
      /* @__PURE__ */ jsxRuntime.jsx(ModalApiConfig.ModalApiConfig, {
        data,
        onSubmit,
        isModalOpen,
        closeModal: () => setIsModalOpen(false),
        attributes
      })
    ]
  });
};
const StyledTextButton = styled__default["default"].div(
  ({ theme }) => `
  cursor: pointer;
  color: ${theme.colorPrimary} !important;
`
);

exports.ApiConfig = ApiConfig;
