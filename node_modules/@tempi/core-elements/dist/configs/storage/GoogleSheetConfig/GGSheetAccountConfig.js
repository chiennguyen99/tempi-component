'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../../i18n.js');
var icons = require('@ant-design/icons');
var styled = require('@emotion/styled');
var iconsDev = require('@tempi/icons-dev');
var coreEditor = require('@tempi/core-editor');
var antd = require('antd');
var React = require('react');
var getConfigPopupCenter = require('../../../utils/getConfigPopupCenter.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const { useToken } = antd.theme;
const { confirm, warn } = antd.Modal;
const GGSheetAccountConfig = ({
  value,
  onChange,
  handleFetchFormAccount,
  ggSheetsAccounts = []
}) => {
  const { authorizeGGSheet, deleteFormAccountById } = coreEditor.useBuilder();
  const [loading, setLoading] = React.useState(false);
  const refWaitingResponse = React.useRef(false);
  const { token: themeToken } = useToken();
  const confirmDelete = (ggSheetAccId, formAccountName) => {
    confirm({
      zIndex: 2001,
      title: /* @__PURE__ */ jsxRuntime.jsxs("div", {
        children: [
          i18n.t("X\xF3a t\xE0i kho\u1EA3n li\xEAn k\u1EBFt"),
          " ",
          /* @__PURE__ */ jsxRuntime.jsx("span", {
            style: { fontWeight: 700, color: themeToken.colorPrimary },
            children: formAccountName
          }),
          "?"
        ]
      }),
      okText: i18n.t("\u0110\u1ED3ng \xFD x\xF3a"),
      cancelText: i18n.t("common.cancel"),
      onOk() {
        if (!loading)
          removeGGSheetAccount(ggSheetAccId);
      },
      okButtonProps: {
        style: { backgroundColor: themeToken.colorPrimary },
        loading
      }
    });
  };
  const showWarningDeletedFormAccount = () => {
    warn({
      zIndex: 2001,
      okText: i18n.t("\u0110\xF3ng"),
      title: /* @__PURE__ */ jsxRuntime.jsx("div", {
        children: i18n.t("Li\xEAn k\u1EBFt Google Sheet \u0111\xE3 b\u1ECB x\xF3a, vui l\xF2ng ch\u1ECDn li\xEAn k\u1EBFt kh\xE1c!")
      })
    });
  };
  const removeGGSheetAccount = async (id) => {
    try {
      setLoading(true);
      await deleteFormAccountById(id);
      await handleFetchFormAccount((formAccounts) => {
        const curr = formAccounts.find((el) => el.value === value);
        if (!curr) {
          showWarningDeletedFormAccount();
        }
      });
    } finally {
      setLoading(false);
    }
  };
  const onChangeGoogleSheetAccount = async (id) => {
    if (id !== -1) {
      onChange(id);
    }
  };
  const handleAddNewGGSheetConnection = async () => {
    try {
      setLoading(true);
      const data = await authorizeGGSheet({});
      if (!data.granted) {
        refWaitingResponse.current = true;
        window.open(
          data.grantUrl,
          "Tempi",
          getConfigPopupCenter.getConfigPopupCenter({
            width: 450,
            height: 600
          })
        );
      }
    } finally {
      setLoading(false);
    }
  };
  const handleFinishAddNewConnection = async (authorizationCode) => {
    if (!refWaitingResponse.current)
      return;
    refWaitingResponse.current = false;
    try {
      setLoading(true);
      const body = {
        authorizationCode
      };
      const data = await authorizeGGSheet(body);
      if (data.granted) {
        onChange(data.formAccountId);
      }
    } finally {
      await handleFetchFormAccount();
      setLoading(false);
    }
  };
  const handlerMessage = (e) => {
    var _a;
    if ((_a = e == null ? void 0 : e.data) == null ? void 0 : _a.authorizationCode) {
      handleFinishAddNewConnection(e.data.authorizationCode);
    }
  };
  React.useEffect(() => {
    window.addEventListener("message", handlerMessage);
    return () => {
      window.removeEventListener("message", handlerMessage);
    };
  }, []);
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: (ggSheetsAccounts == null ? void 0 : ggSheetsAccounts.length) > 1 || !!value ? /* @__PURE__ */ jsxRuntime.jsx(StyledSelection, {
      style: { width: "100%" },
      dropdownClassName: "custom-dropdown-menu",
      getPopupContainer: (trigger) => trigger,
      loading,
      placeholder: i18n.t("Ch\u1ECDn t\xE0i kho\u1EA3n li\xEAn k\u1EBFt"),
      value,
      onChange: (value2) => onChangeGoogleSheetAccount(value2),
      onSelect: (value2) => {
        if (value2 === -1) {
          handleAddNewGGSheetConnection();
        }
      },
      children: ggSheetsAccounts.map((opt) => {
        if (opt.value === -1) {
          return /* @__PURE__ */ jsxRuntime.jsx(antd.Select.Option, {
            value: opt.value,
            children: /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
              block: true,
              size: "small",
              type: "link",
              icon: /* @__PURE__ */ jsxRuntime.jsx(icons.PlusOutlined, {}),
              style: {
                color: themeToken.colorPrimary
              },
              children: opt.label
            })
          }, opt.value);
        }
        return /* @__PURE__ */ jsxRuntime.jsx(antd.Select.Option, {
          value: opt.value,
          children: /* @__PURE__ */ jsxRuntime.jsxs(antd.Row, {
            justify: "space-between",
            align: "middle",
            style: { flexFlow: "row" },
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(antd.Col, {
                span: 22.5,
                style: { overflow: "hidden" },
                children: /* @__PURE__ */ jsxRuntime.jsxs(StyledLabelOption, {
                  children: [
                    /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
                      name: "GoogleSheetColored",
                      style: { marginRight: 4, fontSize: 20 }
                    }),
                    /* @__PURE__ */ jsxRuntime.jsx("label", {
                      children: opt.label
                    })
                  ]
                })
              }),
              opt.value !== 0 && /* @__PURE__ */ jsxRuntime.jsx(antd.Col, {
                span: 1.5,
                children: /* @__PURE__ */ jsxRuntime.jsx(icons.DeleteOutlined, {
                  onClick: (e) => {
                    e.stopPropagation();
                    confirmDelete(
                      opt.value.valueOf(),
                      opt.label.valueOf()
                    );
                  },
                  style: {
                    cursor: "pointer"
                  },
                  className: "icon-delete"
                })
              })
            ]
          })
        }, opt.value);
      })
    }) : /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(antd.Typography.Paragraph, {
          className: "mb-half",
          children: i18n.t(
            "B\u1EA1n c\u1EA7n li\xEAn k\u1EBFt v\u1EDBi t\xE0i kho\u1EA3n Google \u0111\u1EC3 l\u01B0u d\u1EEF li\u1EC7u v\u1EC1 Google Sheet"
          )
        }),
        /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
          onClick: () => handleAddNewGGSheetConnection(),
          loading,
          className: "d-flex align-items-center",
          icon: /* @__PURE__ */ jsxRuntime.jsx(iconsDev.AntdCustomIcon, {
            name: "GoogleLogoColored",
            style: { fontSize: 18 },
            className: "mr-half"
          }),
          children: i18n.t("Li\xEAn k\u1EBFt v\u1EDBi Google")
        })
      ]
    })
  });
};
const StyledSelection = styled__default["default"](antd.Select)`
  .ant-select-selection-item {
    .icon-delete {
      display: none !important;
    }
  }
`;
const StyledLabelOption = styled__default["default"].div`
  display: flex;
  align-items: center;
  label {
    width: cacl(100% - 24px);
    overflow: hidden;
  }
`;

exports.GGSheetAccountConfig = GGSheetAccountConfig;
