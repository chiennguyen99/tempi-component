import { jsx } from 'react/jsx-runtime';
import { t } from '../../../i18n.es.js';
import { Form, Modal, Input } from 'antd';
import { useEffect } from 'react';
import { useFrame } from 'react-frame-component';
import { FormAccountType } from '../../storage/type.es.js';
import { configStorageDataValidate } from '../../storage/ConfigStorageData.es.js';

const EmailConfigModal = ({
  open,
  onClose,
  handleSaveModal,
  loading,
  data
}) => {
  const { document: frameDocument } = useFrame();
  const [form] = Form.useForm();
  const onSubmit = async (value) => {
    const emailConfig = {
      type: FormAccountType.EMAIL,
      email: value == null ? void 0 : value.email
    };
    await handleSaveModal(emailConfig);
    onClose();
  };
  useEffect(() => {
    if (open) {
      form.setFieldsValue({ email: data == null ? void 0 : data.email });
    }
  }, [open]);
  return /* @__PURE__ */ jsx(Modal, {
    onCancel: onClose,
    open,
    title: t("L\u01B0u d\u1EEF li\u1EC7u v\u1EC1 Gmail"),
    okText: t("L\u01B0u"),
    destroyOnClose: true,
    cancelText: t("common.cancel"),
    getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
    onOk: () => form.submit(),
    confirmLoading: loading,
    zIndex: 1081,
    bodyStyle: {
      padding: "1rem 0"
    },
    okButtonProps: {
      htmlType: "submit",
      loading,
      disabled: loading
    },
    children: /* @__PURE__ */ jsx(Form, {
      form,
      layout: "vertical",
      onFinish: onSubmit,
      children: /* @__PURE__ */ jsx(Form.Item, {
        shouldUpdate: (prevValues, currentValues) => {
          return prevValues !== currentValues;
        },
        validateFirst: true,
        rules: configStorageDataValidate.email,
        name: "email",
        label: "Email",
        children: /* @__PURE__ */ jsx(Input, {
          ref: (input) => input && input.focus(),
          autoFocus: true,
          placeholder: t("Nh\u1EADp Email"),
          autoComplete: "off"
        })
      })
    })
  });
};

export { EmailConfigModal };
