import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import styled from '@emotion/styled';
import { ColorPickerConfig, InputNumberConfig } from '@tempi/core-editor';
import { PROP_KEY } from '../../constants/propKey.es.js';

const ShadowConfig = ({
  propKey,
  shadowProps = ["x", "y", "blur", "spread"],
  separateDevice
}) => {
  const props = shadowProps.map((property) => ({
    label: property,
    key: PROP_KEY.joinKey(propKey, property)
  }));
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(ColorPickerConfig, {
        formItemProps: { label: t("M\xE0u b\xF3ng") },
        propKey: `${propKey}.color`
      }),
      /* @__PURE__ */ jsx(InputGroup, {
        children: props.map(({ label, key }) => /* @__PURE__ */ jsxs(FormItem, {
          children: [
            /* @__PURE__ */ jsx(InputNumberConfig, {
              propKey: key,
              formItemProps: { style: { marginBottom: 0 } },
              separateDevice
            }),
            /* @__PURE__ */ jsx(Label, {
              children: label
            })
          ]
        }, key))
      })
    ]
  });
};
const InputGroup = styled.div`
  display: flex;
  max-width: 100%;
  height: 32px;
  margin-bottom: 28px;
  box-shadow: 0 2px 5px var(--box-shadow-color);
`;
const FormItem = styled.div`
  flex: 1;
  min-width: 0;
`;
const Label = styled.div`
  text-transform: capitalize;
  font-weight: 500;
  font-size: 12px;
  line-height: 16px;
  text-align: center;
  padding: 4px 4px 0;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
`;

export { ShadowConfig };
