import { Extension } from '@tiptap/core';
import Table from '@tiptap/extension-table';
import TableCell from '@tiptap/extension-table-cell';
import TableHeader from '@tiptap/extension-table-header';
import TableRow from '@tiptap/extension-table-row';
import TextAlign from '@tiptap/extension-text-align';
import TextStyle from '@tiptap/extension-text-style';
import StarterKit from '@tiptap/starter-kit';
import { NODE_TYPES } from '../constants.es.js';
import { BackgroundColor } from './background-color.es.js';
import { Bold } from './bold.es.js';
import { BulletList } from './bullet-list.es.js';
import { Color } from './color.es.js';
import { CustomCommands } from './custom-commands.es.js';
import { FontFamily } from './font-family.es.js';
import { FontSize } from './font-size.es.js';
import { FontWeight } from './font-weight.es.js';
import { LetterSpacing } from './letter-spacing.es.js';
import { LineHeight } from './line-height.es.js';
import { Link } from './link.es.js';
import { ListItem } from './list-item.es.js';
import { OrderedList } from './ordered-list.es.js';
import { TextTransform } from './text-transform.es.js';
import { Underline } from './underline.es.js';

const CustomKit = Extension.create({
  name: "customKit",
  addExtensions() {
    const extensions = [
      CustomCommands,
      FontFamily,
      FontSize,
      FontWeight,
      LetterSpacing,
      LineHeight,
      TextStyle
    ];
    const starterKitOptions = {};
    const {
      backgroundColor,
      bold,
      color,
      link,
      list,
      table,
      textAlign,
      textTransform,
      underline
    } = this.options;
    if (backgroundColor !== false) {
      extensions.push(BackgroundColor);
    }
    if (bold !== false) {
      extensions.push(Bold);
      starterKitOptions.bold = false;
    }
    if (color !== false) {
      extensions.push(Color);
    }
    if (link !== false) {
      extensions.push(Link);
    }
    if (list !== false) {
      extensions.push(BulletList, OrderedList, ListItem);
      starterKitOptions.bulletList = false;
      starterKitOptions.orderedList = false;
      starterKitOptions.listItem = false;
    }
    if (table !== false) {
      extensions.push(Table, TableHeader, TableRow, TableCell);
    }
    if (textAlign !== false) {
      extensions.push(
        TextAlign.configure({
          types: [NODE_TYPES.heading, NODE_TYPES.paragraph],
          defaultAlignment: "left"
        })
      );
    }
    if (textTransform !== false) {
      extensions.push(TextTransform);
    }
    if (underline !== false) {
      extensions.push(Underline);
    }
    extensions.push(StarterKit.configure(starterKitOptions));
    return extensions;
  }
});

export { CustomKit };
