import { Extension } from '@tiptap/core';
import { NODE_TYPES } from '../constants.es.js';
import { updateTextAttribute } from '../../../utils/updateTextAttribute.es.js';

const BackgroundColor = Extension.create({
  name: "backgroundColor",
  addOptions() {
    return {
      types: [
        NODE_TYPES.orderedList,
        NODE_TYPES.bulletList,
        NODE_TYPES.listItem,
        NODE_TYPES.heading,
        NODE_TYPES.paragraph,
        NODE_TYPES.textStyle
      ]
    };
  },
  addGlobalAttributes() {
    return [
      {
        types: this.options.types,
        attributes: {
          backgroundColor: {
            default: null,
            parseHTML: (element) => element.style.backgroundColor.replace(/['"]+/g, ""),
            renderHTML: (attributes) => {
              if (!attributes.backgroundColor) {
                return {};
              }
              return {
                style: `background-color: ${attributes.backgroundColor}`
              };
            }
          }
        }
      }
    ];
  },
  addCommands() {
    return {
      setBackgroundColor: (backgroundColor) => (commandProps) => {
        return updateTextAttribute(commandProps, this.options.types, {
          backgroundColor
        });
      }
    };
  }
});

export { BackgroundColor };
