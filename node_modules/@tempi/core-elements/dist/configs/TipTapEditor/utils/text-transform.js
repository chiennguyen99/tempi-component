'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@tiptap/core');
var constants = require('../constants.js');
var updateTextAttribute = require('../../../utils/updateTextAttribute.js');

const TextTransform = core.Extension.create({
  name: "textTransform",
  addOptions() {
    return {
      types: [
        constants.NODE_TYPES.orderedList,
        constants.NODE_TYPES.bulletList,
        constants.NODE_TYPES.listItem,
        constants.NODE_TYPES.heading,
        constants.NODE_TYPES.paragraph,
        constants.NODE_TYPES.textStyle
      ]
    };
  },
  addGlobalAttributes() {
    return [
      {
        types: this.options.types,
        attributes: {
          textTransform: {
            default: null,
            parseHTML: (element) => element.style.textTransform || null,
            renderHTML: (attributes) => {
              if (attributes.textTransform !== null) {
                return {
                  style: `text-transform: ${attributes.textTransform}`
                };
              }
            }
          }
        }
      }
    ];
  },
  addCommands() {
    return {
      setTextTransform: (textTransform) => (commandProps) => {
        return updateTextAttribute.updateTextAttribute(commandProps, this.options.types, {
          textTransform
        });
      }
    };
  }
});

exports.TextTransform = TextTransform;
