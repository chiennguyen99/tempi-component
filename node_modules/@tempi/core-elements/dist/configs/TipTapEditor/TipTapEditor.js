import { __rest } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import { EditorContent } from './components';
import { useCustomTiptap } from './hooks';
import { CustomKit } from './utils';
export const TipTapEditor = (_a) => {
    var { propKey, children, isActive = true } = _a, rest = __rest(_a, ["propKey", "children", "isActive"]);
    const { editor, isEditable, setIsEditable } = useCustomTiptap({
        editorOptions: {
            extensions: [
                CustomKit.configure({
                    list: false,
                }),
            ],
            onFocus: ({ editor }) => {
                editor.commands.focus('end');
            },
        },
        isActive,
    }, propKey);
    return (_jsx(EditorContent, Object.assign({ editor: editor, isEditable: isEditable, setIsEditable: setIsEditable }, rest, { children: children })));
};
