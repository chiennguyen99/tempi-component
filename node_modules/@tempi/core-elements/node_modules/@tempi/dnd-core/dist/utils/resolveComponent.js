'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var dndUtils = require('@tempi/dnd-utils');
var invariant = require('tiny-invariant');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var invariant__default = /*#__PURE__*/_interopDefaultLegacy(invariant);

const resolveComponent = (resolver, comp) => {
  const componentName = comp.name || comp.displayName;
  const getNameInResolver = () => {
    if (resolver[componentName]) {
      return componentName;
    }
    for (let i = 0; i < Object.keys(resolver).length; i++) {
      const name = Object.keys(resolver)[i];
      const fn = resolver[name];
      if (fn === comp) {
        return name;
      }
    }
    if (typeof comp === "string") {
      return comp;
    }
  };
  const resolvedName = getNameInResolver();
  invariant__default["default"](
    resolvedName,
    dndUtils.ERROR_NOT_IN_RESOLVER.replace("%node_type%", componentName)
  );
  return resolvedName;
};

exports.resolveComponent = resolveComponent;
