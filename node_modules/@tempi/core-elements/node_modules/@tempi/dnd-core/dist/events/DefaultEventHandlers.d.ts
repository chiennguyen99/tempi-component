import React from 'react';
import { CoreEventHandlers, CreateHandlerOptions } from './CoreEventHandlers';
import { Positioner } from './Positioner';
import { NodeId, DragTarget, NodeTree } from '../interfaces';
export type DefaultEventHandlersOptions = {
    isMultiSelectEnabled: (e: MouseEvent) => boolean;
};
export declare class DefaultEventHandlers<O = {}> extends CoreEventHandlers<DefaultEventHandlersOptions & O> {
    static forceSingleDragShadow: boolean;
    draggedElementShadow: HTMLElement;
    dragTarget: DragTarget;
    positioner: Positioner | null;
    currentSelectedElementIds: any[];
    onDisable(): void;
    handlers(): {
        connect: (el: HTMLElement, id: NodeId) => () => void;
        select: (el: HTMLElement, id: NodeId) => () => void;
        hover: (el: HTMLElement, id: NodeId) => () => void;
        drop: (el: HTMLElement, targetId: NodeId) => () => void;
        drag: (el: HTMLElement, id: NodeId) => () => void;
        create: (el: HTMLElement, userElement: React.ReactElement | (() => NodeTree | React.ReactElement), options?: Partial<CreateHandlerOptions>) => () => void;
    };
    private dropElement;
}
//# sourceMappingURL=DefaultEventHandlers.d.ts.map