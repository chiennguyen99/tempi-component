'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var antd = require('antd');
var React = require('react');
var UnitConfig = require('../UnitConfig/UnitConfig.js');
var FormItem = require('../../components/FormItem/FormItem.js');
var usePropSeparateDevice = require('../../hooks/usePropSeparateDevice.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const InputNumberConfig = (_a) => {
  var _b = _a, {
    formItemProps,
    inputNumberProps
  } = _b, rest = __objRest(_b, [
    "formItemProps",
    "inputNumberProps"
  ]);
  return /* @__PURE__ */ jsxRuntime.jsx(FormItem.FormItem, __spreadProps(__spreadValues({}, formItemProps), {
    children: /* @__PURE__ */ jsxRuntime.jsx(InputNumber, __spreadValues(__spreadValues({}, rest), inputNumberProps))
  }));
};
const InputNumber = (_c) => {
  var _d = _c, {
    propKey,
    placeholder,
    unitProps = {},
    usePropOptions,
    onChange: customOnChange,
    separateDevice
  } = _d, rest = __objRest(_d, [
    "propKey",
    "placeholder",
    "unitProps",
    "usePropOptions",
    "onChange",
    "separateDevice"
  ]);
  const { defaultValue, options } = unitProps;
  const [prop, setProp] = usePropSeparateDevice.usePropSeparateDevice(
    propKey,
    separateDevice,
    usePropOptions
  );
  const inputRef = React.useRef();
  const onChange = (value) => {
    if (customOnChange) {
      customOnChange(value);
    } else {
      if (value === null)
        setProp(void 0);
      else
        setProp(value);
    }
  };
  React.useEffect(() => {
    if ((rest == null ? void 0 : rest.defaultValue) && !prop) {
      setProp(rest.defaultValue);
    }
  }, []);
  const commonInputProps = __spreadValues({
    ref: inputRef,
    value: prop,
    onChange,
    placeholder: placeholder || "0"
  }, rest);
  if (options == null ? void 0 : options.length) {
    return /* @__PURE__ */ jsxRuntime.jsxs(antd.Input.Group, {
      style: { width: "unset" },
      className: "d-flex align-items-center",
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(StyledAntInputNumber, __spreadValues({
          style: { width: 100 }
        }, commonInputProps)),
        /* @__PURE__ */ jsxRuntime.jsx(UnitConfig.UnitConfig, __spreadValues({}, unitProps))
      ]
    });
  }
  return /* @__PURE__ */ jsxRuntime.jsx(StyledAntInputNumber, __spreadValues(__spreadValues({}, commonInputProps), defaultValue && { addonAfter: defaultValue }));
};
const StyledAntInputNumber = styled__default["default"](antd.InputNumber)`
  width: 140px;
  border-radius: 4px !important;

  .ant-input-number-input {
    &:hover {
      //cursor: ew-resize;
    }
  }
`;

exports.InputNumber = InputNumber;
exports.InputNumberConfig = InputNumberConfig;
