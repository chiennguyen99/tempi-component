import { jsx, jsxs } from 'react/jsx-runtime';
import styled from '@emotion/styled';
import { Row, Col, Button } from 'antd';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';

const CustomRadioConfig = ({
  propKey,
  seperateDevice,
  formItemProps,
  options
}) => {
  const [value, setValue] = usePropSeparateDevice(propKey, seperateDevice);
  return /* @__PURE__ */ jsx(FormItem, {
    layout: "vertical",
    label: formItemProps == null ? void 0 : formItemProps.label,
    children: /* @__PURE__ */ jsx(Row, {
      gutter: 16,
      children: options.map((option, index) => /* @__PURE__ */ jsxs(Col, {
        span: Math.round(24 / options.length),
        children: [
          /* @__PURE__ */ jsx(LayoutSelectButton, {
            block: true,
            type: value === option.value ? "primary" : "default",
            onClick: () => setValue(option.value),
            children: option.children
          }),
          !!(option == null ? void 0 : option.label) && /* @__PURE__ */ jsx("div", {
            style: { textAlign: "center" },
            children: option == null ? void 0 : option.label
          })
        ]
      }, index))
    })
  });
};
const LayoutSelectButton = styled(Button)(
  ({ type }) => `
    height: unset;
    margin-bottom: 0.5em;
    padding-top: 1em;
    padding-bottom: 1em;
  
    ${type === "default" ? "color: #82868B;" : ""}
  `
);

export { CustomRadioConfig };
