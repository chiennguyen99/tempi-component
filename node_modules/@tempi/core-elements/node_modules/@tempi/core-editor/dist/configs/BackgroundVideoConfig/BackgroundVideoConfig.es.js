import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { UnitEnum } from '@tempi/core-renderer';
import { useEffect } from 'react';
import { VideoConfig } from '../VideoConfig/VideoConfig.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { RangeSliderConfig } from '../RangeSliderConfig/RangeSliderConfig.es.js';
import { percentPropFormatter } from '../../utils/percentPropFormatter.es.js';
import { percentPropParser } from '../../utils/percentPropParser.es.js';
import { SelectConfig } from '../SelectConfig/SelectConfig.es.js';

const BackgroundVideoConfig = ({
  propKey = PROP_KEY.CommonStyle,
  separateDevice
}) => {
  const youtubeVideoKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.BackgroundVideo,
    PROP_KEY.Src
  );
  const uploadVideoKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.BackgroundVideo,
    PROP_KEY.UploadSrc
  );
  const overlayKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.BackgroundVideo,
    PROP_KEY.DefaultOverlay
  );
  const objectFitKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.BackgroundVideo,
    PROP_KEY.ObjectFit
  );
  const [uploadUrl] = usePropSeparateDevice(uploadVideoKey, separateDevice);
  const [youtubeVideo] = usePropSeparateDevice(youtubeVideoKey, separateDevice);
  const [overlay, setOverlay] = usePropSeparateDevice(
    overlayKey,
    separateDevice
  );
  useEffect(() => {
    if (!uploadUrl && !youtubeVideo && overlay) {
      setOverlay(void 0);
    }
  }, [uploadUrl, youtubeVideo]);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(VideoConfig, {
        youtubeVideoPropKey: youtubeVideoKey,
        uploadVideoPropKey: uploadVideoKey
      }),
      /* @__PURE__ */ jsx("div", {
        style: { height: "1rem", display: "block" }
      }),
      /* @__PURE__ */ jsx(RangeSliderConfig, {
        propKey: overlayKey,
        separateDevice,
        formItemProps: { label: t("\u0110\u1ED9 m\u1EDD l\u1EDBp ph\u1EE7 n\u1EC1n") },
        sliderProps: {
          max: 100,
          min: 0,
          defaultValue: 0
        },
        usePropOptions: {
          formatter: percentPropFormatter,
          parser: percentPropParser
        },
        unitProps: { defaultValue: UnitEnum.percent }
      }),
      /* @__PURE__ */ jsx("div", {
        style: { height: "1rem", display: "block" }
      }),
      !!uploadUrl && /* @__PURE__ */ jsx(SelectConfig, {
        separateDevice,
        propKey: objectFitKey,
        formItemProps: {
          label: t("Object-fit"),
          layout: "horizontal"
        },
        selectProps: {
          defaultValue: "fill",
          allowClear: false
        },
        options: [
          {
            label: t("Cover"),
            value: "cover"
          },
          {
            label: t("Fill"),
            value: "fill"
          },
          {
            label: t("Contain"),
            value: "contain"
          },
          {
            label: t("Scale down"),
            value: "scale-down"
          },
          {
            label: t("Unset"),
            value: "unset"
          }
        ]
      })
    ]
  });
};

export { BackgroundVideoConfig };
