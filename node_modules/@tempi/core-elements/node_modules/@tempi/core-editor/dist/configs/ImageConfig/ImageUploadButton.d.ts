import { ReactElement } from 'react';
import { ImageUploadProps } from './ImageUpload';
import { Image as ImageInterface } from '@tempi/core-renderer';
import { CropProps } from './ImageUpload';
type ImageUploadButtonProps<T> = Pick<ImageUploadProps, 'accept' | 'beforeUpload' | 'listType' | 'className' | 'multiple' | 'layout'> & CropProps & {
    imagePropKey?: string;
    widthPropKey?: string;
    placeholder?: ReactElement;
    deleteImage?: () => void;
    separateDevice?: boolean;
    defaultNewImage?: T;
    showButtonUpload?: boolean;
    stateImageUpload?: {
        image?: string | T;
        setImage?: (img: string | T) => void;
        setWidth?: (w: number) => void;
    };
};
export declare const ImageUploadButton: <T extends ImageInterface>({ multiple, imagePropKey, widthPropKey, listType, placeholder, deleteImage, separateDevice, layout, defaultNewImage, showButtonUpload, stateImageUpload, ...rest }: ImageUploadButtonProps<T>) => JSX.Element;
export {};
//# sourceMappingURL=ImageUploadButton.d.ts.map