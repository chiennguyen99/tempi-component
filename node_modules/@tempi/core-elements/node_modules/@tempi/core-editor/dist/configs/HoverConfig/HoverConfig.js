'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var coreRenderer = require('@tempi/core-renderer');
var ColorPickerConfig = require('../ColorPickerConfig/ColorPickerConfig.js');
var propKey = require('../../constants/propKey.js');
var InputNumberConfig = require('../InputNumberConfig/InputNumberConfig.js');

const HoverConfig = ({
  propKey: propKey$1 = propKey.PROP_KEY.CommonStyle,
  separateDevice
}) => {
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(ColorPickerConfig.ColorPickerConfig, {
        separateDevice,
        propKey: propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.HoverBorderColor),
        formItemProps: { label: i18n.t("M\xE0u vi\u1EC1n") }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(ColorPickerConfig.ColorPickerConfig, {
        separateDevice,
        propKey: propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.HoverBackgroundColor),
        formItemProps: { label: i18n.t("M\xE0u n\u1EC1n") },
        gradientPicker: true
      }),
      /* @__PURE__ */ jsxRuntime.jsx(ColorPickerConfig.ColorPickerConfig, {
        separateDevice,
        propKey: propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.HoverColor),
        formItemProps: { label: i18n.t("M\xE0u ch\u1EEF") }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(InputNumberConfig.InputNumberConfig, {
        separateDevice,
        propKey: propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.HoverTransparent),
        formItemProps: {
          label: i18n.t("Trong su\u1ED1t")
        },
        inputNumberProps: {
          min: 0,
          max: 100,
          placeholder: "100"
        },
        unitProps: { defaultValue: coreRenderer.UnitEnum.percent }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(InputNumberConfig.InputNumberConfig, {
        separateDevice,
        propKey: propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.HoverZoom),
        formItemProps: {
          label: i18n.t("Ph\xF3ng to")
        },
        inputNumberProps: {
          min: 0,
          placeholder: "100"
        },
        unitProps: { defaultValue: coreRenderer.UnitEnum.percent }
      })
    ]
  });
};

exports.HoverConfig = HoverConfig;
