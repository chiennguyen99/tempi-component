import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { t } from '../../i18n.es.js';
import { UnitEnum } from '@tempi/core-renderer';
import { useEffect } from 'react';
import { OverlayConfig } from '../OverlayConfig/OverlayConfig.es.js';
import { BackgroundPositionConfig } from '../BackgroundPositionConfig/BackgroundPositionConfig.es.js';
import { percentPropFormatter } from '../../utils/percentPropFormatter.es.js';
import { percentPropParser } from '../../utils/percentPropParser.es.js';
import { PROP_KEY } from '../../constants/propKey.es.js';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { ImageConfig } from '../ImageConfig/ImageConfig.es.js';
import { InputNumberConfig } from '../InputNumberConfig/InputNumberConfig.es.js';
import { SelectConfig } from '../SelectConfig/SelectConfig.es.js';

const BackgroundImageConfig = ({
  propKey = PROP_KEY.CommonStyle,
  separateDevice,
  allowConfingMarqueeBgImage = false
}) => {
  const bgImageKey = PROP_KEY.joinKey(propKey, PROP_KEY.BackgroundImage);
  const bgImageWidthKey = PROP_KEY.joinKey(
    propKey,
    PROP_KEY.BackgroundImageWidth
  );
  const [backgroundImage] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BackgroundImage),
    separateDevice
  );
  const [bgImageSize, setBgImageSize] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BackgroundSize),
    separateDevice
  );
  const [bgImageRepeat, setBgImageRepeat] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BackgroundRepeat),
    separateDevice
  );
  const defaultOverlayKey = PROP_KEY.joinKey(propKey, PROP_KEY.DefaultOverlay);
  const [backgroundOverlay] = usePropSeparateDevice(
    PROP_KEY.joinKey(propKey, PROP_KEY.BackgroundOverlay),
    separateDevice
  );
  const [image] = usePropSeparateDevice(bgImageKey, separateDevice);
  const [overLay, setOverlay] = usePropSeparateDevice(
    defaultOverlayKey,
    separateDevice
  );
  useEffect(() => {
    if (!bgImageSize)
      setBgImageSize("cover");
    if (!bgImageRepeat)
      setBgImageRepeat("no-repeat");
  }, []);
  useEffect(() => {
    if (!image && overLay) {
      setOverlay(void 0);
    }
  }, [image]);
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(ImageConfig, {
        propKey: bgImageKey,
        widthPropKey: bgImageWidthKey,
        separateDevice,
        layout: "vertical"
      }),
      !!backgroundOverlay && /* @__PURE__ */ jsx(OverlayConfig, {
        separateDevice
      }),
      backgroundImage && /* @__PURE__ */ jsxs(Fragment, {
        children: [
          /* @__PURE__ */ jsx(BackgroundPositionConfig, {
            propKey: PROP_KEY.joinKey(propKey, PROP_KEY.BackgroundPosition),
            separateDevice
          }),
          /* @__PURE__ */ jsx(InputNumberConfig, {
            propKey: defaultOverlayKey,
            separateDevice,
            unitProps: { defaultValue: UnitEnum.percent },
            inputNumberProps: { min: 0, max: 100, defaultValue: 0 },
            formItemProps: { label: t("\u0110\u1ED9 m\u1EDD l\u1EDBp ph\u1EE7 n\u1EC1n") },
            usePropOptions: {
              formatter: percentPropFormatter,
              parser: percentPropParser
            }
          }),
          allowConfingMarqueeBgImage && /* @__PURE__ */ jsx(SelectConfig, {
            separateDevice,
            formItemProps: {
              label: t("Hi\u1EC7u \u1EE9ng di chuy\u1EC3n"),
              layout: "vertical"
            },
            selectProps: {
              placeholder: t("Ch\u1ECDn hi\u1EC7u \u1EE9ng di chuy\u1EC3n \u1EA3nh n\u1EC1n"),
              style: { width: "100%" }
            },
            options: [
              {
                label: t("Ch\u1EA1y theo chi\u1EC1u ngang"),
                value: "horizontal"
              },
              {
                label: t("Ch\u1EA1y theo chi\u1EC1u d\u1ECDc"),
                value: "vertical"
              }
            ],
            propKey: PROP_KEY.joinKey(
              propKey,
              PROP_KEY.BackgroundMarqueeDirection
            )
          })
        ]
      })
    ]
  });
};

export { BackgroundImageConfig };
