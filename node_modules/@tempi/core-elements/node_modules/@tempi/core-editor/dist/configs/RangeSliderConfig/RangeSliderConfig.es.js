import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { Row, Col, Slider } from 'antd';
import { useEffect } from 'react';
import { InputNumber } from '../InputNumberConfig/InputNumberConfig.es.js';
import { usePropSeparateDevice } from '../../hooks/usePropSeparateDevice.es.js';
import { useProp } from '../../hooks/useProp.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const RangeSliderConfig = (props) => {
  const {
    propKey,
    separateDevice,
    usePropOptions,
    formItemProps,
    inputNumberProps,
    showInput = true,
    unitProps,
    className,
    sliderProps
  } = props;
  const _a = sliderProps || {}, { defaultValue } = _a, rest = __objRest(_a, ["defaultValue"]);
  const [prop, setProp] = usePropSeparateDevice(
    propKey,
    separateDevice,
    usePropOptions
  );
  const [unit, setUnit] = useProp(unitProps == null ? void 0 : unitProps.propKey);
  useEffect(() => {
    if (typeof defaultValue !== "undefined" && typeof prop === "undefined") {
      setProp(defaultValue);
    }
    if ((unitProps == null ? void 0 : unitProps.propKey) && (unitProps == null ? void 0 : unitProps.defaultValue) && !unit && setUnit) {
      setUnit(unitProps == null ? void 0 : unitProps.defaultValue);
    }
  }, []);
  const onChange = (value) => {
    if (value === null)
      setProp(void 0);
    else
      setProp(value);
  };
  const getInputNumberWidth = () => {
    if ((unitProps == null ? void 0 : unitProps.options) && (unitProps == null ? void 0 : unitProps.options.length) > 0)
      return 60;
    if (unitProps)
      return 95;
    return 60;
  };
  return /* @__PURE__ */ jsx(FormItem, __spreadProps(__spreadValues({}, formItemProps), {
    layout: "vertical",
    children: /* @__PURE__ */ jsxs(Row, {
      gutter: 16,
      style: { alignItems: "center" },
      children: [
        /* @__PURE__ */ jsx(Col, {
          style: { flexGrow: 1 },
          children: /* @__PURE__ */ jsx(Slider, __spreadValues({
            className,
            value: prop,
            onChange
          }, rest))
        }),
        /* @__PURE__ */ jsx(Col, {
          children: showInput ? /* @__PURE__ */ jsx(InputNumber, __spreadProps(__spreadValues(__spreadValues({
            value: prop,
            unitProps,
            onChange
          }, inputNumberProps), rest), {
            style: {
              width: getInputNumberWidth()
            },
            controls: false
          })) : /* @__PURE__ */ jsxs(Fragment, {
            children: [
              prop != null ? prop : rest == null ? void 0 : rest.value,
              unitProps == null ? void 0 : unitProps.defaultValue
            ]
          })
        })
      ]
    })
  }));
};

export { RangeSliderConfig };
