'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var React = require('react');
var coreRenderer = require('@tempi/core-renderer');
var propKey = require('../../constants/propKey.js');
var usePropSeparateDevice = require('../../hooks/usePropSeparateDevice.js');
var InputConfig = require('../InputConfig/InputConfig.js');
var SelectConfig = require('../SelectConfig/SelectConfig.js');
var InputNumberConfig = require('../InputNumberConfig/InputNumberConfig.js');
var FormItem = require('../../components/FormItem/FormItem.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const AceEditor = React__default["default"].lazy(() => Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require('react-ace')); }));
const optionTrackingName = [
  {
    label: "CompleteRegistration",
    value: "CompleteRegistration"
  },
  {
    label: "Purchase",
    value: "Purchase"
  },
  {
    label: "Lead",
    value: "Lead"
  }
];
const TrackingConfig = ({
  propKey: propKey$1 = propKey.PROP_KEY.Event,
  config = "event",
  separateDevice
}) => {
  const trackingEventNamePropKey = propKey.PROP_KEY.joinKey(
    propKey$1,
    propKey.PROP_KEY.TrackingEventName
  );
  const trackingConversionValuePropKey = propKey.PROP_KEY.joinKey(
    propKey$1,
    propKey.PROP_KEY.ConversionValue
  );
  const idGoogleAdsPropKey = propKey.PROP_KEY.joinKey(
    propKey$1,
    propKey.PROP_KEY.ConversionGGAdsId
  );
  const labelGoogleAdsPropKey = propKey.PROP_KEY.joinKey(
    propKey$1,
    propKey.PROP_KEY.ConversionGGAdsLabel
  );
  const scriptPropKey = propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.ScriptCustom);
  const [script, setScript] = usePropSeparateDevice.usePropSeparateDevice(
    scriptPropKey,
    separateDevice
  );
  const [aceEditor, setAceEditor] = React.useState(null);
  React.useEffect(() => {
    var _a, _b;
    (_b = (_a = aceEditor == null ? void 0 : aceEditor.editor) == null ? void 0 : _a.renderer) == null ? void 0 : _b.attachToShadowRoot();
    return () => {
      var _a2, _b2;
      (_b2 = (_a2 = aceEditor == null ? void 0 : aceEditor.editor) == null ? void 0 : _a2.renderer) == null ? void 0 : _b2.attachToShadowRoot();
    };
  });
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      config === "event" && /* @__PURE__ */ jsxRuntime.jsx(InputConfig.InputConfig, {
        separateDevice,
        propKey: trackingEventNamePropKey,
        formItemProps: {
          label: i18n.t("T\xEAn s\u1EF1 ki\u1EC7n FB/GA"),
          style: {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            marginBottom: "0.5rem"
          }
        },
        inputProps: {
          placeholder: i18n.t("Nh\u1EADp t\xEAn s\u1EF1 ki\u1EC7n"),
          style: { width: "180px" }
        }
      }),
      config === "form" && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          /* @__PURE__ */ jsxRuntime.jsx(SelectConfig.SelectConfig, {
            separateDevice,
            propKey: trackingEventNamePropKey,
            options: optionTrackingName,
            formItemProps: {
              label: i18n.t("M\xE3 chuy\u1EC3n \u0111\u1ED5i FB/GA")
            },
            selectProps: {
              placeholder: i18n.t("Ch\u1ECDn m\xE3 chuy\u1EC3n \u0111\u1ED5i"),
              allowClear: true
            }
          }),
          /* @__PURE__ */ jsxRuntime.jsx(InputNumberConfig.InputNumberConfig, {
            separateDevice,
            propKey: trackingConversionValuePropKey,
            formItemProps: {
              label: i18n.t("Gi\xE1 tr\u1ECB chuy\u1EC3n \u0111\u1ED5i")
            },
            inputNumberProps: {
              placeholder: "0",
              min: 0,
              style: { width: "180px" }
            }
          })
        ]
      }),
      /* @__PURE__ */ jsxRuntime.jsx(InputConfig.InputConfig, {
        separateDevice,
        propKey: idGoogleAdsPropKey,
        formItemProps: {
          label: i18n.t("ID chuy\u1EC3n \u0111\u1ED5i Google Ads"),
          style: {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            marginBottom: "0.5rem"
          }
        },
        inputProps: {
          placeholder: i18n.t("ID chuy\u1EC3n \u0111\u1ED5i"),
          style: { width: "180px" }
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(InputConfig.InputConfig, {
        separateDevice,
        propKey: labelGoogleAdsPropKey,
        formItemProps: {
          label: i18n.t("Nh\xE3n chuy\u1EC3n \u0111\u1ED5i Google Ads"),
          style: {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            marginBottom: "0.5rem"
          }
        },
        inputProps: {
          placeholder: i18n.t("Nh\xE3n chuy\u1EC3n \u0111\u1ED5i"),
          style: { width: "180px" }
        }
      }),
      /* @__PURE__ */ jsxRuntime.jsx(React__default["default"].Suspense, {
        fallback: /* @__PURE__ */ jsxRuntime.jsx("div", {}),
        children: /* @__PURE__ */ jsxRuntime.jsx(FormItem.FormItem, {
          label: i18n.t("M\xE3 t\xF9y ch\u1EC9nh n\xE2ng cao (kh\xF4ng b\u1EAFt bu\u1ED9c)"),
          children: /* @__PURE__ */ jsxRuntime.jsx(AceEditor, {
            ref: (ref) => setAceEditor(ref),
            placeholder: "VD: fbq('track', 'Purchase', {currency: 'VND', value: 300000})",
            mode: "javascript",
            fontSize: 14,
            height: "200px",
            width: "100%",
            setOptions: {
              showLineNumbers: true,
              tabSize: 2
            },
            highlightActiveLine: true,
            value: coreRenderer.unescapeString(script),
            onChange: (value) => setScript(coreRenderer.escapeString(value)),
            showPrintMargin: true,
            showGutter: true
          })
        })
      })
    ]
  });
};

exports.TrackingConfig = TrackingConfig;
