'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var reactIcons = require('@fluentui/react-icons');
var antd = require('antd');
var React = require('react');
var usePropSeparateDevice = require('../../hooks/usePropSeparateDevice.js');
var FormItem = require('../../components/FormItem/FormItem.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const InputSelectConfig = ({
  propKey,
  formItemProps,
  options,
  value: defaultValue,
  onChange,
  width = 100,
  inputProps
}) => {
  const [prop, setProp] = usePropSeparateDevice.usePropSeparateDevice(propKey);
  const [value, setValue] = React.useState(defaultValue);
  const onChangeValue = (value2) => {
    if (value2 === (defaultValue || prop))
      return;
    if (typeof onChange === "function") {
      onChange(value2);
      return;
    }
    setProp(value2);
  };
  React.useEffect(() => {
    if (typeof defaultValue !== "undefined")
      setValue(defaultValue);
    else
      setValue(prop);
  }, [defaultValue, prop]);
  return /* @__PURE__ */ jsxRuntime.jsx(FormItem.FormItem, __spreadProps(__spreadValues({}, formItemProps), {
    children: /* @__PURE__ */ jsxRuntime.jsx(StyledDropdown, {
      menu: {
        items: options,
        selectedKeys: [value == null ? void 0 : value.toString()],
        onClick: ({ key }) => onChangeValue(key)
      },
      trigger: ["click"],
      children: /* @__PURE__ */ jsxRuntime.jsx(StyledWrapper, {
        width,
        children: /* @__PURE__ */ jsxRuntime.jsx(antd.Input, __spreadValues({
          value,
          bordered: false,
          suffix: /* @__PURE__ */ jsxRuntime.jsx(reactIcons.ChevronDown16Regular, {}),
          onChange: (e) => setValue(e.target.value),
          onPressEnter: () => onChangeValue(value),
          onBlur: () => onChangeValue(value)
        }, inputProps))
      })
    })
  }));
};
const StyledWrapper = styled__default["default"].div(
  ({ width, theme }) => `
  width: ${typeof width === "number" ? width + "px" : width};
  position: relative;

  &:hover {
    cursor: pointer;

    &::before {
      content: '';
      background: ${theme == null ? void 0 : theme.colorPrimaryBgHover};
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      border-radius: 8px;
    }

    * {
      color: ${theme == null ? void 0 : theme.colorPrimaryHover};
    }
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  input[type=number] {
    -moz-appearance: textfield;
  }
`
);
const StyledDropdown = styled__default["default"](antd.Dropdown)`
  min-width: unset !important;
`;

exports.InputSelectConfig = InputSelectConfig;
