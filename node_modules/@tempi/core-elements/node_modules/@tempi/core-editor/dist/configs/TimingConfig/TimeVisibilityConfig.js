'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var i18n = require('../../i18n.js');
var antd = require('antd');
var reactFrameComponent = require('react-frame-component');
var TimingConfig = require('./TimingConfig.js');
var usePropSeparateDevice = require('../../hooks/usePropSeparateDevice.js');
var propKey = require('../../constants/propKey.js');

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const TimeVisibilityConfig = ({
  propKey: propKey$1,
  separateDevice = false,
  visible,
  setVisible
}) => {
  const [startTime, setStartTime] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.TimeVisibility, propKey.PROP_KEY.StartTime),
    separateDevice
  );
  const [endTime, setEndTime] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.TimeVisibility, propKey.PROP_KEY.EndTime),
    separateDevice
  );
  const [ruleRepeat, setRuleRepeat] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.TimeVisibility, propKey.PROP_KEY.RuleRepeat),
    separateDevice
  );
  const [date, setDate] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.TimeVisibility, propKey.PROP_KEY.Date),
    separateDevice
  );
  const [duration, setDuration] = usePropSeparateDevice.usePropSeparateDevice(
    propKey.PROP_KEY.joinKey(propKey$1, propKey.PROP_KEY.TimeVisibility, propKey.PROP_KEY.Duration),
    separateDevice
  );
  const { document: frameDocument } = reactFrameComponent.useFrame();
  return /* @__PURE__ */ jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: /* @__PURE__ */ jsxRuntime.jsx(antd.Modal, {
      title: i18n.t("\u0110\u1EB7t gi\u1EDD hi\u1EC3n th\u1ECB"),
      onCancel: () => setVisible(false),
      open: visible,
      destroyOnClose: true,
      bodyStyle: { paddingTop: 0 },
      getContainer: () => (frameDocument == null ? void 0 : frameDocument.body) || (document == null ? void 0 : document.body),
      closable: false,
      footer: [
        /* @__PURE__ */ jsxRuntime.jsx(antd.Button, {
          type: "primary",
          shape: "round",
          onClick: () => setVisible(false),
          children: i18n.t("\u0110\xF3ng")
        })
      ],
      zIndex: 1080,
      children: /* @__PURE__ */ jsxRuntime.jsx(TimingConfig.TimingConfig, __spreadValues({}, {
        startTime,
        endTime,
        ruleRepeat,
        date,
        duration,
        setDate,
        setStartTime,
        setEndTime,
        setRuleRepeat,
        setDuration
      }))
    })
  });
};

exports.TimeVisibilityConfig = TimeVisibilityConfig;
