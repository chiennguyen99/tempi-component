import { jsx } from 'react/jsx-runtime';
import dayjs from 'dayjs';
import { useMemo } from 'react';
import { DatePicker } from 'antd';
import { useProp } from '../../hooks/useProp.es.js';
import { FormItem } from '../../components/FormItem/FormItem.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const { RangePicker } = DatePicker;
const RangePickerConfig = ({
  propKeyStart,
  propKeyEnd,
  rangePickerProps,
  formItemProps
}) => {
  const [start, setStart] = useProp(propKeyStart);
  const [end, setEnd] = useProp(propKeyEnd);
  const value = useMemo(() => {
    if (start && end)
      return [dayjs(start), dayjs(end)];
    return [void 0, void 0];
  }, [start, end]);
  const handleChange = (values) => {
    if (!values) {
      setStart(void 0);
      setEnd(void 0);
      return;
    }
    const [_start, _end] = values;
    setStart(_start.toISOString());
    setEnd(_end.toISOString());
  };
  return /* @__PURE__ */ jsx(FormItem, __spreadProps(__spreadValues({}, formItemProps), {
    children: /* @__PURE__ */ jsx(RangePicker, __spreadValues({
      allowClear: false,
      value,
      onChange: handleChange,
      format: "DD-MM-YYYY HH:mm:ss"
    }, rangePickerProps))
  }));
};

export { RangePickerConfig };
