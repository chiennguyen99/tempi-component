import { jsx } from 'react/jsx-runtime';
import { useNode } from '@tempi/dnd-core';
import { crafting } from '../utils/craft.es.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const withSelector = (WrappedComponent, craftOptions, wrapperProps) => {
  const ComponentWithSelector = (props) => {
    const {
      connectors: { connect, drag }
    } = useNode();
    return /* @__PURE__ */ jsx("div", __spreadProps(__spreadValues({
      ref: (ref) => connect(drag(ref))
    }, wrapperProps), {
      children: /* @__PURE__ */ jsx(WrappedComponent, __spreadValues({
        isEditingMode: true,
        isEditor: true,
        isEditorMode: true
      }, props))
    }));
  };
  ComponentWithSelector.craft = crafting(craftOptions);
  return ComponentWithSelector;
};
const withSelectorDirectElement = (WrappedComponent, craftOptions) => {
  const ComponentWithSelector = (props) => {
    const {
      connectors: { connect, drag }
    } = useNode();
    return /* @__PURE__ */ jsx(WrappedComponent, __spreadValues({
      ref: (ref) => connect(drag(ref)),
      isEditingMode: true,
      isEditor: true
    }, props));
  };
  ComponentWithSelector.craft = crafting(craftOptions);
  return ComponentWithSelector;
};

export { withSelector, withSelectorDirectElement };
