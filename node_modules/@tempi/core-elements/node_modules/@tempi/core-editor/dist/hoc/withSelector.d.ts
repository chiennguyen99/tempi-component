import { NodeRules } from '@tempi/dnd-core';
import React from 'react';
export interface CraftOptions<S> {
    displayName: string;
    tag: string;
    isCanvas?: boolean;
    props?: S;
    rules?: Partial<NodeRules>;
    customAttributes?: React.FC<any>;
    advanceAttributes?: React.FC<any>;
    effectAttributes?: React.FC<any>;
    commonAttributes?: React.FC<any>;
    quickSetting?: React.FC;
}
export declare const withSelector: <T extends {}, S extends {}>(WrappedComponent: React.ComponentType<T>, craftOptions: CraftOptions<S>, wrapperProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => {
    (props: T): JSX.Element;
    craft: {
        displayName: string;
        isCanvas?: boolean;
        props: {
            responsive: import("@tempi/core-renderer").Responsive;
            commonStyle: import("@tempi/core-renderer").Style;
        } & S;
        related: any;
        rules: Partial<NodeRules>;
        custom: any;
    };
};
export declare const withSelectorDirectElement: <T extends {}, S extends {}>(WrappedComponent: React.ComponentType<T>, craftOptions: CraftOptions<S>) => {
    (props: T): JSX.Element;
    craft: {
        displayName: string;
        isCanvas?: boolean;
        props: {
            responsive: import("@tempi/core-renderer").Responsive;
            commonStyle: import("@tempi/core-renderer").Style;
        } & S;
        related: any;
        rules: Partial<NodeRules>;
        custom: any;
    };
};
//# sourceMappingURL=withSelector.d.ts.map