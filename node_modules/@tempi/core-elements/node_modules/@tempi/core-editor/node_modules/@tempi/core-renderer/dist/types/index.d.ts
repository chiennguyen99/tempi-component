export * from './style';
export * from './common';
export * from './render';
export * from './tracking';
export * from './endpoint';
import { Style } from './style';
import { TimeVisibility, ResponsiveResource, CommonAttributesInterface } from './common';
import { Device } from './render';
import { Endpoint } from './endpoint';
export type BaseElementInterface = CommonAttributesInterface & {
    [key: string]: any;
};
export type PBComponent<T extends {
    [key: string]: BaseElementInterface;
} = {}> = TimeVisibility & {
    id: string;
    elementId?: string;
    parentId: string | null;
    tag: keyof T;
    version?: string;
    displayName?: string;
    resolvedName: string;
    style?: ResponsiveResource<Style>;
    isActive: boolean;
    children: string[];
    isCanvas?: boolean;
    customAttributes?: T;
};
export interface PageBuilderResponse<T extends {
    [key: string]: BaseElementInterface;
} = {}> {
    [key: string]: PBComponent<T>;
}
export interface GetPublicPageParams {
    device: Device;
    slug: string;
    appliedDomain?: string;
    languageCode?: string;
    password?: string | null;
}
export interface Theme {
    primaryColor?: string;
    borderRadius?: number;
}
export interface IPageExtraInfo {
    metaTitle?: string;
    metaDescription?: string;
    metaImage?: string;
    metaKeywords?: string[];
    faviconUrl?: string;
    noIndex?: boolean;
    tekoTrackingWebDesktop?: string;
    tekoTrackingWebMobile?: string;
    languageCode?: string;
    facebookPixelId?: string;
    googleAnalyticsId?: string;
    googleTagManagerId?: string;
    googleAdsId?: string;
    tiktokPixelId?: string;
    headContentHtml?: string;
    bodyContentHtml?: string;
    theme?: Theme;
    menuLayout?: 'horizontal' | 'vertical';
}
export interface Page {
    id?: number;
    isHomepage?: boolean;
    slug?: string;
    roles?: string[];
    password?: string;
}
export type MenuLayout = 'horizontal' | 'vertical';
export interface Theme {
    primaryColor?: string;
    borderRadius?: number;
}
export interface WebsiteMenu {
    id: string;
    name: string;
    target?: 'SELF' | 'BLANK';
    isHidden?: boolean;
    linkType?: 'LINK' | 'PAGE';
    linkPageId?: number;
    page?: Page;
    parentId?: string;
    href?: string;
    nofollow?: boolean;
    iconUrl?: string;
    isActive?: boolean;
}
export interface WebsiteLanguage {
    id: number;
    languageCode?: string;
    countryCode?: string;
    languageName?: string;
    languageLocalizeName?: string;
}
export interface ArticleInfo {
    authorName?: string;
    publishedAt?: number;
}
export interface ArticleCategoryInterface {
    id: number;
    name: string;
    websiteId?: number;
}
export interface PublicPageResponse<T extends {
    [key: string]: BaseElementInterface;
} = {}> {
    id: number;
    name?: string;
    pbConfig?: PageBuilderResponse<T>;
    content?: PageBuilderResponse<T>;
    designMode?: 'responsive' | 'mobile-only' | 'adaptive';
    extraInfo?: IPageExtraInfo;
    canonical?: string;
    menu?: WebsiteMenu[];
    isHomepage?: boolean;
    isValidLicense?: boolean;
    websiteId?: number;
    articleInfo?: ArticleInfo;
    categories?: ArticleCategoryInterface[];
    endpoints?: Endpoint[];
    slug?: string;
    languages?: WebsiteLanguage[];
    languageCode?: string;
    actionsForToxicContent?: string[];
}
export interface GlobalData {
    menu?: WebsiteMenu[];
    menuLayout?: MenuLayout;
    theme?: Theme;
    endpoints?: Endpoint[];
    websiteId?: number;
    page?: PublicPageResponse;
    isPreviewMode?: boolean;
    userPhoneNumber?: string;
    isDisableLuckyDrawPhoneInput?: boolean;
    languages?: WebsiteLanguage[];
    currentLanguage?: WebsiteLanguage;
    prefixLangUrl?: string;
}
export interface IUser {
    sub: string;
    name: string;
    picture: string;
    email: string;
    phone_number: string;
    roles: string[];
    permissions: string[];
    meta_data: any;
    tenant_id: string;
}
//# sourceMappingURL=index.d.ts.map