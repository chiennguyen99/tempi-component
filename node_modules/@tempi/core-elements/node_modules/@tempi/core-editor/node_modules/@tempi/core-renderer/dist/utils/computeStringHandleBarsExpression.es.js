import get from 'lodash.get';

const computeStringHandleBarsExpression = (str, inputs) => {
  const returnStr = str.replaceAll(/"{{([\w,.]*)}}"/g, (i) => {
    const value = get(inputs, i.replace(/"{{/, "").replace(/}}"/, ""));
    return JSON.stringify(value);
  });
  return returnStr.replaceAll(/{{([\w,.]*)}}/g, (i) => {
    var _a;
    const value = get(inputs, i.replace(/{{/, "").replace(/}}/, ""));
    return typeof value === "string" || typeof value === "number" ? (_a = value == null ? void 0 : value.toString) == null ? void 0 : _a.call(value) : i;
  });
};
const getAllHandleBarsVariables = (str) => {
  return (str.match(/{{([\w,.]*)}}/g) || []).map(
    (el) => el.replace(/{{/, "").replace(/}}/, "")
  );
};
const isHandleBarsVariable = (str) => {
  if (!str)
    return false;
  const regex = /{{([\w,.]*)}}/g;
  return regex.test(str);
};

export { computeStringHandleBarsExpression, getAllHandleBarsVariables, isHandleBarsVariable };
