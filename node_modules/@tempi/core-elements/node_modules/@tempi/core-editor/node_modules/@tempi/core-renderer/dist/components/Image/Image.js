'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styled = require('@emotion/styled');
var React = require('react');
var useAnimation = require('../../hooks/useAnimation.js');
var Preview = require('./Preview.js');
var clsx = require('clsx');
var transform = require('../../utils/transform.js');
var image = require('../../utils/image.js');
var BreakpointWidthContext = require('../../contexts/BreakpointWidthContext.js');
var getBreakpointWidthFromStyle = require('../../utils/getBreakpointWidthFromStyle.js');
var ImageOptimize = require('../ImageOptimize/ImageOptimize.js');
var track = require('../../utils/track.js');
var Link = require('../Link/Link.js');
var mappingAssets = require('../../constants/mapping-assets.js');
var getOffset = require('../../utils/getOffset.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var clsx__default = /*#__PURE__*/_interopDefaultLegacy(clsx);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const { defaultImage } = mappingAssets.mappingAssets;
const ImageWrapper = styled__default["default"].div(
  ({
    alignment,
    customStyle
  }) => `
    text-align: ${alignment};
    ${transform.getStyle(customStyle)}
  `
);
const funcWrapperImage = ({ commonStyle }) => `
    max-width: 100%;
    vertical-align: top;
    display: inline-block;
    transition: transform 0.3s;
    overflow: hidden;
    position: relative;
    object-fit: cover;
    object-position: inherit;
    ${transform.getStyle(commonStyle)}
    &:before {
      z-index: 1;
    }
  `;
const StyledImageWrapperDiv = styled__default["default"].div(funcWrapperImage);
const StyledImageWrapperPicture = styled__default["default"].picture(funcWrapperImage);
const StyledImage = styled__default["default"].img(
  ({
    ratioWidth,
    ratioHeight,
    src
  }) => `
  width: 100%;
  height: 100%;
  border-radius: inherit;
  object-fit: inherit;
  &.preview {
    cursor: zoom-in;
  }
  aspect-ratio: ${!!src ? `auto ${ratioWidth} / ${ratioHeight}` : "unset"};
`
);
const PlaceholderImage = styled__default["default"].img`
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  object-fit: inherit;
  object-position: inherit;
`;
const ImageBase = React__default["default"].forwardRef(
  (props, ref) => {
    var _b;
    const _a = props, {
      src,
      alt = "",
      commonStyle,
      alignment = "center",
      event,
      googleImageParams,
      isEditingMode = false,
      zoomPreview = false,
      fetchPriority = "auto",
      showPlaceholder = true,
      autoOptimize = true,
      linkStyle,
      imageWrapperStyle,
      isPreview = true,
      isLinkConfig = true,
      width,
      height
    } = _a, rest = __objRest(_a, [
      "src",
      "alt",
      "commonStyle",
      "alignment",
      "event",
      "googleImageParams",
      "isEditingMode",
      "zoomPreview",
      "fetchPriority",
      "showPlaceholder",
      "autoOptimize",
      "linkStyle",
      "imageWrapperStyle",
      "isPreview",
      "isLinkConfig",
      "width",
      "height"
    ]);
    const { tekoTrackingEvent } = event || {};
    const imageRef = React.useRef(null);
    const [showPreview, setShowPreview] = React.useState(false);
    const [mousePosition, setMousePosition] = React.useState();
    const handleOpenPreview = (e) => {
      if (!zoomPreview)
        return;
      const { left, top } = getOffset.getOffset(e.target);
      setMousePosition({
        left,
        top,
        width: e.target.clientWidth
      });
      setShowPreview(true);
    };
    const imageWrapperRef = React.useRef(null);
    const mergedWrapperRef = ref || imageWrapperRef;
    const { style: animationStyle, animationClassName } = useAnimation.useAnimation(
      commonStyle == null ? void 0 : commonStyle.animation,
      mergedWrapperRef
    );
    const [fullLoaded, setFullLoaded] = React.useState(false);
    const newSrc = image.getImageUrlFromGoogleUserContent(
      src,
      image.preProcesssorGoogleImageParams(googleImageParams, { format: "webp" })
    );
    const pngSrc = image.getImageUrlFromGoogleUserContent(
      src,
      image.preProcesssorGoogleImageParams(googleImageParams, { format: "png" })
    );
    const imgError = (image2) => {
      image2.target.src = defaultImage;
      return;
    };
    const placeholderSrc = showPlaceholder ? image.formatImageUrlQuality(newSrc, 200) : "";
    const allowOptimzeImage = autoOptimize && (googleImageParams == null ? void 0 : googleImageParams.width);
    const visiblePlaceholder = showPlaceholder && !fullLoaded && placeholderSrc !== newSrc;
    const fallbackImage = /* @__PURE__ */ jsxRuntime.jsx(StyledImage, {
      ref: imageRef,
      src: newSrc,
      alt,
      ratioWidth: width != null ? width : 16,
      ratioHeight: height != null ? height : 9,
      onError: imgError,
      decoding: "async",
      className: clsx__default["default"]("lazyload", { preview: zoomPreview }),
      loading: fetchPriority === "high" ? "eager" : "lazy",
      fetchpriority: fetchPriority,
      onLoad: () => {
        setFullLoaded(true);
      },
      onClick: handleOpenPreview
    });
    const image$1 = allowOptimzeImage && !!src ? /* @__PURE__ */ jsxRuntime.jsxs(StyledImageWrapperPicture, {
      ref: mergedWrapperRef,
      commonStyle,
      style: animationStyle,
      className: animationClassName,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(ImageOptimize.ImageOptimize, {
          src: newSrc,
          googleImageParams
        }),
        pngSrc && /* @__PURE__ */ jsxRuntime.jsx("source", {
          srcSet: pngSrc,
          type: "image/png"
        }),
        fallbackImage
      ]
    }) : /* @__PURE__ */ jsxRuntime.jsxs(StyledImageWrapperDiv, {
      ref: mergedWrapperRef,
      commonStyle,
      style: animationStyle,
      className: animationClassName,
      children: [
        fallbackImage,
        visiblePlaceholder && /* @__PURE__ */ jsxRuntime.jsx(PlaceholderImage, {
          src: placeholderSrc,
          alt,
          onError: imgError,
          fetchpriority: "high"
        })
      ]
    });
    React.useEffect(() => {
      if ((imageRef == null ? void 0 : imageRef.current) !== void 0 && imageRef.current.complete !== fullLoaded)
        setFullLoaded(imageRef.current.complete);
    }, [(_b = imageRef == null ? void 0 : imageRef.current) == null ? void 0 : _b.complete, fullLoaded]);
    const renderImg = () => {
      var _a2;
      const coreImg = /* @__PURE__ */ jsxRuntime.jsx(ImageWrapper, __spreadProps(__spreadValues(__spreadValues(__spreadValues({
        customStyle: imageWrapperStyle,
        alignment
      }, track.getAttrTracking(tekoTrackingEvent)), tekoTrackingEvent ? tekoTrackingEvent : {}), rest), {
        children: image$1
      }));
      return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
          isLinkConfig ? /* @__PURE__ */ jsxRuntime.jsx(Link.Link, __spreadProps(__spreadValues({
            style: linkStyle
          }, event), {
            children: coreImg
          })) : coreImg,
          isPreview ? /* @__PURE__ */ jsxRuntime.jsx(Preview.Preview, {
            src: newSrc || pngSrc || ((_a2 = imageRef.current) == null ? void 0 : _a2.currentSrc),
            open: showPreview,
            onClose: () => {
              setShowPreview(false);
            },
            mousePosition
          }) : null
        ]
      });
    };
    return /* @__PURE__ */ jsxRuntime.jsx(BreakpointWidthContext.BreakpointWidthProvider, {
      sWidth: getBreakpointWidthFromStyle.getBreakpointWidthFromStyle(commonStyle),
      mWidth: getBreakpointWidthFromStyle.getBreakpointWidthFromStyle(commonStyle),
      children: isEditingMode ? image$1 : renderImg()
    });
  }
);

exports.ImageBase = ImageBase;
