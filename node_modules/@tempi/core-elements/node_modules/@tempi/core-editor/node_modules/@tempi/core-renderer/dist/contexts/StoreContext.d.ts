import React from 'react';
import { Env, Device, GlobalData, IUser } from '../types';
export type BaseStoreState = {
    env?: Env;
    device?: Device;
    mappingDynamicSlots?: {
        [tag: string]: React.ComponentType;
    };
    globalData?: GlobalData;
    auth?: {
        user?: IUser;
        getAccessToken?: () => string;
        logout?: () => void;
    };
    featureFlags?: {
        [key: string]: boolean;
    };
};
export type StoreState<S extends BaseStoreState> = S & {
    mappingWebsiteMenuHref?: Record<string, string>;
};
export type StoreProviderProps<S = BaseStoreState> = StoreState<S> & {
    children: React.ReactNode;
};
export declare const StoreProvider: <S = {}>({ children, device, ...rest }: StoreProviderProps<S & BaseStoreState>) => JSX.Element;
export declare function useStore<S = {}>(): StoreState<S & BaseStoreState>;
//# sourceMappingURL=StoreContext.d.ts.map