import { BaseElementInterface, BuilderConfig, Device, GetPublicPageParams, PageBuilderResponse, PBComponent, PublicPageResponse, SSRInputs } from './types';
declare class Builder {
    private domain;
    private pageManagementClient;
    private internalClient;
    static ITEMS_PER_PAGE: number;
    init(domain: string, config?: BuilderConfig): void;
    getPublicPage(params?: any, internal?: boolean): Promise<any>;
    getPublicPageV2<T extends {
        [key: string]: BaseElementInterface;
    } = {}>(params: GetPublicPageParams, internal?: boolean): Promise<PublicPageResponse<T>>;
    getPrivatePageV2<T extends {
        [key: string]: BaseElementInterface;
    } = {}>(params: GetPublicPageParams, headers?: Record<string, any>): Promise<PublicPageResponse<T>>;
    getSSRInputs<T extends {
        [key: string]: BaseElementInterface;
    }, S>(pbConfig: PageBuilderResponse<T>, option: {
        device?: Device;
        ssrComponentTags: string[];
        getSlotDataFunc: (config: PBComponent<T>, device: Device) => S[];
    }): SSRInputs<S>;
}
export declare const builder: Builder;
export {};
//# sourceMappingURL=builder.d.ts.map