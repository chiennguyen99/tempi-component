'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var BreakpointWidthContext = require('../../contexts/BreakpointWidthContext.js');
var getSrcSetImageWidth = require('../../utils/getSrcSetImageWidth.js');
var root = require('../../constants/root.js');
var buildSrcset = require('../../utils/buildSrcset.js');
var buildSizes = require('../../utils/buildSizes.js');

const ImageOptimize = ({
  src,
  googleImageParams
}) => {
  const breakpointWidth = BreakpointWidthContext.useBreakpointWidth();
  const { sWidth, mWidth } = getSrcSetImageWidth.getSrcSetImageWidth(
    googleImageParams.width,
    breakpointWidth
  );
  if (!src)
    return null;
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ jsxRuntime.jsx("source", {
        media: `(max-width: ${root.MINESTONE_M_WIDTH}px)`,
        srcSet: buildSrcset.buildSrcset(src, sWidth),
        sizes: buildSizes.buildSizes(breakpointWidth.sWidth),
        type: "image/webp"
      }),
      /* @__PURE__ */ jsxRuntime.jsx("source", {
        srcSet: buildSrcset.buildSrcset(src, mWidth),
        sizes: buildSizes.buildSizes(breakpointWidth.mWidth),
        type: "image/webp"
      })
    ]
  });
};

exports.ImageOptimize = ImageOptimize;
