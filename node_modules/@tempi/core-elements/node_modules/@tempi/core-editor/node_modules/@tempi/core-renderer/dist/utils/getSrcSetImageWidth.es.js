import { MINESTONE_M_WIDTH, MAX_DPR } from '../constants/root.es.js';
import { isAbsoluteWidth } from './isAbsoluteWidth.es.js';

const generateArraySrcSet = (min, max) => {
  const arr = [];
  let i = 1;
  while (min * i < max) {
    if (i > 100)
      return arr;
    arr.push(min * i);
    i++;
  }
  arr.push(max);
  return arr;
};
const getSrcSetImageWidth = (maxWidthImage, breakpointWidth) => {
  const breakpointWidthS = breakpointWidth.sWidth;
  let sWidth;
  if (isAbsoluteWidth(breakpointWidthS)) {
    const minSrcSetWidth = breakpointWidthS.value;
    const maxSrcSetWidth = Math.min(maxWidthImage, minSrcSetWidth * MAX_DPR);
    sWidth = generateArraySrcSet(minSrcSetWidth, maxSrcSetWidth);
  } else {
    const minSrcSetWidth = Math.floor(
      breakpointWidthS.value * MINESTONE_M_WIDTH / 100
    );
    const maxSrcSetWidth = Math.min(maxWidthImage, minSrcSetWidth * MAX_DPR);
    sWidth = generateArraySrcSet(minSrcSetWidth, maxSrcSetWidth);
  }
  let mWidth;
  const breakpointWidthM = breakpointWidth.mWidth;
  if (isAbsoluteWidth(breakpointWidthM)) {
    const minSrcSetWidth = breakpointWidthM.value;
    const maxSrcSetWidth = Math.min(maxWidthImage, minSrcSetWidth * MAX_DPR);
    mWidth = generateArraySrcSet(minSrcSetWidth, maxSrcSetWidth);
  } else {
    const minSrcSetWidth = Math.floor(
      breakpointWidthM.value * MINESTONE_M_WIDTH / 100
    );
    const maxSrcSetWidth = maxWidthImage;
    mWidth = generateArraySrcSet(minSrcSetWidth, maxSrcSetWidth);
  }
  return {
    sWidth,
    mWidth
  };
};

export { getSrcSetImageWidth };
