import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { useBreakpointWidth } from '../../contexts/BreakpointWidthContext.es.js';
import { getSrcSetImageWidth } from '../../utils/getSrcSetImageWidth.es.js';
import { MINESTONE_M_WIDTH } from '../../constants/root.es.js';
import { buildSrcset } from '../../utils/buildSrcset.es.js';
import { buildSizes } from '../../utils/buildSizes.es.js';

const ImageOptimize = ({
  src,
  googleImageParams
}) => {
  const breakpointWidth = useBreakpointWidth();
  const { sWidth, mWidth } = getSrcSetImageWidth(
    googleImageParams.width,
    breakpointWidth
  );
  if (!src)
    return null;
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx("source", {
        media: `(max-width: ${MINESTONE_M_WIDTH}px)`,
        srcSet: buildSrcset(src, sWidth),
        sizes: buildSizes(breakpointWidth.sWidth),
        type: "image/webp"
      }),
      /* @__PURE__ */ jsx("source", {
        srcSet: buildSrcset(src, mWidth),
        sizes: buildSizes(breakpointWidth.mWidth),
        type: "image/webp"
      })
    ]
  });
};

export { ImageOptimize };
