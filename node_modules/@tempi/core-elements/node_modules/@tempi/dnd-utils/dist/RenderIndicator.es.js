import { jsx } from 'react/jsx-runtime';
import ReactDOM from 'react-dom';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const RenderIndicator = ({ style, parentDom }) => {
  const indicator = /* @__PURE__ */ jsx("div", {
    style: __spreadValues({
      position: "fixed",
      display: "block",
      opacity: 1,
      borderStyle: "solid",
      borderWidth: "1px",
      borderColor: "transparent",
      zIndex: 99999
    }, style)
  });
  if (parentDom && parentDom.ownerDocument !== document) {
    return ReactDOM.createPortal(indicator, parentDom.ownerDocument.body);
  }
  return indicator;
};

export { RenderIndicator };
