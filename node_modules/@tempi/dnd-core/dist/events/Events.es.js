import { jsxs, jsx } from 'react/jsx-runtime';
import { useContext, useMemo } from 'react';
import { EventHandlerContext } from './EventContext.es.js';
import { RenderEditorIndicator } from './RenderEditorIndicator.es.js';
import { EditorContext } from '../editor/EditorContext.es.js';

const Events = ({ children }) => {
  const store = useContext(EditorContext);
  const handler = useMemo(
    () => store.query.getOptions().handlers(store),
    [store]
  );
  if (!handler) {
    return null;
  }
  return /* @__PURE__ */ jsxs(EventHandlerContext.Provider, {
    value: handler,
    children: [
      /* @__PURE__ */ jsx(RenderEditorIndicator, {}),
      children
    ]
  });
};

export { Events };
